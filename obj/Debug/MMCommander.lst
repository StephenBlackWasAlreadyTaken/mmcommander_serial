                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.0 #8981 (Apr  5 2014) (MINGW64)
                                      4 ; This file was generated Fri Apr 24 20:03:56 2015
                                      5 ;--------------------------------------------------------
                                      6 	.module MMCommander
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _main
                                     13 	.globl _usbUartProcess
                                     14 	.globl _halUartWrite
                                     15 	.globl _halUartInit
                                     16 	.globl _usbReceiveData
                                     17 	.globl _receiveMedtronicMessage
                                     18 	.globl _enablePushButtonInt
                                     19 	.globl _initGlobals
                                     20 	.globl _configureMedtronicRFMode
                                     21 	.globl _configureOsc
                                     22 	.globl _configureIO
                                     23 	.globl _crc16Init
                                     24 	.globl _MODE
                                     25 	.globl _RE
                                     26 	.globl _SLAVE
                                     27 	.globl _FE
                                     28 	.globl _ERR
                                     29 	.globl _RX_BYTE
                                     30 	.globl _TX_BYTE
                                     31 	.globl _ACTIVE
                                     32 	.globl _B_7
                                     33 	.globl _B_6
                                     34 	.globl _B_5
                                     35 	.globl _B_4
                                     36 	.globl _B_3
                                     37 	.globl _B_2
                                     38 	.globl _B_1
                                     39 	.globl _B_0
                                     40 	.globl _WDTIF
                                     41 	.globl _P1IF
                                     42 	.globl _UTX1IF
                                     43 	.globl _UTX0IF
                                     44 	.globl _P2IF
                                     45 	.globl _ACC_7
                                     46 	.globl _ACC_6
                                     47 	.globl _ACC_5
                                     48 	.globl _ACC_4
                                     49 	.globl _ACC_3
                                     50 	.globl _ACC_2
                                     51 	.globl _ACC_1
                                     52 	.globl _ACC_0
                                     53 	.globl _OVFIM
                                     54 	.globl _T4CH1IF
                                     55 	.globl _T4CH0IF
                                     56 	.globl _T4OVFIF
                                     57 	.globl _T3CH1IF
                                     58 	.globl _T3CH0IF
                                     59 	.globl _T3OVFIF
                                     60 	.globl _CY
                                     61 	.globl _AC
                                     62 	.globl _F0
                                     63 	.globl _RS1
                                     64 	.globl _RS0
                                     65 	.globl _OV
                                     66 	.globl _F1
                                     67 	.globl _P
                                     68 	.globl _STIF
                                     69 	.globl _P0IF
                                     70 	.globl _T4IF
                                     71 	.globl _T3IF
                                     72 	.globl _T2IF
                                     73 	.globl _T1IF
                                     74 	.globl _DMAIF
                                     75 	.globl _P0IE
                                     76 	.globl _T4IE
                                     77 	.globl _T3IE
                                     78 	.globl _T2IE
                                     79 	.globl _T1IE
                                     80 	.globl _DMAIE
                                     81 	.globl _EA
                                     82 	.globl _STIE
                                     83 	.globl _ENCIE
                                     84 	.globl _URX1IE
                                     85 	.globl _URX0IE
                                     86 	.globl _ADCIE
                                     87 	.globl _RFTXRXIE
                                     88 	.globl _P2_7
                                     89 	.globl _P2_6
                                     90 	.globl _P2_5
                                     91 	.globl _P2_4
                                     92 	.globl _P2_3
                                     93 	.globl _P2_2
                                     94 	.globl _P2_1
                                     95 	.globl _P2_0
                                     96 	.globl _ENCIF_1
                                     97 	.globl _ENCIF_0
                                     98 	.globl _P1_7
                                     99 	.globl _P1_6
                                    100 	.globl _P1_5
                                    101 	.globl _P1_4
                                    102 	.globl _P1_3
                                    103 	.globl _P1_2
                                    104 	.globl _P1_1
                                    105 	.globl _P1_0
                                    106 	.globl _URX1IF
                                    107 	.globl _ADCIF
                                    108 	.globl _URX0IF
                                    109 	.globl _IT1
                                    110 	.globl _RFTXRXIF
                                    111 	.globl _IT0
                                    112 	.globl _P0_7
                                    113 	.globl _P0_6
                                    114 	.globl _P0_5
                                    115 	.globl _P0_4
                                    116 	.globl _P0_3
                                    117 	.globl _P0_2
                                    118 	.globl _P0_1
                                    119 	.globl _P0_0
                                    120 	.globl _P2DIR
                                    121 	.globl _P1DIR
                                    122 	.globl _P0DIR
                                    123 	.globl _U1GCR
                                    124 	.globl _U1UCR
                                    125 	.globl _U1BAUD
                                    126 	.globl _U1DBUF
                                    127 	.globl _U1CSR
                                    128 	.globl _P2INP
                                    129 	.globl _P1INP
                                    130 	.globl _P2SEL
                                    131 	.globl _P1SEL
                                    132 	.globl _P0SEL
                                    133 	.globl _ADCCFG
                                    134 	.globl _PERCFG
                                    135 	.globl _B
                                    136 	.globl _T4CC1
                                    137 	.globl _T4CCTL1
                                    138 	.globl _T4CC0
                                    139 	.globl _T4CCTL0
                                    140 	.globl _T4CTL
                                    141 	.globl _T4CNT
                                    142 	.globl _RFIF
                                    143 	.globl _IRCON2
                                    144 	.globl _T1CCTL2
                                    145 	.globl _T1CCTL1
                                    146 	.globl _T1CCTL0
                                    147 	.globl _T1CTL
                                    148 	.globl _T1CNTH
                                    149 	.globl _T1CNTL
                                    150 	.globl _RFST
                                    151 	.globl _ACC
                                    152 	.globl _T1CC2H
                                    153 	.globl _T1CC2L
                                    154 	.globl _T1CC1H
                                    155 	.globl _T1CC1L
                                    156 	.globl _T1CC0H
                                    157 	.globl _T1CC0L
                                    158 	.globl _RFD
                                    159 	.globl _TIMIF
                                    160 	.globl _DMAREQ
                                    161 	.globl _DMAARM
                                    162 	.globl _DMA0CFGH
                                    163 	.globl _DMA0CFGL
                                    164 	.globl _DMA1CFGH
                                    165 	.globl _DMA1CFGL
                                    166 	.globl _DMAIRQ
                                    167 	.globl _PSW
                                    168 	.globl _T3CC1
                                    169 	.globl _T3CCTL1
                                    170 	.globl _T3CC0
                                    171 	.globl _T3CCTL0
                                    172 	.globl _T3CTL
                                    173 	.globl _T3CNT
                                    174 	.globl _WDCTL
                                    175 	.globl __SFRC8
                                    176 	.globl _MEMCTR
                                    177 	.globl _CLKCON
                                    178 	.globl _U0GCR
                                    179 	.globl _U0UCR
                                    180 	.globl __SFRC3
                                    181 	.globl _U0BAUD
                                    182 	.globl _U0DBUF
                                    183 	.globl _IRCON
                                    184 	.globl __SFRBF
                                    185 	.globl _SLEEP
                                    186 	.globl _RNDH
                                    187 	.globl _RNDL
                                    188 	.globl _ADCH
                                    189 	.globl _ADCL
                                    190 	.globl _IP1
                                    191 	.globl _IEN1
                                    192 	.globl __SFRB7
                                    193 	.globl _ADCCON3
                                    194 	.globl _ADCCON2
                                    195 	.globl _ADCCON1
                                    196 	.globl _ENCCS
                                    197 	.globl _ENCDO
                                    198 	.globl _ENCDI
                                    199 	.globl __SFRB0
                                    200 	.globl _FWDATA
                                    201 	.globl _FCTL
                                    202 	.globl _FADDRH
                                    203 	.globl _FADDRL
                                    204 	.globl _FWT
                                    205 	.globl __SFRAA
                                    206 	.globl _IP0
                                    207 	.globl _IEN0
                                    208 	.globl __SFRA7
                                    209 	.globl _WORTIME1
                                    210 	.globl _WORTIME0
                                    211 	.globl _WOREVT1
                                    212 	.globl _WOREVT0
                                    213 	.globl _WORCTRL
                                    214 	.globl _WORIRQ
                                    215 	.globl _P2
                                    216 	.globl __SFR9F
                                    217 	.globl _T2CTL
                                    218 	.globl _T2PR
                                    219 	.globl _T2CT
                                    220 	.globl _S1CON
                                    221 	.globl _IEN2
                                    222 	.globl __SFR99
                                    223 	.globl _S0CON
                                    224 	.globl __SFR97
                                    225 	.globl __SFR96
                                    226 	.globl __SFR95
                                    227 	.globl __SFR94
                                    228 	.globl __XPAGE
                                    229 	.globl _MPAGE
                                    230 	.globl _DPS
                                    231 	.globl _RFIM
                                    232 	.globl _P1
                                    233 	.globl _P0INP
                                    234 	.globl __SFR8E
                                    235 	.globl _P1IEN
                                    236 	.globl _PICTL
                                    237 	.globl _P2IFG
                                    238 	.globl _P1IFG
                                    239 	.globl _P0IFG
                                    240 	.globl _TCON
                                    241 	.globl _PCON
                                    242 	.globl _U0CSR
                                    243 	.globl _DPH1
                                    244 	.globl _DPL1
                                    245 	.globl _DPH0
                                    246 	.globl _DPL0
                                    247 	.globl _SP
                                    248 	.globl _P0
                                    249 	.globl _uartRxIndex
                                    250 	.globl _uartTxIndex
                                    251 	.globl _uartTxLength
                                    252 	.globl _uartTxBuffer
                                    253 	.globl _uartRxBuffer
                                    254 	.globl _X_P2DIR
                                    255 	.globl _X_P1DIR
                                    256 	.globl _X_P0DIR
                                    257 	.globl _X_U1GCR
                                    258 	.globl _X_U1UCR
                                    259 	.globl _X_U1BAUD
                                    260 	.globl _X_U1DBUF
                                    261 	.globl _X_U1CSR
                                    262 	.globl _X_P2INP
                                    263 	.globl _X_P1INP
                                    264 	.globl _X_P2SEL
                                    265 	.globl _X_P1SEL
                                    266 	.globl _X_P0SEL
                                    267 	.globl _X_ADCCFG
                                    268 	.globl _X_PERCFG
                                    269 	.globl __NA_B
                                    270 	.globl _X_T4CC1
                                    271 	.globl _X_T4CCTL1
                                    272 	.globl _X_T4CC0
                                    273 	.globl _X_T4CCTL0
                                    274 	.globl _X_T4CTL
                                    275 	.globl _X_T4CNT
                                    276 	.globl _X_RFIF
                                    277 	.globl __NA_IRCON2
                                    278 	.globl _X_T1CCTL2
                                    279 	.globl _X_T1CCTL1
                                    280 	.globl _X_T1CCTL0
                                    281 	.globl _X_T1CTL
                                    282 	.globl _X_T1CNTH
                                    283 	.globl _X_T1CNTL
                                    284 	.globl _X_RFST
                                    285 	.globl __NA_ACC
                                    286 	.globl _X_T1CC2H
                                    287 	.globl _X_T1CC2L
                                    288 	.globl _X_T1CC1H
                                    289 	.globl _X_T1CC1L
                                    290 	.globl _X_T1CC0H
                                    291 	.globl _X_T1CC0L
                                    292 	.globl _X_RFD
                                    293 	.globl _X_TIMIF
                                    294 	.globl _X_DMAREQ
                                    295 	.globl _X_DMAARM
                                    296 	.globl _X_DMA0CFGH
                                    297 	.globl _X_DMA0CFGL
                                    298 	.globl _X_DMA1CFGH
                                    299 	.globl _X_DMA1CFGL
                                    300 	.globl _X_DMAIRQ
                                    301 	.globl __NA_PSW
                                    302 	.globl _X_T3CC1
                                    303 	.globl _X_T3CCTL1
                                    304 	.globl _X_T3CC0
                                    305 	.globl _X_T3CCTL0
                                    306 	.globl _X_T3CTL
                                    307 	.globl _X_T3CNT
                                    308 	.globl _X_WDCTL
                                    309 	.globl __X_SFRC8
                                    310 	.globl _X_MEMCTR
                                    311 	.globl _X_CLKCON
                                    312 	.globl _X_U0GCR
                                    313 	.globl _X_U0UCR
                                    314 	.globl __X_SFRC3
                                    315 	.globl _X_U0BAUD
                                    316 	.globl _X_U0DBUF
                                    317 	.globl __NA_IRCON
                                    318 	.globl __X_SFRBF
                                    319 	.globl _X_SLEEP
                                    320 	.globl _X_RNDH
                                    321 	.globl _X_RNDL
                                    322 	.globl _X_ADCH
                                    323 	.globl _X_ADCL
                                    324 	.globl __NA_IP1
                                    325 	.globl __NA_IEN1
                                    326 	.globl __X_SFRB7
                                    327 	.globl _X_ADCCON3
                                    328 	.globl _X_ADCCON2
                                    329 	.globl _X_ADCCON1
                                    330 	.globl _X_ENCCS
                                    331 	.globl _X_ENCDO
                                    332 	.globl _X_ENCDI
                                    333 	.globl __X_SFRB0
                                    334 	.globl _X_FWDATA
                                    335 	.globl _X_FCTL
                                    336 	.globl _X_FADDRH
                                    337 	.globl _X_FADDRL
                                    338 	.globl _X_FWT
                                    339 	.globl __X_SFRAA
                                    340 	.globl __NA_IP0
                                    341 	.globl __NA_IEN0
                                    342 	.globl __X_SFRA7
                                    343 	.globl _X_WORTIME1
                                    344 	.globl _X_WORTIME0
                                    345 	.globl _X_WOREVT1
                                    346 	.globl _X_WOREVT0
                                    347 	.globl _X_WORCTRL
                                    348 	.globl _X_WORIRQ
                                    349 	.globl __NA_P2
                                    350 	.globl __X_SFR9F
                                    351 	.globl _X_T2CTL
                                    352 	.globl _X_T2PR
                                    353 	.globl _X_T2CT
                                    354 	.globl __NA_S1CON
                                    355 	.globl __NA_IEN2
                                    356 	.globl __X_SFR99
                                    357 	.globl __NA_S0CON
                                    358 	.globl __X_SFR97
                                    359 	.globl __X_SFR96
                                    360 	.globl __X_SFR95
                                    361 	.globl __X_SFR94
                                    362 	.globl _X_MPAGE
                                    363 	.globl __NA_DPS
                                    364 	.globl _X_RFIM
                                    365 	.globl __NA_P1
                                    366 	.globl _X_P0INP
                                    367 	.globl __X_SFR8E
                                    368 	.globl _X_P1IEN
                                    369 	.globl _X_PICTL
                                    370 	.globl _X_P2IFG
                                    371 	.globl _X_P1IFG
                                    372 	.globl _X_P0IFG
                                    373 	.globl __NA_TCON
                                    374 	.globl __NA_PCON
                                    375 	.globl _X_U0CSR
                                    376 	.globl __NA_DPH1
                                    377 	.globl __NA_DPL1
                                    378 	.globl __NA_DPH0
                                    379 	.globl __NA_DPL0
                                    380 	.globl __NA_SP
                                    381 	.globl __NA_P0
                                    382 	.globl _I2SCLKF2
                                    383 	.globl _I2SCLKF1
                                    384 	.globl _I2SCLKF0
                                    385 	.globl _I2SSTAT
                                    386 	.globl _I2SWCNT
                                    387 	.globl _I2SDATH
                                    388 	.globl _I2SDATL
                                    389 	.globl _I2SCFG1
                                    390 	.globl _I2SCFG0
                                    391 	.globl _VCO_VC_DAC
                                    392 	.globl _PKTSTATUS
                                    393 	.globl _MARCSTATE
                                    394 	.globl _RSSI
                                    395 	.globl _LQI
                                    396 	.globl _FREQEST
                                    397 	.globl _VERSION
                                    398 	.globl _PARTNUM
                                    399 	.globl __XREGDF35
                                    400 	.globl __XREGDF34
                                    401 	.globl __XREGDF33
                                    402 	.globl __XREGDF32
                                    403 	.globl _IOCFG0
                                    404 	.globl _IOCFG1
                                    405 	.globl _IOCFG2
                                    406 	.globl _PA_TABLE0
                                    407 	.globl _PA_TABLE1
                                    408 	.globl _PA_TABLE2
                                    409 	.globl _PA_TABLE3
                                    410 	.globl _PA_TABLE4
                                    411 	.globl _PA_TABLE5
                                    412 	.globl _PA_TABLE6
                                    413 	.globl _PA_TABLE7
                                    414 	.globl __XREGDF26
                                    415 	.globl _TEST0
                                    416 	.globl _TEST1
                                    417 	.globl _TEST2
                                    418 	.globl __XREGDF22
                                    419 	.globl __XREGDF21
                                    420 	.globl __XREGDF20
                                    421 	.globl _FSCAL0
                                    422 	.globl _FSCAL1
                                    423 	.globl _FSCAL2
                                    424 	.globl _FSCAL3
                                    425 	.globl _FREND0
                                    426 	.globl _FREND1
                                    427 	.globl _AGCCTRL0
                                    428 	.globl _AGCCTRL1
                                    429 	.globl _AGCCTRL2
                                    430 	.globl _BSCFG
                                    431 	.globl _FOCCFG
                                    432 	.globl _MCSM0
                                    433 	.globl _MCSM1
                                    434 	.globl _MCSM2
                                    435 	.globl _DEVIATN
                                    436 	.globl _MDMCFG0
                                    437 	.globl _MDMCFG1
                                    438 	.globl _MDMCFG2
                                    439 	.globl _MDMCFG3
                                    440 	.globl _MDMCFG4
                                    441 	.globl _FREQ0
                                    442 	.globl _FREQ1
                                    443 	.globl _FREQ2
                                    444 	.globl _FSCTRL0
                                    445 	.globl _FSCTRL1
                                    446 	.globl _CHANNR
                                    447 	.globl _ADDR
                                    448 	.globl _PKTCTRL0
                                    449 	.globl _PKTCTRL1
                                    450 	.globl _PKTLEN
                                    451 	.globl _SYNC0
                                    452 	.globl _SYNC1
                                    453 	.globl _MDMCTRL0H
                                    454 ;--------------------------------------------------------
                                    455 ; special function registers
                                    456 ;--------------------------------------------------------
                                    457 	.area RSEG    (ABS,DATA)
      000000                        458 	.org 0x0000
                           000080   459 G$P0$0$0 == 0x0080
                           000080   460 _P0	=	0x0080
                           000081   461 G$SP$0$0 == 0x0081
                           000081   462 _SP	=	0x0081
                           000082   463 G$DPL0$0$0 == 0x0082
                           000082   464 _DPL0	=	0x0082
                           000083   465 G$DPH0$0$0 == 0x0083
                           000083   466 _DPH0	=	0x0083
                           000084   467 G$DPL1$0$0 == 0x0084
                           000084   468 _DPL1	=	0x0084
                           000085   469 G$DPH1$0$0 == 0x0085
                           000085   470 _DPH1	=	0x0085
                           000086   471 G$U0CSR$0$0 == 0x0086
                           000086   472 _U0CSR	=	0x0086
                           000087   473 G$PCON$0$0 == 0x0087
                           000087   474 _PCON	=	0x0087
                           000088   475 G$TCON$0$0 == 0x0088
                           000088   476 _TCON	=	0x0088
                           000089   477 G$P0IFG$0$0 == 0x0089
                           000089   478 _P0IFG	=	0x0089
                           00008A   479 G$P1IFG$0$0 == 0x008a
                           00008A   480 _P1IFG	=	0x008a
                           00008B   481 G$P2IFG$0$0 == 0x008b
                           00008B   482 _P2IFG	=	0x008b
                           00008C   483 G$PICTL$0$0 == 0x008c
                           00008C   484 _PICTL	=	0x008c
                           00008D   485 G$P1IEN$0$0 == 0x008d
                           00008D   486 _P1IEN	=	0x008d
                           00008E   487 G$_SFR8E$0$0 == 0x008e
                           00008E   488 __SFR8E	=	0x008e
                           00008F   489 G$P0INP$0$0 == 0x008f
                           00008F   490 _P0INP	=	0x008f
                           000090   491 G$P1$0$0 == 0x0090
                           000090   492 _P1	=	0x0090
                           000091   493 G$RFIM$0$0 == 0x0091
                           000091   494 _RFIM	=	0x0091
                           000092   495 G$DPS$0$0 == 0x0092
                           000092   496 _DPS	=	0x0092
                           000093   497 G$MPAGE$0$0 == 0x0093
                           000093   498 _MPAGE	=	0x0093
                           000093   499 G$_XPAGE$0$0 == 0x0093
                           000093   500 __XPAGE	=	0x0093
                           000094   501 G$_SFR94$0$0 == 0x0094
                           000094   502 __SFR94	=	0x0094
                           000095   503 G$_SFR95$0$0 == 0x0095
                           000095   504 __SFR95	=	0x0095
                           000096   505 G$_SFR96$0$0 == 0x0096
                           000096   506 __SFR96	=	0x0096
                           000097   507 G$_SFR97$0$0 == 0x0097
                           000097   508 __SFR97	=	0x0097
                           000098   509 G$S0CON$0$0 == 0x0098
                           000098   510 _S0CON	=	0x0098
                           000099   511 G$_SFR99$0$0 == 0x0099
                           000099   512 __SFR99	=	0x0099
                           00009A   513 G$IEN2$0$0 == 0x009a
                           00009A   514 _IEN2	=	0x009a
                           00009B   515 G$S1CON$0$0 == 0x009b
                           00009B   516 _S1CON	=	0x009b
                           00009C   517 G$T2CT$0$0 == 0x009c
                           00009C   518 _T2CT	=	0x009c
                           00009D   519 G$T2PR$0$0 == 0x009d
                           00009D   520 _T2PR	=	0x009d
                           00009E   521 G$T2CTL$0$0 == 0x009e
                           00009E   522 _T2CTL	=	0x009e
                           00009F   523 G$_SFR9F$0$0 == 0x009f
                           00009F   524 __SFR9F	=	0x009f
                           0000A0   525 G$P2$0$0 == 0x00a0
                           0000A0   526 _P2	=	0x00a0
                           0000A1   527 G$WORIRQ$0$0 == 0x00a1
                           0000A1   528 _WORIRQ	=	0x00a1
                           0000A2   529 G$WORCTRL$0$0 == 0x00a2
                           0000A2   530 _WORCTRL	=	0x00a2
                           0000A3   531 G$WOREVT0$0$0 == 0x00a3
                           0000A3   532 _WOREVT0	=	0x00a3
                           0000A4   533 G$WOREVT1$0$0 == 0x00a4
                           0000A4   534 _WOREVT1	=	0x00a4
                           0000A5   535 G$WORTIME0$0$0 == 0x00a5
                           0000A5   536 _WORTIME0	=	0x00a5
                           0000A6   537 G$WORTIME1$0$0 == 0x00a6
                           0000A6   538 _WORTIME1	=	0x00a6
                           0000A7   539 G$_SFRA7$0$0 == 0x00a7
                           0000A7   540 __SFRA7	=	0x00a7
                           0000A8   541 G$IEN0$0$0 == 0x00a8
                           0000A8   542 _IEN0	=	0x00a8
                           0000A9   543 G$IP0$0$0 == 0x00a9
                           0000A9   544 _IP0	=	0x00a9
                           0000AA   545 G$_SFRAA$0$0 == 0x00aa
                           0000AA   546 __SFRAA	=	0x00aa
                           0000AB   547 G$FWT$0$0 == 0x00ab
                           0000AB   548 _FWT	=	0x00ab
                           0000AC   549 G$FADDRL$0$0 == 0x00ac
                           0000AC   550 _FADDRL	=	0x00ac
                           0000AD   551 G$FADDRH$0$0 == 0x00ad
                           0000AD   552 _FADDRH	=	0x00ad
                           0000AE   553 G$FCTL$0$0 == 0x00ae
                           0000AE   554 _FCTL	=	0x00ae
                           0000AF   555 G$FWDATA$0$0 == 0x00af
                           0000AF   556 _FWDATA	=	0x00af
                           0000B0   557 G$_SFRB0$0$0 == 0x00b0
                           0000B0   558 __SFRB0	=	0x00b0
                           0000B1   559 G$ENCDI$0$0 == 0x00b1
                           0000B1   560 _ENCDI	=	0x00b1
                           0000B2   561 G$ENCDO$0$0 == 0x00b2
                           0000B2   562 _ENCDO	=	0x00b2
                           0000B3   563 G$ENCCS$0$0 == 0x00b3
                           0000B3   564 _ENCCS	=	0x00b3
                           0000B4   565 G$ADCCON1$0$0 == 0x00b4
                           0000B4   566 _ADCCON1	=	0x00b4
                           0000B5   567 G$ADCCON2$0$0 == 0x00b5
                           0000B5   568 _ADCCON2	=	0x00b5
                           0000B6   569 G$ADCCON3$0$0 == 0x00b6
                           0000B6   570 _ADCCON3	=	0x00b6
                           0000B7   571 G$_SFRB7$0$0 == 0x00b7
                           0000B7   572 __SFRB7	=	0x00b7
                           0000B8   573 G$IEN1$0$0 == 0x00b8
                           0000B8   574 _IEN1	=	0x00b8
                           0000B9   575 G$IP1$0$0 == 0x00b9
                           0000B9   576 _IP1	=	0x00b9
                           0000BA   577 G$ADCL$0$0 == 0x00ba
                           0000BA   578 _ADCL	=	0x00ba
                           0000BB   579 G$ADCH$0$0 == 0x00bb
                           0000BB   580 _ADCH	=	0x00bb
                           0000BC   581 G$RNDL$0$0 == 0x00bc
                           0000BC   582 _RNDL	=	0x00bc
                           0000BD   583 G$RNDH$0$0 == 0x00bd
                           0000BD   584 _RNDH	=	0x00bd
                           0000BE   585 G$SLEEP$0$0 == 0x00be
                           0000BE   586 _SLEEP	=	0x00be
                           0000BF   587 G$_SFRBF$0$0 == 0x00bf
                           0000BF   588 __SFRBF	=	0x00bf
                           0000C0   589 G$IRCON$0$0 == 0x00c0
                           0000C0   590 _IRCON	=	0x00c0
                           0000C1   591 G$U0DBUF$0$0 == 0x00c1
                           0000C1   592 _U0DBUF	=	0x00c1
                           0000C2   593 G$U0BAUD$0$0 == 0x00c2
                           0000C2   594 _U0BAUD	=	0x00c2
                           0000C3   595 G$_SFRC3$0$0 == 0x00c3
                           0000C3   596 __SFRC3	=	0x00c3
                           0000C4   597 G$U0UCR$0$0 == 0x00c4
                           0000C4   598 _U0UCR	=	0x00c4
                           0000C5   599 G$U0GCR$0$0 == 0x00c5
                           0000C5   600 _U0GCR	=	0x00c5
                           0000C6   601 G$CLKCON$0$0 == 0x00c6
                           0000C6   602 _CLKCON	=	0x00c6
                           0000C7   603 G$MEMCTR$0$0 == 0x00c7
                           0000C7   604 _MEMCTR	=	0x00c7
                           0000C8   605 G$_SFRC8$0$0 == 0x00c8
                           0000C8   606 __SFRC8	=	0x00c8
                           0000C9   607 G$WDCTL$0$0 == 0x00c9
                           0000C9   608 _WDCTL	=	0x00c9
                           0000CA   609 G$T3CNT$0$0 == 0x00ca
                           0000CA   610 _T3CNT	=	0x00ca
                           0000CB   611 G$T3CTL$0$0 == 0x00cb
                           0000CB   612 _T3CTL	=	0x00cb
                           0000CC   613 G$T3CCTL0$0$0 == 0x00cc
                           0000CC   614 _T3CCTL0	=	0x00cc
                           0000CD   615 G$T3CC0$0$0 == 0x00cd
                           0000CD   616 _T3CC0	=	0x00cd
                           0000CE   617 G$T3CCTL1$0$0 == 0x00ce
                           0000CE   618 _T3CCTL1	=	0x00ce
                           0000CF   619 G$T3CC1$0$0 == 0x00cf
                           0000CF   620 _T3CC1	=	0x00cf
                           0000D0   621 G$PSW$0$0 == 0x00d0
                           0000D0   622 _PSW	=	0x00d0
                           0000D1   623 G$DMAIRQ$0$0 == 0x00d1
                           0000D1   624 _DMAIRQ	=	0x00d1
                           0000D2   625 G$DMA1CFGL$0$0 == 0x00d2
                           0000D2   626 _DMA1CFGL	=	0x00d2
                           0000D3   627 G$DMA1CFGH$0$0 == 0x00d3
                           0000D3   628 _DMA1CFGH	=	0x00d3
                           0000D4   629 G$DMA0CFGL$0$0 == 0x00d4
                           0000D4   630 _DMA0CFGL	=	0x00d4
                           0000D5   631 G$DMA0CFGH$0$0 == 0x00d5
                           0000D5   632 _DMA0CFGH	=	0x00d5
                           0000D6   633 G$DMAARM$0$0 == 0x00d6
                           0000D6   634 _DMAARM	=	0x00d6
                           0000D7   635 G$DMAREQ$0$0 == 0x00d7
                           0000D7   636 _DMAREQ	=	0x00d7
                           0000D8   637 G$TIMIF$0$0 == 0x00d8
                           0000D8   638 _TIMIF	=	0x00d8
                           0000D9   639 G$RFD$0$0 == 0x00d9
                           0000D9   640 _RFD	=	0x00d9
                           0000DA   641 G$T1CC0L$0$0 == 0x00da
                           0000DA   642 _T1CC0L	=	0x00da
                           0000DB   643 G$T1CC0H$0$0 == 0x00db
                           0000DB   644 _T1CC0H	=	0x00db
                           0000DC   645 G$T1CC1L$0$0 == 0x00dc
                           0000DC   646 _T1CC1L	=	0x00dc
                           0000DD   647 G$T1CC1H$0$0 == 0x00dd
                           0000DD   648 _T1CC1H	=	0x00dd
                           0000DE   649 G$T1CC2L$0$0 == 0x00de
                           0000DE   650 _T1CC2L	=	0x00de
                           0000DF   651 G$T1CC2H$0$0 == 0x00df
                           0000DF   652 _T1CC2H	=	0x00df
                           0000E0   653 G$ACC$0$0 == 0x00e0
                           0000E0   654 _ACC	=	0x00e0
                           0000E1   655 G$RFST$0$0 == 0x00e1
                           0000E1   656 _RFST	=	0x00e1
                           0000E2   657 G$T1CNTL$0$0 == 0x00e2
                           0000E2   658 _T1CNTL	=	0x00e2
                           0000E3   659 G$T1CNTH$0$0 == 0x00e3
                           0000E3   660 _T1CNTH	=	0x00e3
                           0000E4   661 G$T1CTL$0$0 == 0x00e4
                           0000E4   662 _T1CTL	=	0x00e4
                           0000E5   663 G$T1CCTL0$0$0 == 0x00e5
                           0000E5   664 _T1CCTL0	=	0x00e5
                           0000E6   665 G$T1CCTL1$0$0 == 0x00e6
                           0000E6   666 _T1CCTL1	=	0x00e6
                           0000E7   667 G$T1CCTL2$0$0 == 0x00e7
                           0000E7   668 _T1CCTL2	=	0x00e7
                           0000E8   669 G$IRCON2$0$0 == 0x00e8
                           0000E8   670 _IRCON2	=	0x00e8
                           0000E9   671 G$RFIF$0$0 == 0x00e9
                           0000E9   672 _RFIF	=	0x00e9
                           0000EA   673 G$T4CNT$0$0 == 0x00ea
                           0000EA   674 _T4CNT	=	0x00ea
                           0000EB   675 G$T4CTL$0$0 == 0x00eb
                           0000EB   676 _T4CTL	=	0x00eb
                           0000EC   677 G$T4CCTL0$0$0 == 0x00ec
                           0000EC   678 _T4CCTL0	=	0x00ec
                           0000ED   679 G$T4CC0$0$0 == 0x00ed
                           0000ED   680 _T4CC0	=	0x00ed
                           0000EE   681 G$T4CCTL1$0$0 == 0x00ee
                           0000EE   682 _T4CCTL1	=	0x00ee
                           0000EF   683 G$T4CC1$0$0 == 0x00ef
                           0000EF   684 _T4CC1	=	0x00ef
                           0000F0   685 G$B$0$0 == 0x00f0
                           0000F0   686 _B	=	0x00f0
                           0000F1   687 G$PERCFG$0$0 == 0x00f1
                           0000F1   688 _PERCFG	=	0x00f1
                           0000F2   689 G$ADCCFG$0$0 == 0x00f2
                           0000F2   690 _ADCCFG	=	0x00f2
                           0000F3   691 G$P0SEL$0$0 == 0x00f3
                           0000F3   692 _P0SEL	=	0x00f3
                           0000F4   693 G$P1SEL$0$0 == 0x00f4
                           0000F4   694 _P1SEL	=	0x00f4
                           0000F5   695 G$P2SEL$0$0 == 0x00f5
                           0000F5   696 _P2SEL	=	0x00f5
                           0000F6   697 G$P1INP$0$0 == 0x00f6
                           0000F6   698 _P1INP	=	0x00f6
                           0000F7   699 G$P2INP$0$0 == 0x00f7
                           0000F7   700 _P2INP	=	0x00f7
                           0000F8   701 G$U1CSR$0$0 == 0x00f8
                           0000F8   702 _U1CSR	=	0x00f8
                           0000F9   703 G$U1DBUF$0$0 == 0x00f9
                           0000F9   704 _U1DBUF	=	0x00f9
                           0000FA   705 G$U1BAUD$0$0 == 0x00fa
                           0000FA   706 _U1BAUD	=	0x00fa
                           0000FB   707 G$U1UCR$0$0 == 0x00fb
                           0000FB   708 _U1UCR	=	0x00fb
                           0000FC   709 G$U1GCR$0$0 == 0x00fc
                           0000FC   710 _U1GCR	=	0x00fc
                           0000FD   711 G$P0DIR$0$0 == 0x00fd
                           0000FD   712 _P0DIR	=	0x00fd
                           0000FE   713 G$P1DIR$0$0 == 0x00fe
                           0000FE   714 _P1DIR	=	0x00fe
                           0000FF   715 G$P2DIR$0$0 == 0x00ff
                           0000FF   716 _P2DIR	=	0x00ff
                                    717 ;--------------------------------------------------------
                                    718 ; special function bits
                                    719 ;--------------------------------------------------------
                                    720 	.area RSEG    (ABS,DATA)
      000000                        721 	.org 0x0000
                           000080   722 G$P0_0$0$0 == 0x0080
                           000080   723 _P0_0	=	0x0080
                           000081   724 G$P0_1$0$0 == 0x0081
                           000081   725 _P0_1	=	0x0081
                           000082   726 G$P0_2$0$0 == 0x0082
                           000082   727 _P0_2	=	0x0082
                           000083   728 G$P0_3$0$0 == 0x0083
                           000083   729 _P0_3	=	0x0083
                           000084   730 G$P0_4$0$0 == 0x0084
                           000084   731 _P0_4	=	0x0084
                           000085   732 G$P0_5$0$0 == 0x0085
                           000085   733 _P0_5	=	0x0085
                           000086   734 G$P0_6$0$0 == 0x0086
                           000086   735 _P0_6	=	0x0086
                           000087   736 G$P0_7$0$0 == 0x0087
                           000087   737 _P0_7	=	0x0087
                           000088   738 G$IT0$0$0 == 0x0088
                           000088   739 _IT0	=	0x0088
                           000089   740 G$RFTXRXIF$0$0 == 0x0089
                           000089   741 _RFTXRXIF	=	0x0089
                           00008A   742 G$IT1$0$0 == 0x008a
                           00008A   743 _IT1	=	0x008a
                           00008B   744 G$URX0IF$0$0 == 0x008b
                           00008B   745 _URX0IF	=	0x008b
                           00008D   746 G$ADCIF$0$0 == 0x008d
                           00008D   747 _ADCIF	=	0x008d
                           00008F   748 G$URX1IF$0$0 == 0x008f
                           00008F   749 _URX1IF	=	0x008f
                           000090   750 G$P1_0$0$0 == 0x0090
                           000090   751 _P1_0	=	0x0090
                           000091   752 G$P1_1$0$0 == 0x0091
                           000091   753 _P1_1	=	0x0091
                           000092   754 G$P1_2$0$0 == 0x0092
                           000092   755 _P1_2	=	0x0092
                           000093   756 G$P1_3$0$0 == 0x0093
                           000093   757 _P1_3	=	0x0093
                           000094   758 G$P1_4$0$0 == 0x0094
                           000094   759 _P1_4	=	0x0094
                           000095   760 G$P1_5$0$0 == 0x0095
                           000095   761 _P1_5	=	0x0095
                           000096   762 G$P1_6$0$0 == 0x0096
                           000096   763 _P1_6	=	0x0096
                           000097   764 G$P1_7$0$0 == 0x0097
                           000097   765 _P1_7	=	0x0097
                           000098   766 G$ENCIF_0$0$0 == 0x0098
                           000098   767 _ENCIF_0	=	0x0098
                           000099   768 G$ENCIF_1$0$0 == 0x0099
                           000099   769 _ENCIF_1	=	0x0099
                           0000A0   770 G$P2_0$0$0 == 0x00a0
                           0000A0   771 _P2_0	=	0x00a0
                           0000A1   772 G$P2_1$0$0 == 0x00a1
                           0000A1   773 _P2_1	=	0x00a1
                           0000A2   774 G$P2_2$0$0 == 0x00a2
                           0000A2   775 _P2_2	=	0x00a2
                           0000A3   776 G$P2_3$0$0 == 0x00a3
                           0000A3   777 _P2_3	=	0x00a3
                           0000A4   778 G$P2_4$0$0 == 0x00a4
                           0000A4   779 _P2_4	=	0x00a4
                           0000A5   780 G$P2_5$0$0 == 0x00a5
                           0000A5   781 _P2_5	=	0x00a5
                           0000A6   782 G$P2_6$0$0 == 0x00a6
                           0000A6   783 _P2_6	=	0x00a6
                           0000A7   784 G$P2_7$0$0 == 0x00a7
                           0000A7   785 _P2_7	=	0x00a7
                           0000A8   786 G$RFTXRXIE$0$0 == 0x00a8
                           0000A8   787 _RFTXRXIE	=	0x00a8
                           0000A9   788 G$ADCIE$0$0 == 0x00a9
                           0000A9   789 _ADCIE	=	0x00a9
                           0000AA   790 G$URX0IE$0$0 == 0x00aa
                           0000AA   791 _URX0IE	=	0x00aa
                           0000AB   792 G$URX1IE$0$0 == 0x00ab
                           0000AB   793 _URX1IE	=	0x00ab
                           0000AC   794 G$ENCIE$0$0 == 0x00ac
                           0000AC   795 _ENCIE	=	0x00ac
                           0000AD   796 G$STIE$0$0 == 0x00ad
                           0000AD   797 _STIE	=	0x00ad
                           0000AF   798 G$EA$0$0 == 0x00af
                           0000AF   799 _EA	=	0x00af
                           0000B8   800 G$DMAIE$0$0 == 0x00b8
                           0000B8   801 _DMAIE	=	0x00b8
                           0000B9   802 G$T1IE$0$0 == 0x00b9
                           0000B9   803 _T1IE	=	0x00b9
                           0000BA   804 G$T2IE$0$0 == 0x00ba
                           0000BA   805 _T2IE	=	0x00ba
                           0000BB   806 G$T3IE$0$0 == 0x00bb
                           0000BB   807 _T3IE	=	0x00bb
                           0000BC   808 G$T4IE$0$0 == 0x00bc
                           0000BC   809 _T4IE	=	0x00bc
                           0000BD   810 G$P0IE$0$0 == 0x00bd
                           0000BD   811 _P0IE	=	0x00bd
                           0000C0   812 G$DMAIF$0$0 == 0x00c0
                           0000C0   813 _DMAIF	=	0x00c0
                           0000C1   814 G$T1IF$0$0 == 0x00c1
                           0000C1   815 _T1IF	=	0x00c1
                           0000C2   816 G$T2IF$0$0 == 0x00c2
                           0000C2   817 _T2IF	=	0x00c2
                           0000C3   818 G$T3IF$0$0 == 0x00c3
                           0000C3   819 _T3IF	=	0x00c3
                           0000C4   820 G$T4IF$0$0 == 0x00c4
                           0000C4   821 _T4IF	=	0x00c4
                           0000C5   822 G$P0IF$0$0 == 0x00c5
                           0000C5   823 _P0IF	=	0x00c5
                           0000C7   824 G$STIF$0$0 == 0x00c7
                           0000C7   825 _STIF	=	0x00c7
                           0000D0   826 G$P$0$0 == 0x00d0
                           0000D0   827 _P	=	0x00d0
                           0000D1   828 G$F1$0$0 == 0x00d1
                           0000D1   829 _F1	=	0x00d1
                           0000D2   830 G$OV$0$0 == 0x00d2
                           0000D2   831 _OV	=	0x00d2
                           0000D3   832 G$RS0$0$0 == 0x00d3
                           0000D3   833 _RS0	=	0x00d3
                           0000D4   834 G$RS1$0$0 == 0x00d4
                           0000D4   835 _RS1	=	0x00d4
                           0000D5   836 G$F0$0$0 == 0x00d5
                           0000D5   837 _F0	=	0x00d5
                           0000D6   838 G$AC$0$0 == 0x00d6
                           0000D6   839 _AC	=	0x00d6
                           0000D7   840 G$CY$0$0 == 0x00d7
                           0000D7   841 _CY	=	0x00d7
                           0000D8   842 G$T3OVFIF$0$0 == 0x00d8
                           0000D8   843 _T3OVFIF	=	0x00d8
                           0000D9   844 G$T3CH0IF$0$0 == 0x00d9
                           0000D9   845 _T3CH0IF	=	0x00d9
                           0000DA   846 G$T3CH1IF$0$0 == 0x00da
                           0000DA   847 _T3CH1IF	=	0x00da
                           0000DB   848 G$T4OVFIF$0$0 == 0x00db
                           0000DB   849 _T4OVFIF	=	0x00db
                           0000DC   850 G$T4CH0IF$0$0 == 0x00dc
                           0000DC   851 _T4CH0IF	=	0x00dc
                           0000DD   852 G$T4CH1IF$0$0 == 0x00dd
                           0000DD   853 _T4CH1IF	=	0x00dd
                           0000DE   854 G$OVFIM$0$0 == 0x00de
                           0000DE   855 _OVFIM	=	0x00de
                           0000E0   856 G$ACC_0$0$0 == 0x00e0
                           0000E0   857 _ACC_0	=	0x00e0
                           0000E1   858 G$ACC_1$0$0 == 0x00e1
                           0000E1   859 _ACC_1	=	0x00e1
                           0000E2   860 G$ACC_2$0$0 == 0x00e2
                           0000E2   861 _ACC_2	=	0x00e2
                           0000E3   862 G$ACC_3$0$0 == 0x00e3
                           0000E3   863 _ACC_3	=	0x00e3
                           0000E4   864 G$ACC_4$0$0 == 0x00e4
                           0000E4   865 _ACC_4	=	0x00e4
                           0000E5   866 G$ACC_5$0$0 == 0x00e5
                           0000E5   867 _ACC_5	=	0x00e5
                           0000E6   868 G$ACC_6$0$0 == 0x00e6
                           0000E6   869 _ACC_6	=	0x00e6
                           0000E7   870 G$ACC_7$0$0 == 0x00e7
                           0000E7   871 _ACC_7	=	0x00e7
                           0000E8   872 G$P2IF$0$0 == 0x00e8
                           0000E8   873 _P2IF	=	0x00e8
                           0000E9   874 G$UTX0IF$0$0 == 0x00e9
                           0000E9   875 _UTX0IF	=	0x00e9
                           0000EA   876 G$UTX1IF$0$0 == 0x00ea
                           0000EA   877 _UTX1IF	=	0x00ea
                           0000EB   878 G$P1IF$0$0 == 0x00eb
                           0000EB   879 _P1IF	=	0x00eb
                           0000EC   880 G$WDTIF$0$0 == 0x00ec
                           0000EC   881 _WDTIF	=	0x00ec
                           0000F0   882 G$B_0$0$0 == 0x00f0
                           0000F0   883 _B_0	=	0x00f0
                           0000F1   884 G$B_1$0$0 == 0x00f1
                           0000F1   885 _B_1	=	0x00f1
                           0000F2   886 G$B_2$0$0 == 0x00f2
                           0000F2   887 _B_2	=	0x00f2
                           0000F3   888 G$B_3$0$0 == 0x00f3
                           0000F3   889 _B_3	=	0x00f3
                           0000F4   890 G$B_4$0$0 == 0x00f4
                           0000F4   891 _B_4	=	0x00f4
                           0000F5   892 G$B_5$0$0 == 0x00f5
                           0000F5   893 _B_5	=	0x00f5
                           0000F6   894 G$B_6$0$0 == 0x00f6
                           0000F6   895 _B_6	=	0x00f6
                           0000F7   896 G$B_7$0$0 == 0x00f7
                           0000F7   897 _B_7	=	0x00f7
                           0000F8   898 G$ACTIVE$0$0 == 0x00f8
                           0000F8   899 _ACTIVE	=	0x00f8
                           0000F9   900 G$TX_BYTE$0$0 == 0x00f9
                           0000F9   901 _TX_BYTE	=	0x00f9
                           0000FA   902 G$RX_BYTE$0$0 == 0x00fa
                           0000FA   903 _RX_BYTE	=	0x00fa
                           0000FB   904 G$ERR$0$0 == 0x00fb
                           0000FB   905 _ERR	=	0x00fb
                           0000FC   906 G$FE$0$0 == 0x00fc
                           0000FC   907 _FE	=	0x00fc
                           0000FD   908 G$SLAVE$0$0 == 0x00fd
                           0000FD   909 _SLAVE	=	0x00fd
                           0000FE   910 G$RE$0$0 == 0x00fe
                           0000FE   911 _RE	=	0x00fe
                           0000FF   912 G$MODE$0$0 == 0x00ff
                           0000FF   913 _MODE	=	0x00ff
                                    914 ;--------------------------------------------------------
                                    915 ; overlayable register banks
                                    916 ;--------------------------------------------------------
                                    917 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        918 	.ds 8
                                    919 ;--------------------------------------------------------
                                    920 ; internal ram data
                                    921 ;--------------------------------------------------------
                                    922 	.area DSEG    (DATA)
                           000000   923 LMMCommander.main$dataPacket$1$34==.
      000000                        924 _main_dataPacket_1_34:
      000000                        925 	.ds 256
                           000100   926 LMMCommander.main$repPacket$1$34==.
      000100                        927 _main_repPacket_1_34:
      000100                        928 	.ds 3
                           000103   929 LMMCommander.main$dataLength$1$34==.
      000103                        930 _main_dataLength_1_34:
      000103                        931 	.ds 2
                           000105   932 LMMCommander.main$i$1$34==.
      000105                        933 _main_i_1_34:
      000105                        934 	.ds 1
                           000106   935 LMMCommander.main$sloc0$1$0==.
      000106                        936 _main_sloc0_1_0:
      000106                        937 	.ds 3
                                    938 ;--------------------------------------------------------
                                    939 ; overlayable items in internal ram 
                                    940 ;--------------------------------------------------------
                                    941 ;--------------------------------------------------------
                                    942 ; Stack segment in internal ram 
                                    943 ;--------------------------------------------------------
                                    944 	.area	SSEG
      000000                        945 __start__stack:
      000000                        946 	.ds	1
                                    947 
                                    948 ;--------------------------------------------------------
                                    949 ; indirectly addressable internal ram data
                                    950 ;--------------------------------------------------------
                                    951 	.area ISEG    (DATA)
                                    952 ;--------------------------------------------------------
                                    953 ; absolute internal ram data
                                    954 ;--------------------------------------------------------
                                    955 	.area IABS    (ABS,DATA)
                                    956 	.area IABS    (ABS,DATA)
                                    957 ;--------------------------------------------------------
                                    958 ; bit data
                                    959 ;--------------------------------------------------------
                                    960 	.area BSEG    (BIT)
                                    961 ;--------------------------------------------------------
                                    962 ; paged external ram data
                                    963 ;--------------------------------------------------------
                                    964 	.area PSEG    (PAG,XDATA)
                                    965 ;--------------------------------------------------------
                                    966 ; external ram data
                                    967 ;--------------------------------------------------------
                                    968 	.area XSEG    (XDATA)
                           00DF02   969 G$MDMCTRL0H$0$0 == 0xdf02
                           00DF02   970 _MDMCTRL0H	=	0xdf02
                           00DF00   971 G$SYNC1$0$0 == 0xdf00
                           00DF00   972 _SYNC1	=	0xdf00
                           00DF01   973 G$SYNC0$0$0 == 0xdf01
                           00DF01   974 _SYNC0	=	0xdf01
                           00DF02   975 G$PKTLEN$0$0 == 0xdf02
                           00DF02   976 _PKTLEN	=	0xdf02
                           00DF03   977 G$PKTCTRL1$0$0 == 0xdf03
                           00DF03   978 _PKTCTRL1	=	0xdf03
                           00DF04   979 G$PKTCTRL0$0$0 == 0xdf04
                           00DF04   980 _PKTCTRL0	=	0xdf04
                           00DF05   981 G$ADDR$0$0 == 0xdf05
                           00DF05   982 _ADDR	=	0xdf05
                           00DF06   983 G$CHANNR$0$0 == 0xdf06
                           00DF06   984 _CHANNR	=	0xdf06
                           00DF07   985 G$FSCTRL1$0$0 == 0xdf07
                           00DF07   986 _FSCTRL1	=	0xdf07
                           00DF08   987 G$FSCTRL0$0$0 == 0xdf08
                           00DF08   988 _FSCTRL0	=	0xdf08
                           00DF09   989 G$FREQ2$0$0 == 0xdf09
                           00DF09   990 _FREQ2	=	0xdf09
                           00DF0A   991 G$FREQ1$0$0 == 0xdf0a
                           00DF0A   992 _FREQ1	=	0xdf0a
                           00DF0B   993 G$FREQ0$0$0 == 0xdf0b
                           00DF0B   994 _FREQ0	=	0xdf0b
                           00DF0C   995 G$MDMCFG4$0$0 == 0xdf0c
                           00DF0C   996 _MDMCFG4	=	0xdf0c
                           00DF0D   997 G$MDMCFG3$0$0 == 0xdf0d
                           00DF0D   998 _MDMCFG3	=	0xdf0d
                           00DF0E   999 G$MDMCFG2$0$0 == 0xdf0e
                           00DF0E  1000 _MDMCFG2	=	0xdf0e
                           00DF0F  1001 G$MDMCFG1$0$0 == 0xdf0f
                           00DF0F  1002 _MDMCFG1	=	0xdf0f
                           00DF10  1003 G$MDMCFG0$0$0 == 0xdf10
                           00DF10  1004 _MDMCFG0	=	0xdf10
                           00DF11  1005 G$DEVIATN$0$0 == 0xdf11
                           00DF11  1006 _DEVIATN	=	0xdf11
                           00DF12  1007 G$MCSM2$0$0 == 0xdf12
                           00DF12  1008 _MCSM2	=	0xdf12
                           00DF13  1009 G$MCSM1$0$0 == 0xdf13
                           00DF13  1010 _MCSM1	=	0xdf13
                           00DF14  1011 G$MCSM0$0$0 == 0xdf14
                           00DF14  1012 _MCSM0	=	0xdf14
                           00DF15  1013 G$FOCCFG$0$0 == 0xdf15
                           00DF15  1014 _FOCCFG	=	0xdf15
                           00DF16  1015 G$BSCFG$0$0 == 0xdf16
                           00DF16  1016 _BSCFG	=	0xdf16
                           00DF17  1017 G$AGCCTRL2$0$0 == 0xdf17
                           00DF17  1018 _AGCCTRL2	=	0xdf17
                           00DF18  1019 G$AGCCTRL1$0$0 == 0xdf18
                           00DF18  1020 _AGCCTRL1	=	0xdf18
                           00DF19  1021 G$AGCCTRL0$0$0 == 0xdf19
                           00DF19  1022 _AGCCTRL0	=	0xdf19
                           00DF1A  1023 G$FREND1$0$0 == 0xdf1a
                           00DF1A  1024 _FREND1	=	0xdf1a
                           00DF1B  1025 G$FREND0$0$0 == 0xdf1b
                           00DF1B  1026 _FREND0	=	0xdf1b
                           00DF1C  1027 G$FSCAL3$0$0 == 0xdf1c
                           00DF1C  1028 _FSCAL3	=	0xdf1c
                           00DF1D  1029 G$FSCAL2$0$0 == 0xdf1d
                           00DF1D  1030 _FSCAL2	=	0xdf1d
                           00DF1E  1031 G$FSCAL1$0$0 == 0xdf1e
                           00DF1E  1032 _FSCAL1	=	0xdf1e
                           00DF1F  1033 G$FSCAL0$0$0 == 0xdf1f
                           00DF1F  1034 _FSCAL0	=	0xdf1f
                           00DF20  1035 G$_XREGDF20$0$0 == 0xdf20
                           00DF20  1036 __XREGDF20	=	0xdf20
                           00DF21  1037 G$_XREGDF21$0$0 == 0xdf21
                           00DF21  1038 __XREGDF21	=	0xdf21
                           00DF22  1039 G$_XREGDF22$0$0 == 0xdf22
                           00DF22  1040 __XREGDF22	=	0xdf22
                           00DF23  1041 G$TEST2$0$0 == 0xdf23
                           00DF23  1042 _TEST2	=	0xdf23
                           00DF24  1043 G$TEST1$0$0 == 0xdf24
                           00DF24  1044 _TEST1	=	0xdf24
                           00DF25  1045 G$TEST0$0$0 == 0xdf25
                           00DF25  1046 _TEST0	=	0xdf25
                           00DF26  1047 G$_XREGDF26$0$0 == 0xdf26
                           00DF26  1048 __XREGDF26	=	0xdf26
                           00DF27  1049 G$PA_TABLE7$0$0 == 0xdf27
                           00DF27  1050 _PA_TABLE7	=	0xdf27
                           00DF28  1051 G$PA_TABLE6$0$0 == 0xdf28
                           00DF28  1052 _PA_TABLE6	=	0xdf28
                           00DF29  1053 G$PA_TABLE5$0$0 == 0xdf29
                           00DF29  1054 _PA_TABLE5	=	0xdf29
                           00DF2A  1055 G$PA_TABLE4$0$0 == 0xdf2a
                           00DF2A  1056 _PA_TABLE4	=	0xdf2a
                           00DF2B  1057 G$PA_TABLE3$0$0 == 0xdf2b
                           00DF2B  1058 _PA_TABLE3	=	0xdf2b
                           00DF2C  1059 G$PA_TABLE2$0$0 == 0xdf2c
                           00DF2C  1060 _PA_TABLE2	=	0xdf2c
                           00DF2D  1061 G$PA_TABLE1$0$0 == 0xdf2d
                           00DF2D  1062 _PA_TABLE1	=	0xdf2d
                           00DF2E  1063 G$PA_TABLE0$0$0 == 0xdf2e
                           00DF2E  1064 _PA_TABLE0	=	0xdf2e
                           00DF2F  1065 G$IOCFG2$0$0 == 0xdf2f
                           00DF2F  1066 _IOCFG2	=	0xdf2f
                           00DF30  1067 G$IOCFG1$0$0 == 0xdf30
                           00DF30  1068 _IOCFG1	=	0xdf30
                           00DF31  1069 G$IOCFG0$0$0 == 0xdf31
                           00DF31  1070 _IOCFG0	=	0xdf31
                           00DF32  1071 G$_XREGDF32$0$0 == 0xdf32
                           00DF32  1072 __XREGDF32	=	0xdf32
                           00DF33  1073 G$_XREGDF33$0$0 == 0xdf33
                           00DF33  1074 __XREGDF33	=	0xdf33
                           00DF34  1075 G$_XREGDF34$0$0 == 0xdf34
                           00DF34  1076 __XREGDF34	=	0xdf34
                           00DF35  1077 G$_XREGDF35$0$0 == 0xdf35
                           00DF35  1078 __XREGDF35	=	0xdf35
                           00DF36  1079 G$PARTNUM$0$0 == 0xdf36
                           00DF36  1080 _PARTNUM	=	0xdf36
                           00DF37  1081 G$VERSION$0$0 == 0xdf37
                           00DF37  1082 _VERSION	=	0xdf37
                           00DF38  1083 G$FREQEST$0$0 == 0xdf38
                           00DF38  1084 _FREQEST	=	0xdf38
                           00DF39  1085 G$LQI$0$0 == 0xdf39
                           00DF39  1086 _LQI	=	0xdf39
                           00DF3A  1087 G$RSSI$0$0 == 0xdf3a
                           00DF3A  1088 _RSSI	=	0xdf3a
                           00DF3B  1089 G$MARCSTATE$0$0 == 0xdf3b
                           00DF3B  1090 _MARCSTATE	=	0xdf3b
                           00DF3C  1091 G$PKTSTATUS$0$0 == 0xdf3c
                           00DF3C  1092 _PKTSTATUS	=	0xdf3c
                           00DF3D  1093 G$VCO_VC_DAC$0$0 == 0xdf3d
                           00DF3D  1094 _VCO_VC_DAC	=	0xdf3d
                           00DF40  1095 G$I2SCFG0$0$0 == 0xdf40
                           00DF40  1096 _I2SCFG0	=	0xdf40
                           00DF41  1097 G$I2SCFG1$0$0 == 0xdf41
                           00DF41  1098 _I2SCFG1	=	0xdf41
                           00DF42  1099 G$I2SDATL$0$0 == 0xdf42
                           00DF42  1100 _I2SDATL	=	0xdf42
                           00DF43  1101 G$I2SDATH$0$0 == 0xdf43
                           00DF43  1102 _I2SDATH	=	0xdf43
                           00DF44  1103 G$I2SWCNT$0$0 == 0xdf44
                           00DF44  1104 _I2SWCNT	=	0xdf44
                           00DF45  1105 G$I2SSTAT$0$0 == 0xdf45
                           00DF45  1106 _I2SSTAT	=	0xdf45
                           00DF46  1107 G$I2SCLKF0$0$0 == 0xdf46
                           00DF46  1108 _I2SCLKF0	=	0xdf46
                           00DF47  1109 G$I2SCLKF1$0$0 == 0xdf47
                           00DF47  1110 _I2SCLKF1	=	0xdf47
                           00DF48  1111 G$I2SCLKF2$0$0 == 0xdf48
                           00DF48  1112 _I2SCLKF2	=	0xdf48
                           00DF80  1113 G$_NA_P0$0$0 == 0xdf80
                           00DF80  1114 __NA_P0	=	0xdf80
                           00DF81  1115 G$_NA_SP$0$0 == 0xdf81
                           00DF81  1116 __NA_SP	=	0xdf81
                           00DF82  1117 G$_NA_DPL0$0$0 == 0xdf82
                           00DF82  1118 __NA_DPL0	=	0xdf82
                           00DF83  1119 G$_NA_DPH0$0$0 == 0xdf83
                           00DF83  1120 __NA_DPH0	=	0xdf83
                           00DF84  1121 G$_NA_DPL1$0$0 == 0xdf84
                           00DF84  1122 __NA_DPL1	=	0xdf84
                           00DF85  1123 G$_NA_DPH1$0$0 == 0xdf85
                           00DF85  1124 __NA_DPH1	=	0xdf85
                           00DF86  1125 G$X_U0CSR$0$0 == 0xdf86
                           00DF86  1126 _X_U0CSR	=	0xdf86
                           00DF87  1127 G$_NA_PCON$0$0 == 0xdf87
                           00DF87  1128 __NA_PCON	=	0xdf87
                           00DF88  1129 G$_NA_TCON$0$0 == 0xdf88
                           00DF88  1130 __NA_TCON	=	0xdf88
                           00DF89  1131 G$X_P0IFG$0$0 == 0xdf89
                           00DF89  1132 _X_P0IFG	=	0xdf89
                           00DF8A  1133 G$X_P1IFG$0$0 == 0xdf8a
                           00DF8A  1134 _X_P1IFG	=	0xdf8a
                           00DF8B  1135 G$X_P2IFG$0$0 == 0xdf8b
                           00DF8B  1136 _X_P2IFG	=	0xdf8b
                           00DF8C  1137 G$X_PICTL$0$0 == 0xdf8c
                           00DF8C  1138 _X_PICTL	=	0xdf8c
                           00DF8D  1139 G$X_P1IEN$0$0 == 0xdf8d
                           00DF8D  1140 _X_P1IEN	=	0xdf8d
                           00DF8E  1141 G$_X_SFR8E$0$0 == 0xdf8e
                           00DF8E  1142 __X_SFR8E	=	0xdf8e
                           00DF8F  1143 G$X_P0INP$0$0 == 0xdf8f
                           00DF8F  1144 _X_P0INP	=	0xdf8f
                           00DF90  1145 G$_NA_P1$0$0 == 0xdf90
                           00DF90  1146 __NA_P1	=	0xdf90
                           00DF91  1147 G$X_RFIM$0$0 == 0xdf91
                           00DF91  1148 _X_RFIM	=	0xdf91
                           00DF92  1149 G$_NA_DPS$0$0 == 0xdf92
                           00DF92  1150 __NA_DPS	=	0xdf92
                           00DF93  1151 G$X_MPAGE$0$0 == 0xdf93
                           00DF93  1152 _X_MPAGE	=	0xdf93
                           00DF94  1153 G$_X_SFR94$0$0 == 0xdf94
                           00DF94  1154 __X_SFR94	=	0xdf94
                           00DF95  1155 G$_X_SFR95$0$0 == 0xdf95
                           00DF95  1156 __X_SFR95	=	0xdf95
                           00DF96  1157 G$_X_SFR96$0$0 == 0xdf96
                           00DF96  1158 __X_SFR96	=	0xdf96
                           00DF97  1159 G$_X_SFR97$0$0 == 0xdf97
                           00DF97  1160 __X_SFR97	=	0xdf97
                           00DF98  1161 G$_NA_S0CON$0$0 == 0xdf98
                           00DF98  1162 __NA_S0CON	=	0xdf98
                           00DF99  1163 G$_X_SFR99$0$0 == 0xdf99
                           00DF99  1164 __X_SFR99	=	0xdf99
                           00DF9A  1165 G$_NA_IEN2$0$0 == 0xdf9a
                           00DF9A  1166 __NA_IEN2	=	0xdf9a
                           00DF9B  1167 G$_NA_S1CON$0$0 == 0xdf9b
                           00DF9B  1168 __NA_S1CON	=	0xdf9b
                           00DF9C  1169 G$X_T2CT$0$0 == 0xdf9c
                           00DF9C  1170 _X_T2CT	=	0xdf9c
                           00DF9D  1171 G$X_T2PR$0$0 == 0xdf9d
                           00DF9D  1172 _X_T2PR	=	0xdf9d
                           00DF9E  1173 G$X_T2CTL$0$0 == 0xdf9e
                           00DF9E  1174 _X_T2CTL	=	0xdf9e
                           00DF9F  1175 G$_X_SFR9F$0$0 == 0xdf9f
                           00DF9F  1176 __X_SFR9F	=	0xdf9f
                           00DFA0  1177 G$_NA_P2$0$0 == 0xdfa0
                           00DFA0  1178 __NA_P2	=	0xdfa0
                           00DFA1  1179 G$X_WORIRQ$0$0 == 0xdfa1
                           00DFA1  1180 _X_WORIRQ	=	0xdfa1
                           00DFA2  1181 G$X_WORCTRL$0$0 == 0xdfa2
                           00DFA2  1182 _X_WORCTRL	=	0xdfa2
                           00DFA3  1183 G$X_WOREVT0$0$0 == 0xdfa3
                           00DFA3  1184 _X_WOREVT0	=	0xdfa3
                           00DFA4  1185 G$X_WOREVT1$0$0 == 0xdfa4
                           00DFA4  1186 _X_WOREVT1	=	0xdfa4
                           00DFA5  1187 G$X_WORTIME0$0$0 == 0xdfa5
                           00DFA5  1188 _X_WORTIME0	=	0xdfa5
                           00DFA6  1189 G$X_WORTIME1$0$0 == 0xdfa6
                           00DFA6  1190 _X_WORTIME1	=	0xdfa6
                           00DFA7  1191 G$_X_SFRA7$0$0 == 0xdfa7
                           00DFA7  1192 __X_SFRA7	=	0xdfa7
                           00DFA8  1193 G$_NA_IEN0$0$0 == 0xdfa8
                           00DFA8  1194 __NA_IEN0	=	0xdfa8
                           00DFA9  1195 G$_NA_IP0$0$0 == 0xdfa9
                           00DFA9  1196 __NA_IP0	=	0xdfa9
                           00DFAA  1197 G$_X_SFRAA$0$0 == 0xdfaa
                           00DFAA  1198 __X_SFRAA	=	0xdfaa
                           00DFAB  1199 G$X_FWT$0$0 == 0xdfab
                           00DFAB  1200 _X_FWT	=	0xdfab
                           00DFAC  1201 G$X_FADDRL$0$0 == 0xdfac
                           00DFAC  1202 _X_FADDRL	=	0xdfac
                           00DFAD  1203 G$X_FADDRH$0$0 == 0xdfad
                           00DFAD  1204 _X_FADDRH	=	0xdfad
                           00DFAE  1205 G$X_FCTL$0$0 == 0xdfae
                           00DFAE  1206 _X_FCTL	=	0xdfae
                           00DFAF  1207 G$X_FWDATA$0$0 == 0xdfaf
                           00DFAF  1208 _X_FWDATA	=	0xdfaf
                           00DFB0  1209 G$_X_SFRB0$0$0 == 0xdfb0
                           00DFB0  1210 __X_SFRB0	=	0xdfb0
                           00DFB1  1211 G$X_ENCDI$0$0 == 0xdfb1
                           00DFB1  1212 _X_ENCDI	=	0xdfb1
                           00DFB2  1213 G$X_ENCDO$0$0 == 0xdfb2
                           00DFB2  1214 _X_ENCDO	=	0xdfb2
                           00DFB3  1215 G$X_ENCCS$0$0 == 0xdfb3
                           00DFB3  1216 _X_ENCCS	=	0xdfb3
                           00DFB4  1217 G$X_ADCCON1$0$0 == 0xdfb4
                           00DFB4  1218 _X_ADCCON1	=	0xdfb4
                           00DFB5  1219 G$X_ADCCON2$0$0 == 0xdfb5
                           00DFB5  1220 _X_ADCCON2	=	0xdfb5
                           00DFB6  1221 G$X_ADCCON3$0$0 == 0xdfb6
                           00DFB6  1222 _X_ADCCON3	=	0xdfb6
                           00DFB7  1223 G$_X_SFRB7$0$0 == 0xdfb7
                           00DFB7  1224 __X_SFRB7	=	0xdfb7
                           00DFB8  1225 G$_NA_IEN1$0$0 == 0xdfb8
                           00DFB8  1226 __NA_IEN1	=	0xdfb8
                           00DFB9  1227 G$_NA_IP1$0$0 == 0xdfb9
                           00DFB9  1228 __NA_IP1	=	0xdfb9
                           00DFBA  1229 G$X_ADCL$0$0 == 0xdfba
                           00DFBA  1230 _X_ADCL	=	0xdfba
                           00DFBB  1231 G$X_ADCH$0$0 == 0xdfbb
                           00DFBB  1232 _X_ADCH	=	0xdfbb
                           00DFBC  1233 G$X_RNDL$0$0 == 0xdfbc
                           00DFBC  1234 _X_RNDL	=	0xdfbc
                           00DFBD  1235 G$X_RNDH$0$0 == 0xdfbd
                           00DFBD  1236 _X_RNDH	=	0xdfbd
                           00DFBE  1237 G$X_SLEEP$0$0 == 0xdfbe
                           00DFBE  1238 _X_SLEEP	=	0xdfbe
                           00DFBF  1239 G$_X_SFRBF$0$0 == 0xdfbf
                           00DFBF  1240 __X_SFRBF	=	0xdfbf
                           00DFC0  1241 G$_NA_IRCON$0$0 == 0xdfc0
                           00DFC0  1242 __NA_IRCON	=	0xdfc0
                           00DFC1  1243 G$X_U0DBUF$0$0 == 0xdfc1
                           00DFC1  1244 _X_U0DBUF	=	0xdfc1
                           00DFC2  1245 G$X_U0BAUD$0$0 == 0xdfc2
                           00DFC2  1246 _X_U0BAUD	=	0xdfc2
                           00DFC3  1247 G$_X_SFRC3$0$0 == 0xdfc3
                           00DFC3  1248 __X_SFRC3	=	0xdfc3
                           00DFC4  1249 G$X_U0UCR$0$0 == 0xdfc4
                           00DFC4  1250 _X_U0UCR	=	0xdfc4
                           00DFC5  1251 G$X_U0GCR$0$0 == 0xdfc5
                           00DFC5  1252 _X_U0GCR	=	0xdfc5
                           00DFC6  1253 G$X_CLKCON$0$0 == 0xdfc6
                           00DFC6  1254 _X_CLKCON	=	0xdfc6
                           00DFC7  1255 G$X_MEMCTR$0$0 == 0xdfc7
                           00DFC7  1256 _X_MEMCTR	=	0xdfc7
                           00DFC8  1257 G$_X_SFRC8$0$0 == 0xdfc8
                           00DFC8  1258 __X_SFRC8	=	0xdfc8
                           00DFC9  1259 G$X_WDCTL$0$0 == 0xdfc9
                           00DFC9  1260 _X_WDCTL	=	0xdfc9
                           00DFCA  1261 G$X_T3CNT$0$0 == 0xdfca
                           00DFCA  1262 _X_T3CNT	=	0xdfca
                           00DFCB  1263 G$X_T3CTL$0$0 == 0xdfcb
                           00DFCB  1264 _X_T3CTL	=	0xdfcb
                           00DFCC  1265 G$X_T3CCTL0$0$0 == 0xdfcc
                           00DFCC  1266 _X_T3CCTL0	=	0xdfcc
                           00DFCD  1267 G$X_T3CC0$0$0 == 0xdfcd
                           00DFCD  1268 _X_T3CC0	=	0xdfcd
                           00DFCE  1269 G$X_T3CCTL1$0$0 == 0xdfce
                           00DFCE  1270 _X_T3CCTL1	=	0xdfce
                           00DFCF  1271 G$X_T3CC1$0$0 == 0xdfcf
                           00DFCF  1272 _X_T3CC1	=	0xdfcf
                           00DFD0  1273 G$_NA_PSW$0$0 == 0xdfd0
                           00DFD0  1274 __NA_PSW	=	0xdfd0
                           00DFD1  1275 G$X_DMAIRQ$0$0 == 0xdfd1
                           00DFD1  1276 _X_DMAIRQ	=	0xdfd1
                           00DFD2  1277 G$X_DMA1CFGL$0$0 == 0xdfd2
                           00DFD2  1278 _X_DMA1CFGL	=	0xdfd2
                           00DFD3  1279 G$X_DMA1CFGH$0$0 == 0xdfd3
                           00DFD3  1280 _X_DMA1CFGH	=	0xdfd3
                           00DFD4  1281 G$X_DMA0CFGL$0$0 == 0xdfd4
                           00DFD4  1282 _X_DMA0CFGL	=	0xdfd4
                           00DFD5  1283 G$X_DMA0CFGH$0$0 == 0xdfd5
                           00DFD5  1284 _X_DMA0CFGH	=	0xdfd5
                           00DFD6  1285 G$X_DMAARM$0$0 == 0xdfd6
                           00DFD6  1286 _X_DMAARM	=	0xdfd6
                           00DFD7  1287 G$X_DMAREQ$0$0 == 0xdfd7
                           00DFD7  1288 _X_DMAREQ	=	0xdfd7
                           00DFD8  1289 G$X_TIMIF$0$0 == 0xdfd8
                           00DFD8  1290 _X_TIMIF	=	0xdfd8
                           00DFD9  1291 G$X_RFD$0$0 == 0xdfd9
                           00DFD9  1292 _X_RFD	=	0xdfd9
                           00DFDA  1293 G$X_T1CC0L$0$0 == 0xdfda
                           00DFDA  1294 _X_T1CC0L	=	0xdfda
                           00DFDB  1295 G$X_T1CC0H$0$0 == 0xdfdb
                           00DFDB  1296 _X_T1CC0H	=	0xdfdb
                           00DFDC  1297 G$X_T1CC1L$0$0 == 0xdfdc
                           00DFDC  1298 _X_T1CC1L	=	0xdfdc
                           00DFDD  1299 G$X_T1CC1H$0$0 == 0xdfdd
                           00DFDD  1300 _X_T1CC1H	=	0xdfdd
                           00DFDE  1301 G$X_T1CC2L$0$0 == 0xdfde
                           00DFDE  1302 _X_T1CC2L	=	0xdfde
                           00DFDF  1303 G$X_T1CC2H$0$0 == 0xdfdf
                           00DFDF  1304 _X_T1CC2H	=	0xdfdf
                           00DFE0  1305 G$_NA_ACC$0$0 == 0xdfe0
                           00DFE0  1306 __NA_ACC	=	0xdfe0
                           00DFE1  1307 G$X_RFST$0$0 == 0xdfe1
                           00DFE1  1308 _X_RFST	=	0xdfe1
                           00DFE2  1309 G$X_T1CNTL$0$0 == 0xdfe2
                           00DFE2  1310 _X_T1CNTL	=	0xdfe2
                           00DFE3  1311 G$X_T1CNTH$0$0 == 0xdfe3
                           00DFE3  1312 _X_T1CNTH	=	0xdfe3
                           00DFE4  1313 G$X_T1CTL$0$0 == 0xdfe4
                           00DFE4  1314 _X_T1CTL	=	0xdfe4
                           00DFE5  1315 G$X_T1CCTL0$0$0 == 0xdfe5
                           00DFE5  1316 _X_T1CCTL0	=	0xdfe5
                           00DFE6  1317 G$X_T1CCTL1$0$0 == 0xdfe6
                           00DFE6  1318 _X_T1CCTL1	=	0xdfe6
                           00DFE7  1319 G$X_T1CCTL2$0$0 == 0xdfe7
                           00DFE7  1320 _X_T1CCTL2	=	0xdfe7
                           00DFE8  1321 G$_NA_IRCON2$0$0 == 0xdfe8
                           00DFE8  1322 __NA_IRCON2	=	0xdfe8
                           00DFE9  1323 G$X_RFIF$0$0 == 0xdfe9
                           00DFE9  1324 _X_RFIF	=	0xdfe9
                           00DFEA  1325 G$X_T4CNT$0$0 == 0xdfea
                           00DFEA  1326 _X_T4CNT	=	0xdfea
                           00DFEB  1327 G$X_T4CTL$0$0 == 0xdfeb
                           00DFEB  1328 _X_T4CTL	=	0xdfeb
                           00DFEC  1329 G$X_T4CCTL0$0$0 == 0xdfec
                           00DFEC  1330 _X_T4CCTL0	=	0xdfec
                           00DFED  1331 G$X_T4CC0$0$0 == 0xdfed
                           00DFED  1332 _X_T4CC0	=	0xdfed
                           00DFEE  1333 G$X_T4CCTL1$0$0 == 0xdfee
                           00DFEE  1334 _X_T4CCTL1	=	0xdfee
                           00DFEF  1335 G$X_T4CC1$0$0 == 0xdfef
                           00DFEF  1336 _X_T4CC1	=	0xdfef
                           00DFF0  1337 G$_NA_B$0$0 == 0xdff0
                           00DFF0  1338 __NA_B	=	0xdff0
                           00DFF1  1339 G$X_PERCFG$0$0 == 0xdff1
                           00DFF1  1340 _X_PERCFG	=	0xdff1
                           00DFF2  1341 G$X_ADCCFG$0$0 == 0xdff2
                           00DFF2  1342 _X_ADCCFG	=	0xdff2
                           00DFF3  1343 G$X_P0SEL$0$0 == 0xdff3
                           00DFF3  1344 _X_P0SEL	=	0xdff3
                           00DFF4  1345 G$X_P1SEL$0$0 == 0xdff4
                           00DFF4  1346 _X_P1SEL	=	0xdff4
                           00DFF5  1347 G$X_P2SEL$0$0 == 0xdff5
                           00DFF5  1348 _X_P2SEL	=	0xdff5
                           00DFF6  1349 G$X_P1INP$0$0 == 0xdff6
                           00DFF6  1350 _X_P1INP	=	0xdff6
                           00DFF7  1351 G$X_P2INP$0$0 == 0xdff7
                           00DFF7  1352 _X_P2INP	=	0xdff7
                           00DFF8  1353 G$X_U1CSR$0$0 == 0xdff8
                           00DFF8  1354 _X_U1CSR	=	0xdff8
                           00DFF9  1355 G$X_U1DBUF$0$0 == 0xdff9
                           00DFF9  1356 _X_U1DBUF	=	0xdff9
                           00DFFA  1357 G$X_U1BAUD$0$0 == 0xdffa
                           00DFFA  1358 _X_U1BAUD	=	0xdffa
                           00DFFB  1359 G$X_U1UCR$0$0 == 0xdffb
                           00DFFB  1360 _X_U1UCR	=	0xdffb
                           00DFFC  1361 G$X_U1GCR$0$0 == 0xdffc
                           00DFFC  1362 _X_U1GCR	=	0xdffc
                           00DFFD  1363 G$X_P0DIR$0$0 == 0xdffd
                           00DFFD  1364 _X_P0DIR	=	0xdffd
                           00DFFE  1365 G$X_P1DIR$0$0 == 0xdffe
                           00DFFE  1366 _X_P1DIR	=	0xdffe
                           00DFFF  1367 G$X_P2DIR$0$0 == 0xdfff
                           00DFFF  1368 _X_P2DIR	=	0xdfff
                           000000  1369 G$uartRxBuffer$0$0==.
      000000                       1370 _uartRxBuffer::
      000000                       1371 	.ds 128
                           000080  1372 G$uartTxBuffer$0$0==.
      000080                       1373 _uartTxBuffer::
      000080                       1374 	.ds 128
                           000100  1375 G$uartTxLength$0$0==.
      000100                       1376 _uartTxLength::
      000100                       1377 	.ds 2
                           000102  1378 G$uartTxIndex$0$0==.
      000102                       1379 _uartTxIndex::
      000102                       1380 	.ds 2
                           000104  1381 G$uartRxIndex$0$0==.
      000104                       1382 _uartRxIndex::
      000104                       1383 	.ds 2
                                   1384 ;--------------------------------------------------------
                                   1385 ; absolute external ram data
                                   1386 ;--------------------------------------------------------
                                   1387 	.area XABS    (ABS,XDATA)
                                   1388 ;--------------------------------------------------------
                                   1389 ; external initialized ram data
                                   1390 ;--------------------------------------------------------
                                   1391 	.area XISEG   (XDATA)
                                   1392 	.area HOME    (CODE)
                                   1393 	.area GSINIT0 (CODE)
                                   1394 	.area GSINIT1 (CODE)
                                   1395 	.area GSINIT2 (CODE)
                                   1396 	.area GSINIT3 (CODE)
                                   1397 	.area GSINIT4 (CODE)
                                   1398 	.area GSINIT5 (CODE)
                                   1399 	.area GSINIT  (CODE)
                                   1400 	.area GSFINAL (CODE)
                                   1401 	.area CSEG    (CODE)
                                   1402 ;--------------------------------------------------------
                                   1403 ; interrupt vector 
                                   1404 ;--------------------------------------------------------
                                   1405 	.area HOME    (CODE)
      000000                       1406 __interrupt_vect:
      000000 02r00r00         [24] 1407 	ljmp	__sdcc_gsinit_startup
                                   1408 ;--------------------------------------------------------
                                   1409 ; global & static initialisations
                                   1410 ;--------------------------------------------------------
                                   1411 	.area HOME    (CODE)
                                   1412 	.area GSINIT  (CODE)
                                   1413 	.area GSFINAL (CODE)
                                   1414 	.area GSINIT  (CODE)
                                   1415 	.globl __sdcc_gsinit_startup
                                   1416 	.globl __sdcc_program_startup
                                   1417 	.globl __start__stack
                                   1418 	.globl __mcs51_genXINIT
                                   1419 	.globl __mcs51_genXRAMCLEAR
                                   1420 	.globl __mcs51_genRAMCLEAR
                                   1421 	.area GSFINAL (CODE)
      000000 02r00r03         [24] 1422 	ljmp	__sdcc_program_startup
                                   1423 ;--------------------------------------------------------
                                   1424 ; Home
                                   1425 ;--------------------------------------------------------
                                   1426 	.area HOME    (CODE)
                                   1427 	.area HOME    (CODE)
      000003                       1428 __sdcc_program_startup:
      000003 02r00r00         [24] 1429 	ljmp	_main
                                   1430 ;	return from main will return to caller
                                   1431 ;--------------------------------------------------------
                                   1432 ; code
                                   1433 ;--------------------------------------------------------
                                   1434 	.area CSEG    (CODE)
                                   1435 ;------------------------------------------------------------
                                   1436 ;Allocation info for local variables in function 'main'
                                   1437 ;------------------------------------------------------------
                                   1438 ;dataPacket                Allocated with name '_main_dataPacket_1_34'
                                   1439 ;repPacket                 Allocated with name '_main_repPacket_1_34'
                                   1440 ;dataErr                   Allocated to registers r7 
                                   1441 ;dataLength                Allocated with name '_main_dataLength_1_34'
                                   1442 ;i                         Allocated with name '_main_i_1_34'
                                   1443 ;repeatedMessage           Allocated to registers r6 
                                   1444 ;sloc0                     Allocated with name '_main_sloc0_1_0'
                                   1445 ;------------------------------------------------------------
                           000000  1446 	G$main$0$0 ==.
                           000000  1447 	C$MMCommander.c$39$0$0 ==.
                                   1448 ;	MMCommander.c:39: int main( void ) {
                                   1449 ;	-----------------------------------------
                                   1450 ;	 function main
                                   1451 ;	-----------------------------------------
      000000                       1452 _main:
                           000007  1453 	ar7 = 0x07
                           000006  1454 	ar6 = 0x06
                           000005  1455 	ar5 = 0x05
                           000004  1456 	ar4 = 0x04
                           000003  1457 	ar3 = 0x03
                           000002  1458 	ar2 = 0x02
                           000001  1459 	ar1 = 0x01
                           000000  1460 	ar0 = 0x00
                           000000  1461 	C$MMCommander.c$43$1$0 ==.
                                   1462 ;	MMCommander.c:43: unsigned int dataLength = 0;
      000000 E4               [12] 1463 	clr	a
      000001 F5*03            [12] 1464 	mov	_main_dataLength_1_34,a
      000003 F5*04            [12] 1465 	mov	(_main_dataLength_1_34 + 1),a
                           000005  1466 	C$MMCommander.c$48$1$34 ==.
                                   1467 ;	MMCommander.c:48: initGlobals( );
      000005 12r00r00         [24] 1468 	lcall	_initGlobals
                           000008  1469 	C$MMCommander.c$49$1$34 ==.
                                   1470 ;	MMCommander.c:49: configureIO( );
      000008 12r00r00         [24] 1471 	lcall	_configureIO
                           00000B  1472 	C$MMCommander.c$50$1$34 ==.
                                   1473 ;	MMCommander.c:50: configureOsc( );
      00000B 12r00r00         [24] 1474 	lcall	_configureOsc
                           00000E  1475 	C$MMCommander.c$51$1$34 ==.
                                   1476 ;	MMCommander.c:51: crc16Init( );
      00000E 12r00r00         [24] 1477 	lcall	_crc16Init
                           000011  1478 	C$MMCommander.c$52$1$34 ==.
                                   1479 ;	MMCommander.c:52: configureMedtronicRFMode( );
      000011 12r00r00         [24] 1480 	lcall	_configureMedtronicRFMode
                           000014  1481 	C$MMCommander.c$53$1$34 ==.
                                   1482 ;	MMCommander.c:53: enablePushButtonInt( );
      000014 12r00r00         [24] 1483 	lcall	_enablePushButtonInt
                           000017  1484 	C$MMCommander.c$54$1$34 ==.
                                   1485 ;	MMCommander.c:54: halUartInit( HAL_UART_BAUDRATE_57600, 0 );
      000017 75*00 00         [24] 1486 	mov	_halUartInit_PARM_2,#0x00
      00001A 75 82 05         [24] 1487 	mov	dpl,#0x05
      00001D 12r00r00         [24] 1488 	lcall	_halUartInit
                           000020  1489 	C$MMCommander.c$57$1$34 ==.
                                   1490 ;	MMCommander.c:57: while( 1 ) {
      000020                       1491 00122$:
                           000020  1492 	C$MMCommander.c$58$2$35 ==.
                                   1493 ;	MMCommander.c:58: dataErr = receiveMedtronicMessage( dataPacket, &dataLength );
      000020 75*00r03         [24] 1494 	mov	_receiveMedtronicMessage_PARM_2,#_main_dataLength_1_34
      000023 75*01 00         [24] 1495 	mov	(_receiveMedtronicMessage_PARM_2 + 1),#0x00
      000026 75*02 40         [24] 1496 	mov	(_receiveMedtronicMessage_PARM_2 + 2),#0x40
      000029 90r00r00         [24] 1497 	mov	dptr,#_main_dataPacket_1_34
      00002C 75 F0 40         [24] 1498 	mov	b,#0x40
      00002F 12r00r00         [24] 1499 	lcall	_receiveMedtronicMessage
      000032 AF 82            [24] 1500 	mov	r7,dpl
                           000034  1501 	C$MMCommander.c$59$2$35 ==.
                                   1502 ;	MMCommander.c:59: if( dataLength > 0 ) {
      000034 E5*03            [12] 1503 	mov	a,_main_dataLength_1_34
      000036 45*04            [12] 1504 	orl	a,(_main_dataLength_1_34 + 1)
      000038 60 E6            [24] 1505 	jz	00122$
                           00003A  1506 	C$MMCommander.c$60$3$36 ==.
                                   1507 ;	MMCommander.c:60: repeatedMessage = 0;
      00003A 7E 00            [12] 1508 	mov	r6,#0x00
                           00003C  1509 	C$MMCommander.c$62$3$36 ==.
                                   1510 ;	MMCommander.c:62: (dataErr == ((uartTxBuffer[0] >> 7) & 0x01)) &&
      00003C 90r00r80         [24] 1511 	mov	dptr,#_uartTxBuffer
      00003F E0               [24] 1512 	movx	a,@dptr
      000040 23               [12] 1513 	rl	a
      000041 54 01            [12] 1514 	anl	a,#0x01
      000043 FD               [12] 1515 	mov	r5,a
      000044 EF               [12] 1516 	mov	a,r7
      000045 B5 05 4C         [24] 1517 	cjne	a,ar5,00105$
                           000048  1518 	C$MMCommander.c$63$3$36 ==.
                                   1519 ;	MMCommander.c:63: (dataLength == (uartTxLength - 2))
      000048 90r01r00         [24] 1520 	mov	dptr,#_uartTxLength
      00004B E0               [24] 1521 	movx	a,@dptr
      00004C FC               [12] 1522 	mov	r4,a
      00004D A3               [24] 1523 	inc	dptr
      00004E E0               [24] 1524 	movx	a,@dptr
      00004F FD               [12] 1525 	mov	r5,a
      000050 EC               [12] 1526 	mov	a,r4
      000051 24 FE            [12] 1527 	add	a,#0xFE
      000053 FC               [12] 1528 	mov	r4,a
      000054 ED               [12] 1529 	mov	a,r5
      000055 34 FF            [12] 1530 	addc	a,#0xFF
      000057 FD               [12] 1531 	mov	r5,a
      000058 EC               [12] 1532 	mov	a,r4
      000059 B5*03 38         [24] 1533 	cjne	a,_main_dataLength_1_34,00105$
      00005C ED               [12] 1534 	mov	a,r5
      00005D B5*04 34         [24] 1535 	cjne	a,(_main_dataLength_1_34 + 1),00105$
                           000060  1536 	C$MMCommander.c$65$4$37 ==.
                                   1537 ;	MMCommander.c:65: repeatedMessage = 1;
      000060 7E 01            [12] 1538 	mov	r6,#0x01
                           000062  1539 	C$MMCommander.c$66$1$34 ==.
                                   1540 ;	MMCommander.c:66: for( i = 0; i < dataLength; i++ ) {
      000062 7D 00            [12] 1541 	mov	r5,#0x00
      000064                       1542 00125$:
      000064 ED               [12] 1543 	mov	a,r5
      000065 FB               [12] 1544 	mov	r3,a
      000066 33               [12] 1545 	rlc	a
      000067 95 E0            [12] 1546 	subb	a,acc
      000069 FC               [12] 1547 	mov	r4,a
      00006A C3               [12] 1548 	clr	c
      00006B EB               [12] 1549 	mov	a,r3
      00006C 95*03            [12] 1550 	subb	a,_main_dataLength_1_34
      00006E EC               [12] 1551 	mov	a,r4
      00006F 95*04            [12] 1552 	subb	a,(_main_dataLength_1_34 + 1)
      000071 50 21            [24] 1553 	jnc	00105$
                           000073  1554 	C$MMCommander.c$67$5$38 ==.
                                   1555 ;	MMCommander.c:67: if( dataPacket[i] != uartTxBuffer[i + 2] ) {
      000073 ED               [12] 1556 	mov	a,r5
      000074 24r00            [12] 1557 	add	a,#_main_dataPacket_1_34
      000076 F9               [12] 1558 	mov	r1,a
      000077 87 04            [24] 1559 	mov	ar4,@r1
      000079 74 02            [12] 1560 	mov	a,#0x02
      00007B 2D               [12] 1561 	add	a,r5
      00007C 24r80            [12] 1562 	add	a,#_uartTxBuffer
      00007E F5 82            [12] 1563 	mov	dpl,a
      000080 E4               [12] 1564 	clr	a
      000081 34s00            [12] 1565 	addc	a,#(_uartTxBuffer >> 8)
      000083 F5 83            [12] 1566 	mov	dph,a
      000085 E0               [24] 1567 	movx	a,@dptr
      000086 FB               [12] 1568 	mov	r3,a
      000087 EC               [12] 1569 	mov	a,r4
      000088 B5 03 02         [24] 1570 	cjne	a,ar3,00184$
      00008B 80 04            [24] 1571 	sjmp	00126$
      00008D                       1572 00184$:
                           00008D  1573 	C$MMCommander.c$68$6$39 ==.
                                   1574 ;	MMCommander.c:68: repeatedMessage = 0;
      00008D 7E 00            [12] 1575 	mov	r6,#0x00
                           00008F  1576 	C$MMCommander.c$69$6$39 ==.
                                   1577 ;	MMCommander.c:69: break;
      00008F 80 03            [24] 1578 	sjmp	00105$
      000091                       1579 00126$:
                           000091  1580 	C$MMCommander.c$66$4$37 ==.
                                   1581 ;	MMCommander.c:66: for( i = 0; i < dataLength; i++ ) {
      000091 0D               [12] 1582 	inc	r5
      000092 80 D0            [24] 1583 	sjmp	00125$
      000094                       1584 00105$:
                           000094  1585 	C$MMCommander.c$74$3$36 ==.
                                   1586 ;	MMCommander.c:74: if( repeatedMessage == 1 ) {
      000094 BE 01 1B         [24] 1587 	cjne	r6,#0x01,00117$
                           000097  1588 	C$MMCommander.c$75$4$40 ==.
                                   1589 ;	MMCommander.c:75: repPacket[0] = 0x04;
      000097 75*00 04         [24] 1590 	mov	_main_repPacket_1_34,#0x04
                           00009A  1591 	C$MMCommander.c$76$4$40 ==.
                                   1592 ;	MMCommander.c:76: halUartWrite( (uint8_t const *)repPacket, 1 );
      00009A 75*00 01         [24] 1593 	mov	_halUartWrite_PARM_2,#0x01
      00009D 75*01 00         [24] 1594 	mov	(_halUartWrite_PARM_2 + 1),#0x00
      0000A0 90r01r00         [24] 1595 	mov	dptr,#_main_repPacket_1_34
      0000A3 75 F0 40         [24] 1596 	mov	b,#0x40
      0000A6 12r00r00         [24] 1597 	lcall	_halUartWrite
                           0000A9  1598 	C$MMCommander.c$77$4$40 ==.
                                   1599 ;	MMCommander.c:77: usbUartProcess( );
      0000A9 12r00r00         [24] 1600 	lcall	_usbUartProcess
                           0000AC  1601 	C$MMCommander.c$78$4$40 ==.
                                   1602 ;	MMCommander.c:78: usbReceiveData( );
      0000AC 12r00r00         [24] 1603 	lcall	_usbReceiveData
      0000AF 02r00r20         [24] 1604 	ljmp	00122$
      0000B2                       1605 00117$:
                           0000B2  1606 	C$MMCommander.c$80$4$41 ==.
                                   1607 ;	MMCommander.c:80: if( dataErr == 0 ) {
      0000B2 EF               [12] 1608 	mov	a,r7
      0000B3 70 08            [24] 1609 	jnz	00109$
                           0000B5  1610 	C$MMCommander.c$81$5$42 ==.
                                   1611 ;	MMCommander.c:81: uartTxBuffer[0] = 0x02;
      0000B5 90r00r80         [24] 1612 	mov	dptr,#_uartTxBuffer
      0000B8 74 02            [12] 1613 	mov	a,#0x02
      0000BA F0               [24] 1614 	movx	@dptr,a
      0000BB 80 06            [24] 1615 	sjmp	00110$
      0000BD                       1616 00109$:
                           0000BD  1617 	C$MMCommander.c$83$5$43 ==.
                                   1618 ;	MMCommander.c:83: uartTxBuffer[0] = 0x82;
      0000BD 90r00r80         [24] 1619 	mov	dptr,#_uartTxBuffer
      0000C0 74 82            [12] 1620 	mov	a,#0x82
      0000C2 F0               [24] 1621 	movx	@dptr,a
      0000C3                       1622 00110$:
                           0000C3  1623 	C$MMCommander.c$85$4$41 ==.
                                   1624 ;	MMCommander.c:85: uartTxBuffer[1] = dataLength;
      0000C3 AF*03            [24] 1625 	mov	r7,_main_dataLength_1_34
      0000C5 90r00r81         [24] 1626 	mov	dptr,#(_uartTxBuffer + 0x0001)
      0000C8 EF               [12] 1627 	mov	a,r7
      0000C9 F0               [24] 1628 	movx	@dptr,a
                           0000CA  1629 	C$MMCommander.c$86$1$34 ==.
                                   1630 ;	MMCommander.c:86: for( i = 0; i < dataLength; i++ ) uartTxBuffer[i + 2] = dataPacket[i];
      0000CA 7F 00            [12] 1631 	mov	r7,#0x00
      0000CC                       1632 00128$:
      0000CC EF               [12] 1633 	mov	a,r7
      0000CD FD               [12] 1634 	mov	r5,a
      0000CE 33               [12] 1635 	rlc	a
      0000CF 95 E0            [12] 1636 	subb	a,acc
      0000D1 FE               [12] 1637 	mov	r6,a
      0000D2 C3               [12] 1638 	clr	c
      0000D3 ED               [12] 1639 	mov	a,r5
      0000D4 95*03            [12] 1640 	subb	a,_main_dataLength_1_34
      0000D6 EE               [12] 1641 	mov	a,r6
      0000D7 95*04            [12] 1642 	subb	a,(_main_dataLength_1_34 + 1)
      0000D9 50 16            [24] 1643 	jnc	00111$
      0000DB 74 02            [12] 1644 	mov	a,#0x02
      0000DD 2F               [12] 1645 	add	a,r7
      0000DE 24r80            [12] 1646 	add	a,#_uartTxBuffer
      0000E0 F5 82            [12] 1647 	mov	dpl,a
      0000E2 E4               [12] 1648 	clr	a
      0000E3 34s00            [12] 1649 	addc	a,#(_uartTxBuffer >> 8)
      0000E5 F5 83            [12] 1650 	mov	dph,a
      0000E7 EF               [12] 1651 	mov	a,r7
      0000E8 24r00            [12] 1652 	add	a,#_main_dataPacket_1_34
      0000EA F9               [12] 1653 	mov	r1,a
      0000EB E7               [12] 1654 	mov	a,@r1
      0000EC FE               [12] 1655 	mov	r6,a
      0000ED F0               [24] 1656 	movx	@dptr,a
      0000EE 0F               [12] 1657 	inc	r7
      0000EF 80 DB            [24] 1658 	sjmp	00128$
      0000F1                       1659 00111$:
                           0000F1  1660 	C$MMCommander.c$87$4$41 ==.
                                   1661 ;	MMCommander.c:87: uartTxLength = dataLength + 2;
      0000F1 90r01r00         [24] 1662 	mov	dptr,#_uartTxLength
      0000F4 74 02            [12] 1663 	mov	a,#0x02
      0000F6 25*03            [12] 1664 	add	a,_main_dataLength_1_34
      0000F8 F0               [24] 1665 	movx	@dptr,a
      0000F9 E4               [12] 1666 	clr	a
      0000FA 35*04            [12] 1667 	addc	a,(_main_dataLength_1_34 + 1)
      0000FC A3               [24] 1668 	inc	dptr
      0000FD F0               [24] 1669 	movx	@dptr,a
                           0000FE  1670 	C$MMCommander.c$88$1$34 ==.
                                   1671 ;	MMCommander.c:88: for( i = 0; i < uartTxLength; i = i + 48 ) {
      0000FE 75*05 00         [24] 1672 	mov	_main_i_1_34,#0x00
      000101                       1673 00131$:
      000101 90r01r00         [24] 1674 	mov	dptr,#_uartTxLength
      000104 E0               [24] 1675 	movx	a,@dptr
      000105 FD               [12] 1676 	mov	r5,a
      000106 A3               [24] 1677 	inc	dptr
      000107 E0               [24] 1678 	movx	a,@dptr
      000108 FE               [12] 1679 	mov	r6,a
      000109 E5*05            [12] 1680 	mov	a,_main_i_1_34
      00010B F5*06            [12] 1681 	mov	_main_sloc0_1_0,a
      00010D 33               [12] 1682 	rlc	a
      00010E 95 E0            [12] 1683 	subb	a,acc
      000110 F5*07            [12] 1684 	mov	(_main_sloc0_1_0 + 1),a
      000112 C3               [12] 1685 	clr	c
      000113 E5*06            [12] 1686 	mov	a,_main_sloc0_1_0
      000115 9D               [12] 1687 	subb	a,r5
      000116 E5*07            [12] 1688 	mov	a,(_main_sloc0_1_0 + 1)
      000118 64 80            [12] 1689 	xrl	a,#0x80
      00011A 8E F0            [24] 1690 	mov	b,r6
      00011C 63 F0 80         [24] 1691 	xrl	b,#0x80
      00011F 95 F0            [12] 1692 	subb	a,b
      000121 40 03            [24] 1693 	jc	00189$
      000123 02r00r20         [24] 1694 	ljmp	00122$
      000126                       1695 00189$:
                           000126  1696 	C$MMCommander.c$89$5$44 ==.
                                   1697 ;	MMCommander.c:89: if( uartTxLength - i > 48 ) {
      000126 ED               [12] 1698 	mov	a,r5
      000127 C3               [12] 1699 	clr	c
      000128 95*06            [12] 1700 	subb	a,_main_sloc0_1_0
      00012A FA               [12] 1701 	mov	r2,a
      00012B EE               [12] 1702 	mov	a,r6
      00012C 95*07            [12] 1703 	subb	a,(_main_sloc0_1_0 + 1)
      00012E FF               [12] 1704 	mov	r7,a
      00012F C3               [12] 1705 	clr	c
      000130 74 30            [12] 1706 	mov	a,#0x30
      000132 9A               [12] 1707 	subb	a,r2
      000133 74 80            [12] 1708 	mov	a,#(0x00 ^ 0x80)
      000135 8F F0            [24] 1709 	mov	b,r7
      000137 63 F0 80         [24] 1710 	xrl	b,#0x80
      00013A 95 F0            [12] 1711 	subb	a,b
      00013C 50 2A            [24] 1712 	jnc	00113$
                           00013E  1713 	C$MMCommander.c$90$6$45 ==.
                                   1714 ;	MMCommander.c:90: halUartWrite( (uint8_t const *)&uartTxBuffer[i], 48 );
      00013E E5*05            [12] 1715 	mov	a,_main_i_1_34
      000140 24r80            [12] 1716 	add	a,#_uartTxBuffer
      000142 FA               [12] 1717 	mov	r2,a
      000143 E4               [12] 1718 	clr	a
      000144 34s00            [12] 1719 	addc	a,#(_uartTxBuffer >> 8)
      000146 FF               [12] 1720 	mov	r7,a
      000147 8A*06            [24] 1721 	mov	_main_sloc0_1_0,r2
      000149 8F*07            [24] 1722 	mov	(_main_sloc0_1_0 + 1),r7
      00014B 75*08 00         [24] 1723 	mov	(_main_sloc0_1_0 + 2),#0x00
      00014E 75*00 30         [24] 1724 	mov	_halUartWrite_PARM_2,#0x30
      000151 75*01 00         [24] 1725 	mov	(_halUartWrite_PARM_2 + 1),#0x00
      000154 85*06 82         [24] 1726 	mov	dpl,_main_sloc0_1_0
      000157 85*07 83         [24] 1727 	mov	dph,(_main_sloc0_1_0 + 1)
      00015A 85*08 F0         [24] 1728 	mov	b,(_main_sloc0_1_0 + 2)
      00015D 12r00r00         [24] 1729 	lcall	_halUartWrite
                           000160  1730 	C$MMCommander.c$91$6$45 ==.
                                   1731 ;	MMCommander.c:91: usbUartProcess( );
      000160 12r00r00         [24] 1732 	lcall	_usbUartProcess
                           000163  1733 	C$MMCommander.c$92$6$45 ==.
                                   1734 ;	MMCommander.c:92: usbReceiveData( );
      000163 12r00r00         [24] 1735 	lcall	_usbReceiveData
      000166 80 1F            [24] 1736 	sjmp	00132$
      000168                       1737 00113$:
                           000168  1738 	C$MMCommander.c$94$6$46 ==.
                                   1739 ;	MMCommander.c:94: halUartWrite( (uint8_t const *)&uartTxBuffer[i], uartTxLength - i );
      000168 E5*05            [12] 1740 	mov	a,_main_i_1_34
      00016A 24r80            [12] 1741 	add	a,#_uartTxBuffer
      00016C FA               [12] 1742 	mov	r2,a
      00016D E4               [12] 1743 	clr	a
      00016E 34s00            [12] 1744 	addc	a,#(_uartTxBuffer >> 8)
      000170 FC               [12] 1745 	mov	r4,a
      000171 7F 00            [12] 1746 	mov	r7,#0x00
      000173 ED               [12] 1747 	mov	a,r5
      000174 C3               [12] 1748 	clr	c
      000175 95*06            [12] 1749 	subb	a,_main_sloc0_1_0
      000177 F5*00            [12] 1750 	mov	_halUartWrite_PARM_2,a
      000179 EE               [12] 1751 	mov	a,r6
      00017A 95*07            [12] 1752 	subb	a,(_main_sloc0_1_0 + 1)
      00017C F5*01            [12] 1753 	mov	(_halUartWrite_PARM_2 + 1),a
      00017E 8A 82            [24] 1754 	mov	dpl,r2
      000180 8C 83            [24] 1755 	mov	dph,r4
      000182 8F F0            [24] 1756 	mov	b,r7
      000184 12r00r00         [24] 1757 	lcall	_halUartWrite
      000187                       1758 00132$:
                           000187  1759 	C$MMCommander.c$88$4$41 ==.
                                   1760 ;	MMCommander.c:88: for( i = 0; i < uartTxLength; i = i + 48 ) {
      000187 74 30            [12] 1761 	mov	a,#0x30
      000189 25*05            [12] 1762 	add	a,_main_i_1_34
      00018B F5*05            [12] 1763 	mov	_main_i_1_34,a
      00018D 02r01r01         [24] 1764 	ljmp	00131$
                           000190  1765 	C$MMCommander.c$100$1$34 ==.
                           000190  1766 	XG$main$0$0 ==.
      000190 22               [24] 1767 	ret
                                   1768 	.area CSEG    (CODE)
                                   1769 	.area CONST   (CODE)
                                   1770 	.area XINIT   (CODE)
                                   1771 	.area CABS    (ABS,CODE)
