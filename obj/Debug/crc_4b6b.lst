                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.0 #8981 (Apr  5 2014) (MINGW64)
                                      4 ; This file was generated Sat Apr 25 00:05:12 2015
                                      5 ;--------------------------------------------------------
                                      6 	.module crc_4b6b
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _decode4b6b_PARM_4
                                     13 	.globl _decode4b6b_PARM_3
                                     14 	.globl _decode4b6b_PARM_2
                                     15 	.globl _encode4b6b_PARM_4
                                     16 	.globl _encode4b6b_PARM_3
                                     17 	.globl _encode4b6b_PARM_2
                                     18 	.globl _decode4b6bsymbol_PARM_2
                                     19 	.globl _crc16_PARM_2
                                     20 	.globl _crc8_PARM_2
                                     21 	.globl _crc8
                                     22 	.globl _crc16Init
                                     23 	.globl _crc16
                                     24 	.globl _get4b6bsymbol
                                     25 	.globl _decode4b6bsymbol
                                     26 	.globl _encode4b6b
                                     27 	.globl _decode4b6b
                                     28 	.globl _sleep
                                     29 ;--------------------------------------------------------
                                     30 ; special function registers
                                     31 ;--------------------------------------------------------
                                     32 	.area RSEG    (ABS,DATA)
      000000                         33 	.org 0x0000
                                     34 ;--------------------------------------------------------
                                     35 ; special function bits
                                     36 ;--------------------------------------------------------
                                     37 	.area RSEG    (ABS,DATA)
      000000                         38 	.org 0x0000
                                     39 ;--------------------------------------------------------
                                     40 ; overlayable register banks
                                     41 ;--------------------------------------------------------
                                     42 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         43 	.ds 8
                                     44 ;--------------------------------------------------------
                                     45 ; internal ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area DSEG    (DATA)
                           000000    48 Lcrc_4b6b.encode4b6b$sloc0$1$0==.
      000000                         49 _encode4b6b_sloc0_1_0:
      000000                         50 	.ds 3
                           000003    51 Lcrc_4b6b.encode4b6b$sloc1$1$0==.
      000003                         52 _encode4b6b_sloc1_1_0:
      000003                         53 	.ds 3
                           000006    54 Lcrc_4b6b.encode4b6b$sloc2$1$0==.
      000006                         55 _encode4b6b_sloc2_1_0:
      000006                         56 	.ds 2
                           000008    57 Lcrc_4b6b.encode4b6b$sloc3$1$0==.
      000008                         58 _encode4b6b_sloc3_1_0:
      000008                         59 	.ds 2
                           00000A    60 Lcrc_4b6b.encode4b6b$sloc4$1$0==.
      00000A                         61 _encode4b6b_sloc4_1_0:
      00000A                         62 	.ds 3
                           00000D    63 Lcrc_4b6b.encode4b6b$sloc5$1$0==.
      00000D                         64 _encode4b6b_sloc5_1_0:
      00000D                         65 	.ds 2
                           00000F    66 Lcrc_4b6b.encode4b6b$sloc6$1$0==.
      00000F                         67 _encode4b6b_sloc6_1_0:
      00000F                         68 	.ds 1
                           000010    69 Lcrc_4b6b.decode4b6b$sloc0$1$0==.
      000010                         70 _decode4b6b_sloc0_1_0:
      000010                         71 	.ds 2
                           000012    72 Lcrc_4b6b.decode4b6b$sloc1$1$0==.
      000012                         73 _decode4b6b_sloc1_1_0:
      000012                         74 	.ds 3
                           000015    75 Lcrc_4b6b.decode4b6b$sloc2$1$0==.
      000015                         76 _decode4b6b_sloc2_1_0:
      000015                         77 	.ds 2
                           000017    78 Lcrc_4b6b.decode4b6b$sloc3$1$0==.
      000017                         79 _decode4b6b_sloc3_1_0:
      000017                         80 	.ds 1
                           000018    81 Lcrc_4b6b.decode4b6b$sloc4$1$0==.
      000018                         82 _decode4b6b_sloc4_1_0:
      000018                         83 	.ds 2
                                     84 ;--------------------------------------------------------
                                     85 ; overlayable items in internal ram 
                                     86 ;--------------------------------------------------------
                                     87 	.area	OSEG    (OVR,DATA)
                           000000    88 Lcrc_4b6b.crc8$sloc0$1$0==.
      000000                         89 _crc8_sloc0_1_0:
      000000                         90 	.ds 1
                                     91 	.area	OSEG    (OVR,DATA)
                           000000    92 Lcrc_4b6b.crc16$sloc0$1$0==.
      000000                         93 _crc16_sloc0_1_0:
      000000                         94 	.ds 2
                           000002    95 Lcrc_4b6b.crc16$sloc1$1$0==.
      000002                         96 _crc16_sloc1_1_0:
      000002                         97 	.ds 3
                                     98 ;--------------------------------------------------------
                                     99 ; indirectly addressable internal ram data
                                    100 ;--------------------------------------------------------
                                    101 	.area ISEG    (DATA)
                                    102 ;--------------------------------------------------------
                                    103 ; absolute internal ram data
                                    104 ;--------------------------------------------------------
                                    105 	.area IABS    (ABS,DATA)
                                    106 	.area IABS    (ABS,DATA)
                                    107 ;--------------------------------------------------------
                                    108 ; bit data
                                    109 ;--------------------------------------------------------
                                    110 	.area BSEG    (BIT)
                                    111 ;--------------------------------------------------------
                                    112 ; paged external ram data
                                    113 ;--------------------------------------------------------
                                    114 	.area PSEG    (PAG,XDATA)
                                    115 ;--------------------------------------------------------
                                    116 ; external ram data
                                    117 ;--------------------------------------------------------
                                    118 	.area XSEG    (XDATA)
                           000000   119 Fcrc_4b6b$crc16Tab$0$0==.
      000000                        120 _crc16Tab:
      000000                        121 	.ds 512
                           000200   122 Lcrc_4b6b.crc8$nBytes$1$9==.
      000200                        123 _crc8_PARM_2:
      000200                        124 	.ds 2
                           000202   125 Lcrc_4b6b.crc8$message$1$9==.
      000202                        126 _crc8_message_1_9:
      000202                        127 	.ds 3
                           000205   128 Lcrc_4b6b.crc8$remainder$1$10==.
      000205                        129 _crc8_remainder_1_10:
      000205                        130 	.ds 1
                           000206   131 Lcrc_4b6b.crc16Init$crc$1$14==.
      000206                        132 _crc16Init_crc_1_14:
      000206                        133 	.ds 2
                           000208   134 Lcrc_4b6b.crc16Init$c$1$14==.
      000208                        135 _crc16Init_c_1_14:
      000208                        136 	.ds 2
                           00020A   137 Lcrc_4b6b.crc16$nBytes$1$17==.
      00020A                        138 _crc16_PARM_2:
      00020A                        139 	.ds 2
                           00020C   140 Lcrc_4b6b.crc16$message$1$17==.
      00020C                        141 _crc16_message_1_17:
      00020C                        142 	.ds 3
                           00020F   143 Lcrc_4b6b.crc16$crc$1$18==.
      00020F                        144 _crc16_crc_1_18:
      00020F                        145 	.ds 2
                           000211   146 Lcrc_4b6b.get4b6bsymbol$inSymbol$1$20==.
      000211                        147 _get4b6bsymbol_inSymbol_1_20:
      000211                        148 	.ds 1
                           000212   149 Lcrc_4b6b.decode4b6bsymbol$outSymbol$1$23==.
      000212                        150 _decode4b6bsymbol_PARM_2:
      000212                        151 	.ds 3
                           000215   152 Lcrc_4b6b.decode4b6bsymbol$inSymbol$1$23==.
      000215                        153 _decode4b6bsymbol_inSymbol_1_23:
      000215                        154 	.ds 1
                           000216   155 Lcrc_4b6b.encode4b6b$bytesIn$1$43==.
      000216                        156 _encode4b6b_PARM_2:
      000216                        157 	.ds 2
                           000218   158 Lcrc_4b6b.encode4b6b$messageOut$1$43==.
      000218                        159 _encode4b6b_PARM_3:
      000218                        160 	.ds 3
                           00021B   161 Lcrc_4b6b.encode4b6b$bytesOut$1$43==.
      00021B                        162 _encode4b6b_PARM_4:
      00021B                        163 	.ds 3
                           00021E   164 Lcrc_4b6b.encode4b6b$messageIn$1$43==.
      00021E                        165 _encode4b6b_messageIn_1_43:
      00021E                        166 	.ds 3
                           000221   167 Lcrc_4b6b.encode4b6b$intBuffer$1$44==.
      000221                        168 _encode4b6b_intBuffer_1_44:
      000221                        169 	.ds 2
                           000223   170 Lcrc_4b6b.encode4b6b$intBitsAvailable$1$44==.
      000223                        171 _encode4b6b_intBitsAvailable_1_44:
      000223                        172 	.ds 2
                           000225   173 Lcrc_4b6b.encode4b6b$symbol$1$44==.
      000225                        174 _encode4b6b_symbol_1_44:
      000225                        175 	.ds 1
                           000226   176 Lcrc_4b6b.decode4b6b$bytesIn$1$50==.
      000226                        177 _decode4b6b_PARM_2:
      000226                        178 	.ds 2
                           000228   179 Lcrc_4b6b.decode4b6b$messageOut$1$50==.
      000228                        180 _decode4b6b_PARM_3:
      000228                        181 	.ds 3
                           00022B   182 Lcrc_4b6b.decode4b6b$bytesOut$1$50==.
      00022B                        183 _decode4b6b_PARM_4:
      00022B                        184 	.ds 3
                           00022E   185 Lcrc_4b6b.decode4b6b$messageIn$1$50==.
      00022E                        186 _decode4b6b_messageIn_1_50:
      00022E                        187 	.ds 3
                           000231   188 Lcrc_4b6b.decode4b6b$intBuffer$1$51==.
      000231                        189 _decode4b6b_intBuffer_1_51:
      000231                        190 	.ds 2
                           000233   191 Lcrc_4b6b.decode4b6b$intBitsAvailable$1$51==.
      000233                        192 _decode4b6b_intBitsAvailable_1_51:
      000233                        193 	.ds 2
                           000235   194 Lcrc_4b6b.decode4b6b$symbol$1$51==.
      000235                        195 _decode4b6b_symbol_1_51:
      000235                        196 	.ds 1
                           000236   197 Lcrc_4b6b.decode4b6b$recByte$1$51==.
      000236                        198 _decode4b6b_recByte_1_51:
      000236                        199 	.ds 1
                           000237   200 Lcrc_4b6b.decode4b6b$nibbleFlag$1$51==.
      000237                        201 _decode4b6b_nibbleFlag_1_51:
      000237                        202 	.ds 1
                           000238   203 Lcrc_4b6b.decode4b6b$outBytes$1$51==.
      000238                        204 _decode4b6b_outBytes_1_51:
      000238                        205 	.ds 1
                           000239   206 Lcrc_4b6b.sleep$time$1$55==.
      000239                        207 _sleep_time_1_55:
      000239                        208 	.ds 2
                                    209 ;--------------------------------------------------------
                                    210 ; absolute external ram data
                                    211 ;--------------------------------------------------------
                                    212 	.area XABS    (ABS,XDATA)
                                    213 ;--------------------------------------------------------
                                    214 ; external initialized ram data
                                    215 ;--------------------------------------------------------
                                    216 	.area XISEG   (XDATA)
                                    217 	.area HOME    (CODE)
                                    218 	.area GSINIT0 (CODE)
                                    219 	.area GSINIT1 (CODE)
                                    220 	.area GSINIT2 (CODE)
                                    221 	.area GSINIT3 (CODE)
                                    222 	.area GSINIT4 (CODE)
                                    223 	.area GSINIT5 (CODE)
                                    224 	.area GSINIT  (CODE)
                                    225 	.area GSFINAL (CODE)
                                    226 	.area CSEG    (CODE)
                                    227 ;--------------------------------------------------------
                                    228 ; global & static initialisations
                                    229 ;--------------------------------------------------------
                                    230 	.area HOME    (CODE)
                                    231 	.area GSINIT  (CODE)
                                    232 	.area GSFINAL (CODE)
                                    233 	.area GSINIT  (CODE)
                                    234 ;--------------------------------------------------------
                                    235 ; Home
                                    236 ;--------------------------------------------------------
                                    237 	.area HOME    (CODE)
                                    238 	.area HOME    (CODE)
                                    239 ;--------------------------------------------------------
                                    240 ; code
                                    241 ;--------------------------------------------------------
                                    242 	.area CSEG    (CODE)
                                    243 ;------------------------------------------------------------
                                    244 ;Allocation info for local variables in function 'crc8'
                                    245 ;------------------------------------------------------------
                                    246 ;nBytes                    Allocated with name '_crc8_PARM_2'
                                    247 ;message                   Allocated with name '_crc8_message_1_9'
                                    248 ;remainder                 Allocated with name '_crc8_remainder_1_10'
                                    249 ;byte                      Allocated with name '_crc8_byte_1_10'
                                    250 ;bit                       Allocated with name '_crc8_bit_1_10'
                                    251 ;sloc0                     Allocated with name '_crc8_sloc0_1_0'
                                    252 ;------------------------------------------------------------
                           000000   253 	G$crc8$0$0 ==.
                           000000   254 	C$crc_4b6b.c$6$0$0 ==.
                                    255 ;	crc_4b6b.c:6: char crc8( char *message, unsigned int nBytes ) {
                                    256 ;	-----------------------------------------
                                    257 ;	 function crc8
                                    258 ;	-----------------------------------------
      000000                        259 _crc8:
                           000007   260 	ar7 = 0x07
                           000006   261 	ar6 = 0x06
                           000005   262 	ar5 = 0x05
                           000004   263 	ar4 = 0x04
                           000003   264 	ar3 = 0x03
                           000002   265 	ar2 = 0x02
                           000001   266 	ar1 = 0x01
                           000000   267 	ar0 = 0x00
      000000 AF F0            [24]  268 	mov	r7,b
      000002 AE 83            [24]  269 	mov	r6,dph
      000004 E5 82            [12]  270 	mov	a,dpl
      000006 90r02r02         [24]  271 	mov	dptr,#_crc8_message_1_9
      000009 F0               [24]  272 	movx	@dptr,a
      00000A EE               [12]  273 	mov	a,r6
      00000B A3               [24]  274 	inc	dptr
      00000C F0               [24]  275 	movx	@dptr,a
      00000D EF               [12]  276 	mov	a,r7
      00000E A3               [24]  277 	inc	dptr
      00000F F0               [24]  278 	movx	@dptr,a
                           000010   279 	C$crc_4b6b.c$7$1$0 ==.
                                    280 ;	crc_4b6b.c:7: char remainder = 0;
      000010 90r02r05         [24]  281 	mov	dptr,#_crc8_remainder_1_10
      000013 E4               [12]  282 	clr	a
      000014 F0               [24]  283 	movx	@dptr,a
                           000015   284 	C$crc_4b6b.c$11$2$11 ==.
                                    285 ;	crc_4b6b.c:11: for( byte = 0; byte < nBytes; ++byte ) {
      000015 90r02r02         [24]  286 	mov	dptr,#_crc8_message_1_9
      000018 E0               [24]  287 	movx	a,@dptr
      000019 FD               [12]  288 	mov	r5,a
      00001A A3               [24]  289 	inc	dptr
      00001B E0               [24]  290 	movx	a,@dptr
      00001C FE               [12]  291 	mov	r6,a
      00001D A3               [24]  292 	inc	dptr
      00001E E0               [24]  293 	movx	a,@dptr
      00001F FF               [12]  294 	mov	r7,a
      000020 90r02r00         [24]  295 	mov	dptr,#_crc8_PARM_2
      000023 E0               [24]  296 	movx	a,@dptr
      000024 FB               [12]  297 	mov	r3,a
      000025 A3               [24]  298 	inc	dptr
      000026 E0               [24]  299 	movx	a,@dptr
      000027 FC               [12]  300 	mov	r4,a
      000028 79 00            [12]  301 	mov	r1,#0x00
      00002A 7A 00            [12]  302 	mov	r2,#0x00
      00002C                        303 00109$:
      00002C C3               [12]  304 	clr	c
      00002D E9               [12]  305 	mov	a,r1
      00002E 9B               [12]  306 	subb	a,r3
      00002F EA               [12]  307 	mov	a,r2
      000030 9C               [12]  308 	subb	a,r4
      000031 50 5E            [24]  309 	jnc	00105$
                           000033   310 	C$crc_4b6b.c$12$1$10 ==.
                                    311 ;	crc_4b6b.c:12: remainder ^= message[byte];
      000033 C0 03            [24]  312 	push	ar3
      000035 C0 04            [24]  313 	push	ar4
      000037 E9               [12]  314 	mov	a,r1
      000038 2D               [12]  315 	add	a,r5
      000039 F8               [12]  316 	mov	r0,a
      00003A EA               [12]  317 	mov	a,r2
      00003B 3E               [12]  318 	addc	a,r6
      00003C FB               [12]  319 	mov	r3,a
      00003D 8F 04            [24]  320 	mov	ar4,r7
      00003F 88 82            [24]  321 	mov	dpl,r0
      000041 8B 83            [24]  322 	mov	dph,r3
      000043 8C F0            [24]  323 	mov	b,r4
      000045 12r00r00         [24]  324 	lcall	__gptrget
      000048 F8               [12]  325 	mov	r0,a
      000049 90r02r05         [24]  326 	mov	dptr,#_crc8_remainder_1_10
      00004C E0               [24]  327 	movx	a,@dptr
      00004D FC               [12]  328 	mov	r4,a
      00004E E8               [12]  329 	mov	a,r0
      00004F 6C               [12]  330 	xrl	a,r4
      000050 F0               [24]  331 	movx	@dptr,a
                           000051   332 	C$crc_4b6b.c$13$1$10 ==.
                                    333 ;	crc_4b6b.c:13: for( bit = 8; bit > 0; --bit ) {
      000051 75*00 08         [24]  334 	mov	_crc8_sloc0_1_0,#0x08
                           000054   335 	C$crc_4b6b.c$21$1$10 ==.
                                    336 ;	crc_4b6b.c:21: return(remainder);
      000054 D0 04            [24]  337 	pop	ar4
      000056 D0 03            [24]  338 	pop	ar3
                           000058   339 	C$crc_4b6b.c$13$2$11 ==.
                                    340 ;	crc_4b6b.c:13: for( bit = 8; bit > 0; --bit ) {
      000058                        341 00106$:
                           000058   342 	C$crc_4b6b.c$14$3$12 ==.
                                    343 ;	crc_4b6b.c:14: if( remainder & 0x80 )
      000058 90r02r05         [24]  344 	mov	dptr,#_crc8_remainder_1_10
      00005B E0               [24]  345 	movx	a,@dptr
      00005C F8               [12]  346 	mov	r0,a
      00005D 30 E7 14         [24]  347 	jnb	acc.7,00102$
                           000060   348 	C$crc_4b6b.c$15$1$10 ==.
                                    349 ;	crc_4b6b.c:15: remainder = (remainder << 1) ^ 0x9B;
      000060 C0 03            [24]  350 	push	ar3
      000062 C0 04            [24]  351 	push	ar4
      000064 E8               [12]  352 	mov	a,r0
      000065 28               [12]  353 	add	a,r0
      000066 FC               [12]  354 	mov	r4,a
      000067 90r02r05         [24]  355 	mov	dptr,#_crc8_remainder_1_10
      00006A 74 9B            [12]  356 	mov	a,#0x9B
      00006C 6C               [12]  357 	xrl	a,r4
      00006D F0               [24]  358 	movx	@dptr,a
      00006E D0 04            [24]  359 	pop	ar4
      000070 D0 03            [24]  360 	pop	ar3
      000072 80 07            [24]  361 	sjmp	00107$
      000074                        362 00102$:
                           000074   363 	C$crc_4b6b.c$17$3$12 ==.
                                    364 ;	crc_4b6b.c:17: remainder = (remainder << 1);
      000074 E8               [12]  365 	mov	a,r0
      000075 28               [12]  366 	add	a,r0
      000076 F8               [12]  367 	mov	r0,a
      000077 90r02r05         [24]  368 	mov	dptr,#_crc8_remainder_1_10
      00007A F0               [24]  369 	movx	@dptr,a
      00007B                        370 00107$:
                           00007B   371 	C$crc_4b6b.c$13$2$11 ==.
                                    372 ;	crc_4b6b.c:13: for( bit = 8; bit > 0; --bit ) {
      00007B 15*00            [12]  373 	dec	_crc8_sloc0_1_0
      00007D C3               [12]  374 	clr	c
      00007E 74 80            [12]  375 	mov	a,#(0x00 ^ 0x80)
      000080 85*00 F0         [24]  376 	mov	b,_crc8_sloc0_1_0
      000083 63 F0 80         [24]  377 	xrl	b,#0x80
      000086 95 F0            [12]  378 	subb	a,b
      000088 40 CE            [24]  379 	jc	00106$
                           00008A   380 	C$crc_4b6b.c$11$1$10 ==.
                                    381 ;	crc_4b6b.c:11: for( byte = 0; byte < nBytes; ++byte ) {
      00008A 09               [12]  382 	inc	r1
      00008B B9 00 9E         [24]  383 	cjne	r1,#0x00,00109$
      00008E 0A               [12]  384 	inc	r2
      00008F 80 9B            [24]  385 	sjmp	00109$
      000091                        386 00105$:
                           000091   387 	C$crc_4b6b.c$21$1$10 ==.
                                    388 ;	crc_4b6b.c:21: return(remainder);
      000091 90r02r05         [24]  389 	mov	dptr,#_crc8_remainder_1_10
      000094 E0               [24]  390 	movx	a,@dptr
                           000095   391 	C$crc_4b6b.c$22$1$10 ==.
                           000095   392 	XG$crc8$0$0 ==.
      000095 F5 82            [12]  393 	mov	dpl,a
      000097 22               [24]  394 	ret
                                    395 ;------------------------------------------------------------
                                    396 ;Allocation info for local variables in function 'crc16Init'
                                    397 ;------------------------------------------------------------
                                    398 ;i                         Allocated with name '_crc16Init_i_1_14'
                                    399 ;j                         Allocated with name '_crc16Init_j_1_14'
                                    400 ;crc                       Allocated with name '_crc16Init_crc_1_14'
                                    401 ;c                         Allocated with name '_crc16Init_c_1_14'
                                    402 ;------------------------------------------------------------
                           000098   403 	G$crc16Init$0$0 ==.
                           000098   404 	C$crc_4b6b.c$24$1$10 ==.
                                    405 ;	crc_4b6b.c:24: void crc16Init( void ) {
                                    406 ;	-----------------------------------------
                                    407 ;	 function crc16Init
                                    408 ;	-----------------------------------------
      000098                        409 _crc16Init:
                           000098   410 	C$crc_4b6b.c$30$2$15 ==.
                                    411 ;	crc_4b6b.c:30: for( i = 0; i < 256; i++ ) {
      000098 7E 00            [12]  412 	mov	r6,#0x00
      00009A 7F 00            [12]  413 	mov	r7,#0x00
      00009C                        414 00108$:
                           00009C   415 	C$crc_4b6b.c$31$2$15 ==.
                                    416 ;	crc_4b6b.c:31: crc = 0;
      00009C 90r02r06         [24]  417 	mov	dptr,#_crc16Init_crc_1_14
      00009F E4               [12]  418 	clr	a
      0000A0 F0               [24]  419 	movx	@dptr,a
      0000A1 A3               [24]  420 	inc	dptr
      0000A2 F0               [24]  421 	movx	@dptr,a
                           0000A3   422 	C$crc_4b6b.c$32$2$15 ==.
                                    423 ;	crc_4b6b.c:32: c = ((unsigned short)i) << 8;
      0000A3 8E 05            [24]  424 	mov	ar5,r6
      0000A5 7C 00            [12]  425 	mov	r4,#0x00
      0000A7 90r02r08         [24]  426 	mov	dptr,#_crc16Init_c_1_14
      0000AA EC               [12]  427 	mov	a,r4
      0000AB F0               [24]  428 	movx	@dptr,a
      0000AC ED               [12]  429 	mov	a,r5
      0000AD A3               [24]  430 	inc	dptr
      0000AE F0               [24]  431 	movx	@dptr,a
                           0000AF   432 	C$crc_4b6b.c$33$1$14 ==.
                                    433 ;	crc_4b6b.c:33: for( j = 0; j < 8; j++ ) {
      0000AF 7C 00            [12]  434 	mov	r4,#0x00
      0000B1 7D 00            [12]  435 	mov	r5,#0x00
      0000B3                        436 00106$:
                           0000B3   437 	C$crc_4b6b.c$34$3$16 ==.
                                    438 ;	crc_4b6b.c:34: if( (crc^c) & 0x8000 ) crc = (crc << 1) ^ 0x1021;
      0000B3 90r02r08         [24]  439 	mov	dptr,#_crc16Init_c_1_14
      0000B6 E0               [24]  440 	movx	a,@dptr
      0000B7 FA               [12]  441 	mov	r2,a
      0000B8 A3               [24]  442 	inc	dptr
      0000B9 E0               [24]  443 	movx	a,@dptr
      0000BA FB               [12]  444 	mov	r3,a
      0000BB 90r02r06         [24]  445 	mov	dptr,#_crc16Init_crc_1_14
      0000BE E0               [24]  446 	movx	a,@dptr
      0000BF F8               [12]  447 	mov	r0,a
      0000C0 A3               [24]  448 	inc	dptr
      0000C1 E0               [24]  449 	movx	a,@dptr
      0000C2 F9               [12]  450 	mov	r1,a
      0000C3 E8               [12]  451 	mov	a,r0
      0000C4 62 02            [12]  452 	xrl	ar2,a
      0000C6 E9               [12]  453 	mov	a,r1
      0000C7 62 03            [12]  454 	xrl	ar3,a
      0000C9 EB               [12]  455 	mov	a,r3
      0000CA 30 E7 17         [24]  456 	jnb	acc.7,00102$
      0000CD 88 02            [24]  457 	mov	ar2,r0
      0000CF E9               [12]  458 	mov	a,r1
      0000D0 CA               [12]  459 	xch	a,r2
      0000D1 25 E0            [12]  460 	add	a,acc
      0000D3 CA               [12]  461 	xch	a,r2
      0000D4 33               [12]  462 	rlc	a
      0000D5 FB               [12]  463 	mov	r3,a
      0000D6 90r02r06         [24]  464 	mov	dptr,#_crc16Init_crc_1_14
      0000D9 74 21            [12]  465 	mov	a,#0x21
      0000DB 6A               [12]  466 	xrl	a,r2
      0000DC F0               [24]  467 	movx	@dptr,a
      0000DD 74 10            [12]  468 	mov	a,#0x10
      0000DF 6B               [12]  469 	xrl	a,r3
      0000E0 A3               [24]  470 	inc	dptr
      0000E1 F0               [24]  471 	movx	@dptr,a
      0000E2 80 0F            [24]  472 	sjmp	00103$
      0000E4                        473 00102$:
                           0000E4   474 	C$crc_4b6b.c$35$3$16 ==.
                                    475 ;	crc_4b6b.c:35: else                    crc = crc << 1;
      0000E4 E9               [12]  476 	mov	a,r1
      0000E5 C8               [12]  477 	xch	a,r0
      0000E6 25 E0            [12]  478 	add	a,acc
      0000E8 C8               [12]  479 	xch	a,r0
      0000E9 33               [12]  480 	rlc	a
      0000EA F9               [12]  481 	mov	r1,a
      0000EB 90r02r06         [24]  482 	mov	dptr,#_crc16Init_crc_1_14
      0000EE E8               [12]  483 	mov	a,r0
      0000EF F0               [24]  484 	movx	@dptr,a
      0000F0 E9               [12]  485 	mov	a,r1
      0000F1 A3               [24]  486 	inc	dptr
      0000F2 F0               [24]  487 	movx	@dptr,a
      0000F3                        488 00103$:
                           0000F3   489 	C$crc_4b6b.c$36$3$16 ==.
                                    490 ;	crc_4b6b.c:36: c = c << 1;
      0000F3 90r02r08         [24]  491 	mov	dptr,#_crc16Init_c_1_14
      0000F6 E0               [24]  492 	movx	a,@dptr
      0000F7 FA               [12]  493 	mov	r2,a
      0000F8 A3               [24]  494 	inc	dptr
      0000F9 E0               [24]  495 	movx	a,@dptr
      0000FA CA               [12]  496 	xch	a,r2
      0000FB 25 E0            [12]  497 	add	a,acc
      0000FD CA               [12]  498 	xch	a,r2
      0000FE 33               [12]  499 	rlc	a
      0000FF FB               [12]  500 	mov	r3,a
      000100 90r02r08         [24]  501 	mov	dptr,#_crc16Init_c_1_14
      000103 EA               [12]  502 	mov	a,r2
      000104 F0               [24]  503 	movx	@dptr,a
      000105 EB               [12]  504 	mov	a,r3
      000106 A3               [24]  505 	inc	dptr
      000107 F0               [24]  506 	movx	@dptr,a
                           000108   507 	C$crc_4b6b.c$33$2$15 ==.
                                    508 ;	crc_4b6b.c:33: for( j = 0; j < 8; j++ ) {
      000108 0C               [12]  509 	inc	r4
      000109 BC 00 01         [24]  510 	cjne	r4,#0x00,00127$
      00010C 0D               [12]  511 	inc	r5
      00010D                        512 00127$:
      00010D C3               [12]  513 	clr	c
      00010E EC               [12]  514 	mov	a,r4
      00010F 94 08            [12]  515 	subb	a,#0x08
      000111 ED               [12]  516 	mov	a,r5
      000112 94 00            [12]  517 	subb	a,#0x00
      000114 40 9D            [24]  518 	jc	00106$
                           000116   519 	C$crc_4b6b.c$38$2$15 ==.
                                    520 ;	crc_4b6b.c:38: crc16Tab[i] = crc;
      000116 8E 04            [24]  521 	mov	ar4,r6
      000118 EF               [12]  522 	mov	a,r7
      000119 CC               [12]  523 	xch	a,r4
      00011A 25 E0            [12]  524 	add	a,acc
      00011C CC               [12]  525 	xch	a,r4
      00011D 33               [12]  526 	rlc	a
      00011E FD               [12]  527 	mov	r5,a
      00011F EC               [12]  528 	mov	a,r4
      000120 24r00            [12]  529 	add	a,#_crc16Tab
      000122 FC               [12]  530 	mov	r4,a
      000123 ED               [12]  531 	mov	a,r5
      000124 34s00            [12]  532 	addc	a,#(_crc16Tab >> 8)
      000126 FD               [12]  533 	mov	r5,a
      000127 90r02r06         [24]  534 	mov	dptr,#_crc16Init_crc_1_14
      00012A E0               [24]  535 	movx	a,@dptr
      00012B FA               [12]  536 	mov	r2,a
      00012C A3               [24]  537 	inc	dptr
      00012D E0               [24]  538 	movx	a,@dptr
      00012E FB               [12]  539 	mov	r3,a
      00012F 8C 82            [24]  540 	mov	dpl,r4
      000131 8D 83            [24]  541 	mov	dph,r5
      000133 EA               [12]  542 	mov	a,r2
      000134 F0               [24]  543 	movx	@dptr,a
      000135 EB               [12]  544 	mov	a,r3
      000136 A3               [24]  545 	inc	dptr
      000137 F0               [24]  546 	movx	@dptr,a
                           000138   547 	C$crc_4b6b.c$30$1$14 ==.
                                    548 ;	crc_4b6b.c:30: for( i = 0; i < 256; i++ ) {
      000138 0E               [12]  549 	inc	r6
      000139 BE 00 01         [24]  550 	cjne	r6,#0x00,00129$
      00013C 0F               [12]  551 	inc	r7
      00013D                        552 00129$:
      00013D 74 FF            [12]  553 	mov	a,#0x100 - 0x01
      00013F 2F               [12]  554 	add	a,r7
      000140 40 03            [24]  555 	jc	00130$
      000142 02r00r9C         [24]  556 	ljmp	00108$
      000145                        557 00130$:
                           000145   558 	C$crc_4b6b.c$40$1$14 ==.
                           000145   559 	XG$crc16Init$0$0 ==.
      000145 22               [24]  560 	ret
                                    561 ;------------------------------------------------------------
                                    562 ;Allocation info for local variables in function 'crc16'
                                    563 ;------------------------------------------------------------
                                    564 ;nBytes                    Allocated with name '_crc16_PARM_2'
                                    565 ;message                   Allocated with name '_crc16_message_1_17'
                                    566 ;i                         Allocated with name '_crc16_i_1_18'
                                    567 ;crc                       Allocated with name '_crc16_crc_1_18'
                                    568 ;short_c                   Allocated with name '_crc16_short_c_1_18'
                                    569 ;tmp                       Allocated with name '_crc16_tmp_1_18'
                                    570 ;sloc0                     Allocated with name '_crc16_sloc0_1_0'
                                    571 ;sloc1                     Allocated with name '_crc16_sloc1_1_0'
                                    572 ;------------------------------------------------------------
                           000146   573 	G$crc16$0$0 ==.
                           000146   574 	C$crc_4b6b.c$42$1$14 ==.
                                    575 ;	crc_4b6b.c:42: short crc16( char *message, unsigned int nBytes ) {
                                    576 ;	-----------------------------------------
                                    577 ;	 function crc16
                                    578 ;	-----------------------------------------
      000146                        579 _crc16:
      000146 AF F0            [24]  580 	mov	r7,b
      000148 AE 83            [24]  581 	mov	r6,dph
      00014A E5 82            [12]  582 	mov	a,dpl
      00014C 90r02r0C         [24]  583 	mov	dptr,#_crc16_message_1_17
      00014F F0               [24]  584 	movx	@dptr,a
      000150 EE               [12]  585 	mov	a,r6
      000151 A3               [24]  586 	inc	dptr
      000152 F0               [24]  587 	movx	@dptr,a
      000153 EF               [12]  588 	mov	a,r7
      000154 A3               [24]  589 	inc	dptr
      000155 F0               [24]  590 	movx	@dptr,a
                           000156   591 	C$crc_4b6b.c$48$1$18 ==.
                                    592 ;	crc_4b6b.c:48: crc = 0xffff;
      000156 90r02r0F         [24]  593 	mov	dptr,#_crc16_crc_1_18
      000159 74 FF            [12]  594 	mov	a,#0xFF
      00015B F0               [24]  595 	movx	@dptr,a
      00015C A3               [24]  596 	inc	dptr
      00015D F0               [24]  597 	movx	@dptr,a
                           00015E   598 	C$crc_4b6b.c$49$2$19 ==.
                                    599 ;	crc_4b6b.c:49: for( i = 0; i < nBytes; i++ ) {
      00015E 90r02r0C         [24]  600 	mov	dptr,#_crc16_message_1_17
      000161 E0               [24]  601 	movx	a,@dptr
      000162 F5*02            [12]  602 	mov	_crc16_sloc1_1_0,a
      000164 A3               [24]  603 	inc	dptr
      000165 E0               [24]  604 	movx	a,@dptr
      000166 F5*03            [12]  605 	mov	(_crc16_sloc1_1_0 + 1),a
      000168 A3               [24]  606 	inc	dptr
      000169 E0               [24]  607 	movx	a,@dptr
      00016A F5*04            [12]  608 	mov	(_crc16_sloc1_1_0 + 2),a
      00016C 90r02r0A         [24]  609 	mov	dptr,#_crc16_PARM_2
      00016F E0               [24]  610 	movx	a,@dptr
      000170 FB               [12]  611 	mov	r3,a
      000171 A3               [24]  612 	inc	dptr
      000172 E0               [24]  613 	movx	a,@dptr
      000173 FC               [12]  614 	mov	r4,a
      000174 79 00            [12]  615 	mov	r1,#0x00
      000176 7A 00            [12]  616 	mov	r2,#0x00
      000178                        617 00103$:
      000178 C3               [12]  618 	clr	c
      000179 E9               [12]  619 	mov	a,r1
      00017A 9B               [12]  620 	subb	a,r3
      00017B EA               [12]  621 	mov	a,r2
      00017C 9C               [12]  622 	subb	a,r4
      00017D 50 61            [24]  623 	jnc	00101$
                           00017F   624 	C$crc_4b6b.c$50$1$18 ==.
                                    625 ;	crc_4b6b.c:50: short_c = 0x00ff & (unsigned short)message[i];
      00017F C0 03            [24]  626 	push	ar3
      000181 C0 04            [24]  627 	push	ar4
      000183 E9               [12]  628 	mov	a,r1
      000184 25*02            [12]  629 	add	a,_crc16_sloc1_1_0
      000186 F8               [12]  630 	mov	r0,a
      000187 EA               [12]  631 	mov	a,r2
      000188 35*03            [12]  632 	addc	a,(_crc16_sloc1_1_0 + 1)
      00018A FB               [12]  633 	mov	r3,a
      00018B AC*04            [24]  634 	mov	r4,(_crc16_sloc1_1_0 + 2)
      00018D 88 82            [24]  635 	mov	dpl,r0
      00018F 8B 83            [24]  636 	mov	dph,r3
      000191 8C F0            [24]  637 	mov	b,r4
      000193 12r00r00         [24]  638 	lcall	__gptrget
      000196 F8               [12]  639 	mov	r0,a
      000197 33               [12]  640 	rlc	a
      000198 95 E0            [12]  641 	subb	a,acc
      00019A 88*00            [24]  642 	mov	_crc16_sloc0_1_0,r0
      00019C 75*01 00         [24]  643 	mov	(_crc16_sloc0_1_0 + 1),#0x00
                           00019F   644 	C$crc_4b6b.c$51$2$19 ==.
                                    645 ;	crc_4b6b.c:51: tmp = (crc >> 8) ^ short_c;
      00019F 90r02r0F         [24]  646 	mov	dptr,#_crc16_crc_1_18
      0001A2 E0               [24]  647 	movx	a,@dptr
      0001A3 FB               [12]  648 	mov	r3,a
      0001A4 A3               [24]  649 	inc	dptr
      0001A5 E0               [24]  650 	movx	a,@dptr
      0001A6 F8               [12]  651 	mov	r0,a
      0001A7 7F 00            [12]  652 	mov	r7,#0x00
      0001A9 E5*00            [12]  653 	mov	a,_crc16_sloc0_1_0
      0001AB 62 00            [12]  654 	xrl	ar0,a
      0001AD E5*01            [12]  655 	mov	a,(_crc16_sloc0_1_0 + 1)
      0001AF 62 07            [12]  656 	xrl	ar7,a
                           0001B1   657 	C$crc_4b6b.c$52$2$19 ==.
                                    658 ;	crc_4b6b.c:52: crc = (crc << 8) ^ crc16Tab[tmp];
      0001B1 8B 04            [24]  659 	mov	ar4,r3
      0001B3 7B 00            [12]  660 	mov	r3,#0x00
      0001B5 EF               [12]  661 	mov	a,r7
      0001B6 C8               [12]  662 	xch	a,r0
      0001B7 25 E0            [12]  663 	add	a,acc
      0001B9 C8               [12]  664 	xch	a,r0
      0001BA 33               [12]  665 	rlc	a
      0001BB FF               [12]  666 	mov	r7,a
      0001BC E8               [12]  667 	mov	a,r0
      0001BD 24r00            [12]  668 	add	a,#_crc16Tab
      0001BF F5 82            [12]  669 	mov	dpl,a
      0001C1 EF               [12]  670 	mov	a,r7
      0001C2 34s00            [12]  671 	addc	a,#(_crc16Tab >> 8)
      0001C4 F5 83            [12]  672 	mov	dph,a
      0001C6 E0               [24]  673 	movx	a,@dptr
      0001C7 FE               [12]  674 	mov	r6,a
      0001C8 A3               [24]  675 	inc	dptr
      0001C9 E0               [24]  676 	movx	a,@dptr
      0001CA FF               [12]  677 	mov	r7,a
      0001CB 90r02r0F         [24]  678 	mov	dptr,#_crc16_crc_1_18
      0001CE EE               [12]  679 	mov	a,r6
      0001CF 6B               [12]  680 	xrl	a,r3
      0001D0 F0               [24]  681 	movx	@dptr,a
      0001D1 EF               [12]  682 	mov	a,r7
      0001D2 6C               [12]  683 	xrl	a,r4
      0001D3 A3               [24]  684 	inc	dptr
      0001D4 F0               [24]  685 	movx	@dptr,a
                           0001D5   686 	C$crc_4b6b.c$49$1$18 ==.
                                    687 ;	crc_4b6b.c:49: for( i = 0; i < nBytes; i++ ) {
      0001D5 09               [12]  688 	inc	r1
      0001D6 B9 00 01         [24]  689 	cjne	r1,#0x00,00115$
      0001D9 0A               [12]  690 	inc	r2
      0001DA                        691 00115$:
      0001DA D0 04            [24]  692 	pop	ar4
      0001DC D0 03            [24]  693 	pop	ar3
      0001DE 80 98            [24]  694 	sjmp	00103$
      0001E0                        695 00101$:
                           0001E0   696 	C$crc_4b6b.c$55$1$18 ==.
                                    697 ;	crc_4b6b.c:55: return(crc);
      0001E0 90r02r0F         [24]  698 	mov	dptr,#_crc16_crc_1_18
      0001E3 E0               [24]  699 	movx	a,@dptr
      0001E4 FE               [12]  700 	mov	r6,a
      0001E5 A3               [24]  701 	inc	dptr
      0001E6 E0               [24]  702 	movx	a,@dptr
                           0001E7   703 	C$crc_4b6b.c$56$1$18 ==.
                           0001E7   704 	XG$crc16$0$0 ==.
      0001E7 8E 82            [24]  705 	mov	dpl,r6
      0001E9 F5 83            [12]  706 	mov	dph,a
      0001EB 22               [24]  707 	ret
                                    708 ;------------------------------------------------------------
                                    709 ;Allocation info for local variables in function 'get4b6bsymbol'
                                    710 ;------------------------------------------------------------
                                    711 ;inSymbol                  Allocated with name '_get4b6bsymbol_inSymbol_1_20'
                                    712 ;------------------------------------------------------------
                           0001EC   713 	G$get4b6bsymbol$0$0 ==.
                           0001EC   714 	C$crc_4b6b.c$58$1$18 ==.
                                    715 ;	crc_4b6b.c:58: char get4b6bsymbol( char inSymbol ) {
                                    716 ;	-----------------------------------------
                                    717 ;	 function get4b6bsymbol
                                    718 ;	-----------------------------------------
      0001EC                        719 _get4b6bsymbol:
      0001EC E5 82            [12]  720 	mov	a,dpl
      0001EE 90r02r11         [24]  721 	mov	dptr,#_get4b6bsymbol_inSymbol_1_20
      0001F1 F0               [24]  722 	movx	@dptr,a
                           0001F2   723 	C$crc_4b6b.c$59$1$21 ==.
                                    724 ;	crc_4b6b.c:59: switch( inSymbol ) {
      0001F2 E0               [24]  725 	movx	a,@dptr
      0001F3 FF               [12]  726 	mov	r7,a
      0001F4 30 E7 03         [24]  727 	jnb	acc.7,00127$
      0001F7 02r02r87         [24]  728 	ljmp	00117$
      0001FA                        729 00127$:
      0001FA C3               [12]  730 	clr	c
      0001FB 74 8F            [12]  731 	mov	a,#(0x0F ^ 0x80)
      0001FD 8F F0            [24]  732 	mov	b,r7
      0001FF 63 F0 80         [24]  733 	xrl	b,#0x80
      000202 95 F0            [12]  734 	subb	a,b
      000204 50 03            [24]  735 	jnc	00128$
      000206 02r02r87         [24]  736 	ljmp	00117$
      000209                        737 00128$:
      000209 EF               [12]  738 	mov	a,r7
      00020A 24 0A            [12]  739 	add	a,#(00129$-3-.)
      00020C 83               [24]  740 	movc	a,@a+pc
      00020D F5 82            [12]  741 	mov	dpl,a
      00020F EF               [12]  742 	mov	a,r7
      000210 24 14            [12]  743 	add	a,#(00130$-3-.)
      000212 83               [24]  744 	movc	a,@a+pc
      000213 F5 83            [12]  745 	mov	dph,a
      000215 E4               [12]  746 	clr	a
      000216 73               [24]  747 	jmp	@a+dptr
      000217                        748 00129$:
      000217r37                     749 	.db	00101$
      000218r3C                     750 	.db	00102$
      000219r41                     751 	.db	00103$
      00021Ar46                     752 	.db	00104$
      00021Br4B                     753 	.db	00105$
      00021Cr50                     754 	.db	00106$
      00021Dr55                     755 	.db	00107$
      00021Er5A                     756 	.db	00108$
      00021Fr5F                     757 	.db	00109$
      000220r64                     758 	.db	00110$
      000221r69                     759 	.db	00111$
      000222r6E                     760 	.db	00112$
      000223r73                     761 	.db	00113$
      000224r78                     762 	.db	00114$
      000225r7D                     763 	.db	00115$
      000226r82                     764 	.db	00116$
      000227                        765 00130$:
      000227s02                     766 	.db	00101$>>8
      000228s02                     767 	.db	00102$>>8
      000229s02                     768 	.db	00103$>>8
      00022As02                     769 	.db	00104$>>8
      00022Bs02                     770 	.db	00105$>>8
      00022Cs02                     771 	.db	00106$>>8
      00022Ds02                     772 	.db	00107$>>8
      00022Es02                     773 	.db	00108$>>8
      00022Fs02                     774 	.db	00109$>>8
      000230s02                     775 	.db	00110$>>8
      000231s02                     776 	.db	00111$>>8
      000232s02                     777 	.db	00112$>>8
      000233s02                     778 	.db	00113$>>8
      000234s02                     779 	.db	00114$>>8
      000235s02                     780 	.db	00115$>>8
      000236s02                     781 	.db	00116$>>8
                           000237   782 	C$crc_4b6b.c$60$2$22 ==.
                                    783 ;	crc_4b6b.c:60: case 0x00: return 0x15;
      000237                        784 00101$:
      000237 75 82 15         [24]  785 	mov	dpl,#0x15
                           00023A   786 	C$crc_4b6b.c$61$2$22 ==.
                                    787 ;	crc_4b6b.c:61: case 0x01: return 0x31;
      00023A 80 4E            [24]  788 	sjmp	00119$
      00023C                        789 00102$:
      00023C 75 82 31         [24]  790 	mov	dpl,#0x31
                           00023F   791 	C$crc_4b6b.c$62$2$22 ==.
                                    792 ;	crc_4b6b.c:62: case 0x02: return 0x32;
      00023F 80 49            [24]  793 	sjmp	00119$
      000241                        794 00103$:
      000241 75 82 32         [24]  795 	mov	dpl,#0x32
                           000244   796 	C$crc_4b6b.c$63$2$22 ==.
                                    797 ;	crc_4b6b.c:63: case 0x03: return 0x23;
      000244 80 44            [24]  798 	sjmp	00119$
      000246                        799 00104$:
      000246 75 82 23         [24]  800 	mov	dpl,#0x23
                           000249   801 	C$crc_4b6b.c$64$2$22 ==.
                                    802 ;	crc_4b6b.c:64: case 0x04: return 0x34;
      000249 80 3F            [24]  803 	sjmp	00119$
      00024B                        804 00105$:
      00024B 75 82 34         [24]  805 	mov	dpl,#0x34
                           00024E   806 	C$crc_4b6b.c$65$2$22 ==.
                                    807 ;	crc_4b6b.c:65: case 0x05: return 0x25;
      00024E 80 3A            [24]  808 	sjmp	00119$
      000250                        809 00106$:
      000250 75 82 25         [24]  810 	mov	dpl,#0x25
                           000253   811 	C$crc_4b6b.c$66$2$22 ==.
                                    812 ;	crc_4b6b.c:66: case 0x06: return 0x26;
      000253 80 35            [24]  813 	sjmp	00119$
      000255                        814 00107$:
      000255 75 82 26         [24]  815 	mov	dpl,#0x26
                           000258   816 	C$crc_4b6b.c$67$2$22 ==.
                                    817 ;	crc_4b6b.c:67: case 0x07: return 0x16;
      000258 80 30            [24]  818 	sjmp	00119$
      00025A                        819 00108$:
      00025A 75 82 16         [24]  820 	mov	dpl,#0x16
                           00025D   821 	C$crc_4b6b.c$68$2$22 ==.
                                    822 ;	crc_4b6b.c:68: case 0x08: return 0x1A;
      00025D 80 2B            [24]  823 	sjmp	00119$
      00025F                        824 00109$:
      00025F 75 82 1A         [24]  825 	mov	dpl,#0x1A
                           000262   826 	C$crc_4b6b.c$69$2$22 ==.
                                    827 ;	crc_4b6b.c:69: case 0x09: return 0x19;
      000262 80 26            [24]  828 	sjmp	00119$
      000264                        829 00110$:
      000264 75 82 19         [24]  830 	mov	dpl,#0x19
                           000267   831 	C$crc_4b6b.c$70$2$22 ==.
                                    832 ;	crc_4b6b.c:70: case 0x0A: return 0x2A;
      000267 80 21            [24]  833 	sjmp	00119$
      000269                        834 00111$:
      000269 75 82 2A         [24]  835 	mov	dpl,#0x2A
                           00026C   836 	C$crc_4b6b.c$71$2$22 ==.
                                    837 ;	crc_4b6b.c:71: case 0x0B: return 0x0B;
      00026C 80 1C            [24]  838 	sjmp	00119$
      00026E                        839 00112$:
      00026E 75 82 0B         [24]  840 	mov	dpl,#0x0B
                           000271   841 	C$crc_4b6b.c$72$2$22 ==.
                                    842 ;	crc_4b6b.c:72: case 0x0C: return 0x2C;
      000271 80 17            [24]  843 	sjmp	00119$
      000273                        844 00113$:
      000273 75 82 2C         [24]  845 	mov	dpl,#0x2C
                           000276   846 	C$crc_4b6b.c$73$2$22 ==.
                                    847 ;	crc_4b6b.c:73: case 0x0D: return 0x0D;
      000276 80 12            [24]  848 	sjmp	00119$
      000278                        849 00114$:
      000278 75 82 0D         [24]  850 	mov	dpl,#0x0D
                           00027B   851 	C$crc_4b6b.c$74$2$22 ==.
                                    852 ;	crc_4b6b.c:74: case 0x0E: return 0x0E;
      00027B 80 0D            [24]  853 	sjmp	00119$
      00027D                        854 00115$:
      00027D 75 82 0E         [24]  855 	mov	dpl,#0x0E
                           000280   856 	C$crc_4b6b.c$75$2$22 ==.
                                    857 ;	crc_4b6b.c:75: case 0x0F: return 0x1C;
      000280 80 08            [24]  858 	sjmp	00119$
      000282                        859 00116$:
      000282 75 82 1C         [24]  860 	mov	dpl,#0x1C
                           000285   861 	C$crc_4b6b.c$76$2$22 ==.
                                    862 ;	crc_4b6b.c:76: default:   return 0x00;
      000285 80 03            [24]  863 	sjmp	00119$
      000287                        864 00117$:
      000287 75 82 00         [24]  865 	mov	dpl,#0x00
                           00028A   866 	C$crc_4b6b.c$77$1$21 ==.
                                    867 ;	crc_4b6b.c:77: }
      00028A                        868 00119$:
                           00028A   869 	C$crc_4b6b.c$78$1$21 ==.
                           00028A   870 	XG$get4b6bsymbol$0$0 ==.
      00028A 22               [24]  871 	ret
                                    872 ;------------------------------------------------------------
                                    873 ;Allocation info for local variables in function 'decode4b6bsymbol'
                                    874 ;------------------------------------------------------------
                                    875 ;outSymbol                 Allocated with name '_decode4b6bsymbol_PARM_2'
                                    876 ;inSymbol                  Allocated with name '_decode4b6bsymbol_inSymbol_1_23'
                                    877 ;------------------------------------------------------------
                           00028B   878 	G$decode4b6bsymbol$0$0 ==.
                           00028B   879 	C$crc_4b6b.c$80$1$21 ==.
                                    880 ;	crc_4b6b.c:80: char decode4b6bsymbol( char inSymbol, char *outSymbol ) {
                                    881 ;	-----------------------------------------
                                    882 ;	 function decode4b6bsymbol
                                    883 ;	-----------------------------------------
      00028B                        884 _decode4b6bsymbol:
      00028B E5 82            [12]  885 	mov	a,dpl
      00028D 90r02r15         [24]  886 	mov	dptr,#_decode4b6bsymbol_inSymbol_1_23
      000290 F0               [24]  887 	movx	@dptr,a
                           000291   888 	C$crc_4b6b.c$81$1$24 ==.
                                    889 ;	crc_4b6b.c:81: switch( inSymbol ) {
      000291 E0               [24]  890 	movx	a,@dptr
      000292 FF               [12]  891 	mov	r7,a
      000293 BF 0B 03         [24]  892 	cjne	r7,#0x0B,00169$
      000296 02r04r25         [24]  893 	ljmp	00112$
      000299                        894 00169$:
      000299 BF 0D 03         [24]  895 	cjne	r7,#0x0D,00170$
      00029C 02r04r5C         [24]  896 	ljmp	00114$
      00029F                        897 00170$:
      00029F BF 0E 03         [24]  898 	cjne	r7,#0x0E,00171$
      0002A2 02r04r77         [24]  899 	ljmp	00115$
      0002A5                        900 00171$:
      0002A5 BF 15 02         [24]  901 	cjne	r7,#0x15,00172$
      0002A8 80 48            [24]  902 	sjmp	00101$
      0002AA                        903 00172$:
      0002AA BF 16 03         [24]  904 	cjne	r7,#0x16,00173$
      0002AD 02r03rB5         [24]  905 	ljmp	00108$
      0002B0                        906 00173$:
      0002B0 BF 19 03         [24]  907 	cjne	r7,#0x19,00174$
      0002B3 02r03rED         [24]  908 	ljmp	00110$
      0002B6                        909 00174$:
      0002B6 BF 1A 03         [24]  910 	cjne	r7,#0x1A,00175$
      0002B9 02r03rD1         [24]  911 	ljmp	00109$
      0002BC                        912 00175$:
      0002BC BF 1C 03         [24]  913 	cjne	r7,#0x1C,00176$
      0002BF 02r04r92         [24]  914 	ljmp	00116$
      0002C2                        915 00176$:
      0002C2 BF 23 03         [24]  916 	cjne	r7,#0x23,00177$
      0002C5 02r03r45         [24]  917 	ljmp	00104$
      0002C8                        918 00177$:
      0002C8 BF 25 03         [24]  919 	cjne	r7,#0x25,00178$
      0002CB 02r03r7D         [24]  920 	ljmp	00106$
      0002CE                        921 00178$:
      0002CE BF 26 03         [24]  922 	cjne	r7,#0x26,00179$
      0002D1 02r03r99         [24]  923 	ljmp	00107$
      0002D4                        924 00179$:
      0002D4 BF 2A 03         [24]  925 	cjne	r7,#0x2A,00180$
      0002D7 02r04r09         [24]  926 	ljmp	00111$
      0002DA                        927 00180$:
      0002DA BF 2C 03         [24]  928 	cjne	r7,#0x2C,00181$
      0002DD 02r04r41         [24]  929 	ljmp	00113$
      0002E0                        930 00181$:
      0002E0 BF 31 02         [24]  931 	cjne	r7,#0x31,00182$
      0002E3 80 28            [24]  932 	sjmp	00102$
      0002E5                        933 00182$:
      0002E5 BF 32 02         [24]  934 	cjne	r7,#0x32,00183$
      0002E8 80 3F            [24]  935 	sjmp	00103$
      0002EA                        936 00183$:
      0002EA BF 34 02         [24]  937 	cjne	r7,#0x34,00184$
      0002ED 80 72            [24]  938 	sjmp	00105$
      0002EF                        939 00184$:
      0002EF 02r04rAD         [24]  940 	ljmp	00117$
                           0002F2   941 	C$crc_4b6b.c$82$2$25 ==.
                                    942 ;	crc_4b6b.c:82: case 0x15: {*outSymbol = 0x00; return(0); }
      0002F2                        943 00101$:
      0002F2 90r02r12         [24]  944 	mov	dptr,#_decode4b6bsymbol_PARM_2
      0002F5 E0               [24]  945 	movx	a,@dptr
      0002F6 FD               [12]  946 	mov	r5,a
      0002F7 A3               [24]  947 	inc	dptr
      0002F8 E0               [24]  948 	movx	a,@dptr
      0002F9 FE               [12]  949 	mov	r6,a
      0002FA A3               [24]  950 	inc	dptr
      0002FB E0               [24]  951 	movx	a,@dptr
      0002FC FF               [12]  952 	mov	r7,a
      0002FD 8D 82            [24]  953 	mov	dpl,r5
      0002FF 8E 83            [24]  954 	mov	dph,r6
      000301 8F F0            [24]  955 	mov	b,r7
      000303 E4               [12]  956 	clr	a
      000304 12r00r00         [24]  957 	lcall	__gptrput
      000307 75 82 00         [24]  958 	mov	dpl,#0x00
      00030A 02r04rC5         [24]  959 	ljmp	00119$
                           00030D   960 	C$crc_4b6b.c$83$2$25 ==.
                                    961 ;	crc_4b6b.c:83: case 0x31: {*outSymbol = 0x01; return(0); }
      00030D                        962 00102$:
      00030D 90r02r12         [24]  963 	mov	dptr,#_decode4b6bsymbol_PARM_2
      000310 E0               [24]  964 	movx	a,@dptr
      000311 FD               [12]  965 	mov	r5,a
      000312 A3               [24]  966 	inc	dptr
      000313 E0               [24]  967 	movx	a,@dptr
      000314 FE               [12]  968 	mov	r6,a
      000315 A3               [24]  969 	inc	dptr
      000316 E0               [24]  970 	movx	a,@dptr
      000317 FF               [12]  971 	mov	r7,a
      000318 8D 82            [24]  972 	mov	dpl,r5
      00031A 8E 83            [24]  973 	mov	dph,r6
      00031C 8F F0            [24]  974 	mov	b,r7
      00031E 74 01            [12]  975 	mov	a,#0x01
      000320 12r00r00         [24]  976 	lcall	__gptrput
      000323 75 82 00         [24]  977 	mov	dpl,#0x00
      000326 02r04rC5         [24]  978 	ljmp	00119$
                           000329   979 	C$crc_4b6b.c$84$2$25 ==.
                                    980 ;	crc_4b6b.c:84: case 0x32: {*outSymbol = 0x02; return(0); }
      000329                        981 00103$:
      000329 90r02r12         [24]  982 	mov	dptr,#_decode4b6bsymbol_PARM_2
      00032C E0               [24]  983 	movx	a,@dptr
      00032D FD               [12]  984 	mov	r5,a
      00032E A3               [24]  985 	inc	dptr
      00032F E0               [24]  986 	movx	a,@dptr
      000330 FE               [12]  987 	mov	r6,a
      000331 A3               [24]  988 	inc	dptr
      000332 E0               [24]  989 	movx	a,@dptr
      000333 FF               [12]  990 	mov	r7,a
      000334 8D 82            [24]  991 	mov	dpl,r5
      000336 8E 83            [24]  992 	mov	dph,r6
      000338 8F F0            [24]  993 	mov	b,r7
      00033A 74 02            [12]  994 	mov	a,#0x02
      00033C 12r00r00         [24]  995 	lcall	__gptrput
      00033F 75 82 00         [24]  996 	mov	dpl,#0x00
      000342 02r04rC5         [24]  997 	ljmp	00119$
                           000345   998 	C$crc_4b6b.c$85$2$25 ==.
                                    999 ;	crc_4b6b.c:85: case 0x23: {*outSymbol = 0x03; return(0); }
      000345                       1000 00104$:
      000345 90r02r12         [24] 1001 	mov	dptr,#_decode4b6bsymbol_PARM_2
      000348 E0               [24] 1002 	movx	a,@dptr
      000349 FD               [12] 1003 	mov	r5,a
      00034A A3               [24] 1004 	inc	dptr
      00034B E0               [24] 1005 	movx	a,@dptr
      00034C FE               [12] 1006 	mov	r6,a
      00034D A3               [24] 1007 	inc	dptr
      00034E E0               [24] 1008 	movx	a,@dptr
      00034F FF               [12] 1009 	mov	r7,a
      000350 8D 82            [24] 1010 	mov	dpl,r5
      000352 8E 83            [24] 1011 	mov	dph,r6
      000354 8F F0            [24] 1012 	mov	b,r7
      000356 74 03            [12] 1013 	mov	a,#0x03
      000358 12r00r00         [24] 1014 	lcall	__gptrput
      00035B 75 82 00         [24] 1015 	mov	dpl,#0x00
      00035E 02r04rC5         [24] 1016 	ljmp	00119$
                           000361  1017 	C$crc_4b6b.c$86$2$25 ==.
                                   1018 ;	crc_4b6b.c:86: case 0x34: {*outSymbol = 0x04; return(0); }
      000361                       1019 00105$:
      000361 90r02r12         [24] 1020 	mov	dptr,#_decode4b6bsymbol_PARM_2
      000364 E0               [24] 1021 	movx	a,@dptr
      000365 FD               [12] 1022 	mov	r5,a
      000366 A3               [24] 1023 	inc	dptr
      000367 E0               [24] 1024 	movx	a,@dptr
      000368 FE               [12] 1025 	mov	r6,a
      000369 A3               [24] 1026 	inc	dptr
      00036A E0               [24] 1027 	movx	a,@dptr
      00036B FF               [12] 1028 	mov	r7,a
      00036C 8D 82            [24] 1029 	mov	dpl,r5
      00036E 8E 83            [24] 1030 	mov	dph,r6
      000370 8F F0            [24] 1031 	mov	b,r7
      000372 74 04            [12] 1032 	mov	a,#0x04
      000374 12r00r00         [24] 1033 	lcall	__gptrput
      000377 75 82 00         [24] 1034 	mov	dpl,#0x00
      00037A 02r04rC5         [24] 1035 	ljmp	00119$
                           00037D  1036 	C$crc_4b6b.c$87$2$25 ==.
                                   1037 ;	crc_4b6b.c:87: case 0x25: {*outSymbol = 0x05; return(0); }
      00037D                       1038 00106$:
      00037D 90r02r12         [24] 1039 	mov	dptr,#_decode4b6bsymbol_PARM_2
      000380 E0               [24] 1040 	movx	a,@dptr
      000381 FD               [12] 1041 	mov	r5,a
      000382 A3               [24] 1042 	inc	dptr
      000383 E0               [24] 1043 	movx	a,@dptr
      000384 FE               [12] 1044 	mov	r6,a
      000385 A3               [24] 1045 	inc	dptr
      000386 E0               [24] 1046 	movx	a,@dptr
      000387 FF               [12] 1047 	mov	r7,a
      000388 8D 82            [24] 1048 	mov	dpl,r5
      00038A 8E 83            [24] 1049 	mov	dph,r6
      00038C 8F F0            [24] 1050 	mov	b,r7
      00038E 74 05            [12] 1051 	mov	a,#0x05
      000390 12r00r00         [24] 1052 	lcall	__gptrput
      000393 75 82 00         [24] 1053 	mov	dpl,#0x00
      000396 02r04rC5         [24] 1054 	ljmp	00119$
                           000399  1055 	C$crc_4b6b.c$88$2$25 ==.
                                   1056 ;	crc_4b6b.c:88: case 0x26: {*outSymbol = 0x06; return(0); }
      000399                       1057 00107$:
      000399 90r02r12         [24] 1058 	mov	dptr,#_decode4b6bsymbol_PARM_2
      00039C E0               [24] 1059 	movx	a,@dptr
      00039D FD               [12] 1060 	mov	r5,a
      00039E A3               [24] 1061 	inc	dptr
      00039F E0               [24] 1062 	movx	a,@dptr
      0003A0 FE               [12] 1063 	mov	r6,a
      0003A1 A3               [24] 1064 	inc	dptr
      0003A2 E0               [24] 1065 	movx	a,@dptr
      0003A3 FF               [12] 1066 	mov	r7,a
      0003A4 8D 82            [24] 1067 	mov	dpl,r5
      0003A6 8E 83            [24] 1068 	mov	dph,r6
      0003A8 8F F0            [24] 1069 	mov	b,r7
      0003AA 74 06            [12] 1070 	mov	a,#0x06
      0003AC 12r00r00         [24] 1071 	lcall	__gptrput
      0003AF 75 82 00         [24] 1072 	mov	dpl,#0x00
      0003B2 02r04rC5         [24] 1073 	ljmp	00119$
                           0003B5  1074 	C$crc_4b6b.c$89$2$25 ==.
                                   1075 ;	crc_4b6b.c:89: case 0x16: {*outSymbol = 0x07; return(0); }
      0003B5                       1076 00108$:
      0003B5 90r02r12         [24] 1077 	mov	dptr,#_decode4b6bsymbol_PARM_2
      0003B8 E0               [24] 1078 	movx	a,@dptr
      0003B9 FD               [12] 1079 	mov	r5,a
      0003BA A3               [24] 1080 	inc	dptr
      0003BB E0               [24] 1081 	movx	a,@dptr
      0003BC FE               [12] 1082 	mov	r6,a
      0003BD A3               [24] 1083 	inc	dptr
      0003BE E0               [24] 1084 	movx	a,@dptr
      0003BF FF               [12] 1085 	mov	r7,a
      0003C0 8D 82            [24] 1086 	mov	dpl,r5
      0003C2 8E 83            [24] 1087 	mov	dph,r6
      0003C4 8F F0            [24] 1088 	mov	b,r7
      0003C6 74 07            [12] 1089 	mov	a,#0x07
      0003C8 12r00r00         [24] 1090 	lcall	__gptrput
      0003CB 75 82 00         [24] 1091 	mov	dpl,#0x00
      0003CE 02r04rC5         [24] 1092 	ljmp	00119$
                           0003D1  1093 	C$crc_4b6b.c$90$2$25 ==.
                                   1094 ;	crc_4b6b.c:90: case 0x1A: {*outSymbol = 0x08; return(0); }
      0003D1                       1095 00109$:
      0003D1 90r02r12         [24] 1096 	mov	dptr,#_decode4b6bsymbol_PARM_2
      0003D4 E0               [24] 1097 	movx	a,@dptr
      0003D5 FD               [12] 1098 	mov	r5,a
      0003D6 A3               [24] 1099 	inc	dptr
      0003D7 E0               [24] 1100 	movx	a,@dptr
      0003D8 FE               [12] 1101 	mov	r6,a
      0003D9 A3               [24] 1102 	inc	dptr
      0003DA E0               [24] 1103 	movx	a,@dptr
      0003DB FF               [12] 1104 	mov	r7,a
      0003DC 8D 82            [24] 1105 	mov	dpl,r5
      0003DE 8E 83            [24] 1106 	mov	dph,r6
      0003E0 8F F0            [24] 1107 	mov	b,r7
      0003E2 74 08            [12] 1108 	mov	a,#0x08
      0003E4 12r00r00         [24] 1109 	lcall	__gptrput
      0003E7 75 82 00         [24] 1110 	mov	dpl,#0x00
      0003EA 02r04rC5         [24] 1111 	ljmp	00119$
                           0003ED  1112 	C$crc_4b6b.c$91$2$25 ==.
                                   1113 ;	crc_4b6b.c:91: case 0x19: {*outSymbol = 0x09; return(0); }
      0003ED                       1114 00110$:
      0003ED 90r02r12         [24] 1115 	mov	dptr,#_decode4b6bsymbol_PARM_2
      0003F0 E0               [24] 1116 	movx	a,@dptr
      0003F1 FD               [12] 1117 	mov	r5,a
      0003F2 A3               [24] 1118 	inc	dptr
      0003F3 E0               [24] 1119 	movx	a,@dptr
      0003F4 FE               [12] 1120 	mov	r6,a
      0003F5 A3               [24] 1121 	inc	dptr
      0003F6 E0               [24] 1122 	movx	a,@dptr
      0003F7 FF               [12] 1123 	mov	r7,a
      0003F8 8D 82            [24] 1124 	mov	dpl,r5
      0003FA 8E 83            [24] 1125 	mov	dph,r6
      0003FC 8F F0            [24] 1126 	mov	b,r7
      0003FE 74 09            [12] 1127 	mov	a,#0x09
      000400 12r00r00         [24] 1128 	lcall	__gptrput
      000403 75 82 00         [24] 1129 	mov	dpl,#0x00
      000406 02r04rC5         [24] 1130 	ljmp	00119$
                           000409  1131 	C$crc_4b6b.c$92$2$25 ==.
                                   1132 ;	crc_4b6b.c:92: case 0x2A: {*outSymbol = 0x0A; return(0); }
      000409                       1133 00111$:
      000409 90r02r12         [24] 1134 	mov	dptr,#_decode4b6bsymbol_PARM_2
      00040C E0               [24] 1135 	movx	a,@dptr
      00040D FD               [12] 1136 	mov	r5,a
      00040E A3               [24] 1137 	inc	dptr
      00040F E0               [24] 1138 	movx	a,@dptr
      000410 FE               [12] 1139 	mov	r6,a
      000411 A3               [24] 1140 	inc	dptr
      000412 E0               [24] 1141 	movx	a,@dptr
      000413 FF               [12] 1142 	mov	r7,a
      000414 8D 82            [24] 1143 	mov	dpl,r5
      000416 8E 83            [24] 1144 	mov	dph,r6
      000418 8F F0            [24] 1145 	mov	b,r7
      00041A 74 0A            [12] 1146 	mov	a,#0x0A
      00041C 12r00r00         [24] 1147 	lcall	__gptrput
      00041F 75 82 00         [24] 1148 	mov	dpl,#0x00
      000422 02r04rC5         [24] 1149 	ljmp	00119$
                           000425  1150 	C$crc_4b6b.c$93$2$25 ==.
                                   1151 ;	crc_4b6b.c:93: case 0x0B: {*outSymbol = 0x0B; return(0); }
      000425                       1152 00112$:
      000425 90r02r12         [24] 1153 	mov	dptr,#_decode4b6bsymbol_PARM_2
      000428 E0               [24] 1154 	movx	a,@dptr
      000429 FD               [12] 1155 	mov	r5,a
      00042A A3               [24] 1156 	inc	dptr
      00042B E0               [24] 1157 	movx	a,@dptr
      00042C FE               [12] 1158 	mov	r6,a
      00042D A3               [24] 1159 	inc	dptr
      00042E E0               [24] 1160 	movx	a,@dptr
      00042F FF               [12] 1161 	mov	r7,a
      000430 8D 82            [24] 1162 	mov	dpl,r5
      000432 8E 83            [24] 1163 	mov	dph,r6
      000434 8F F0            [24] 1164 	mov	b,r7
      000436 74 0B            [12] 1165 	mov	a,#0x0B
      000438 12r00r00         [24] 1166 	lcall	__gptrput
      00043B 75 82 00         [24] 1167 	mov	dpl,#0x00
      00043E 02r04rC5         [24] 1168 	ljmp	00119$
                           000441  1169 	C$crc_4b6b.c$94$2$25 ==.
                                   1170 ;	crc_4b6b.c:94: case 0x2C: {*outSymbol = 0x0C; return(0); }
      000441                       1171 00113$:
      000441 90r02r12         [24] 1172 	mov	dptr,#_decode4b6bsymbol_PARM_2
      000444 E0               [24] 1173 	movx	a,@dptr
      000445 FD               [12] 1174 	mov	r5,a
      000446 A3               [24] 1175 	inc	dptr
      000447 E0               [24] 1176 	movx	a,@dptr
      000448 FE               [12] 1177 	mov	r6,a
      000449 A3               [24] 1178 	inc	dptr
      00044A E0               [24] 1179 	movx	a,@dptr
      00044B FF               [12] 1180 	mov	r7,a
      00044C 8D 82            [24] 1181 	mov	dpl,r5
      00044E 8E 83            [24] 1182 	mov	dph,r6
      000450 8F F0            [24] 1183 	mov	b,r7
      000452 74 0C            [12] 1184 	mov	a,#0x0C
      000454 12r00r00         [24] 1185 	lcall	__gptrput
      000457 75 82 00         [24] 1186 	mov	dpl,#0x00
                           00045A  1187 	C$crc_4b6b.c$95$2$25 ==.
                                   1188 ;	crc_4b6b.c:95: case 0x0D: {*outSymbol = 0x0D; return(0); }
      00045A 80 69            [24] 1189 	sjmp	00119$
      00045C                       1190 00114$:
      00045C 90r02r12         [24] 1191 	mov	dptr,#_decode4b6bsymbol_PARM_2
      00045F E0               [24] 1192 	movx	a,@dptr
      000460 FD               [12] 1193 	mov	r5,a
      000461 A3               [24] 1194 	inc	dptr
      000462 E0               [24] 1195 	movx	a,@dptr
      000463 FE               [12] 1196 	mov	r6,a
      000464 A3               [24] 1197 	inc	dptr
      000465 E0               [24] 1198 	movx	a,@dptr
      000466 FF               [12] 1199 	mov	r7,a
      000467 8D 82            [24] 1200 	mov	dpl,r5
      000469 8E 83            [24] 1201 	mov	dph,r6
      00046B 8F F0            [24] 1202 	mov	b,r7
      00046D 74 0D            [12] 1203 	mov	a,#0x0D
      00046F 12r00r00         [24] 1204 	lcall	__gptrput
      000472 75 82 00         [24] 1205 	mov	dpl,#0x00
                           000475  1206 	C$crc_4b6b.c$96$2$25 ==.
                                   1207 ;	crc_4b6b.c:96: case 0x0E: {*outSymbol = 0x0E; return(0); }
      000475 80 4E            [24] 1208 	sjmp	00119$
      000477                       1209 00115$:
      000477 90r02r12         [24] 1210 	mov	dptr,#_decode4b6bsymbol_PARM_2
      00047A E0               [24] 1211 	movx	a,@dptr
      00047B FD               [12] 1212 	mov	r5,a
      00047C A3               [24] 1213 	inc	dptr
      00047D E0               [24] 1214 	movx	a,@dptr
      00047E FE               [12] 1215 	mov	r6,a
      00047F A3               [24] 1216 	inc	dptr
      000480 E0               [24] 1217 	movx	a,@dptr
      000481 FF               [12] 1218 	mov	r7,a
      000482 8D 82            [24] 1219 	mov	dpl,r5
      000484 8E 83            [24] 1220 	mov	dph,r6
      000486 8F F0            [24] 1221 	mov	b,r7
      000488 74 0E            [12] 1222 	mov	a,#0x0E
      00048A 12r00r00         [24] 1223 	lcall	__gptrput
      00048D 75 82 00         [24] 1224 	mov	dpl,#0x00
                           000490  1225 	C$crc_4b6b.c$97$2$25 ==.
                                   1226 ;	crc_4b6b.c:97: case 0x1C: {*outSymbol = 0x0F; return(0); }
      000490 80 33            [24] 1227 	sjmp	00119$
      000492                       1228 00116$:
      000492 90r02r12         [24] 1229 	mov	dptr,#_decode4b6bsymbol_PARM_2
      000495 E0               [24] 1230 	movx	a,@dptr
      000496 FD               [12] 1231 	mov	r5,a
      000497 A3               [24] 1232 	inc	dptr
      000498 E0               [24] 1233 	movx	a,@dptr
      000499 FE               [12] 1234 	mov	r6,a
      00049A A3               [24] 1235 	inc	dptr
      00049B E0               [24] 1236 	movx	a,@dptr
      00049C FF               [12] 1237 	mov	r7,a
      00049D 8D 82            [24] 1238 	mov	dpl,r5
      00049F 8E 83            [24] 1239 	mov	dph,r6
      0004A1 8F F0            [24] 1240 	mov	b,r7
      0004A3 74 0F            [12] 1241 	mov	a,#0x0F
      0004A5 12r00r00         [24] 1242 	lcall	__gptrput
      0004A8 75 82 00         [24] 1243 	mov	dpl,#0x00
                           0004AB  1244 	C$crc_4b6b.c$98$2$25 ==.
                                   1245 ;	crc_4b6b.c:98: default:   {*outSymbol = 0x00; return(1); }
      0004AB 80 18            [24] 1246 	sjmp	00119$
      0004AD                       1247 00117$:
      0004AD 90r02r12         [24] 1248 	mov	dptr,#_decode4b6bsymbol_PARM_2
      0004B0 E0               [24] 1249 	movx	a,@dptr
      0004B1 FD               [12] 1250 	mov	r5,a
      0004B2 A3               [24] 1251 	inc	dptr
      0004B3 E0               [24] 1252 	movx	a,@dptr
      0004B4 FE               [12] 1253 	mov	r6,a
      0004B5 A3               [24] 1254 	inc	dptr
      0004B6 E0               [24] 1255 	movx	a,@dptr
      0004B7 FF               [12] 1256 	mov	r7,a
      0004B8 8D 82            [24] 1257 	mov	dpl,r5
      0004BA 8E 83            [24] 1258 	mov	dph,r6
      0004BC 8F F0            [24] 1259 	mov	b,r7
      0004BE E4               [12] 1260 	clr	a
      0004BF 12r00r00         [24] 1261 	lcall	__gptrput
      0004C2 75 82 01         [24] 1262 	mov	dpl,#0x01
                           0004C5  1263 	C$crc_4b6b.c$99$1$24 ==.
                                   1264 ;	crc_4b6b.c:99: }
      0004C5                       1265 00119$:
                           0004C5  1266 	C$crc_4b6b.c$100$1$24 ==.
                           0004C5  1267 	XG$decode4b6bsymbol$0$0 ==.
      0004C5 22               [24] 1268 	ret
                                   1269 ;------------------------------------------------------------
                                   1270 ;Allocation info for local variables in function 'encode4b6b'
                                   1271 ;------------------------------------------------------------
                                   1272 ;sloc0                     Allocated with name '_encode4b6b_sloc0_1_0'
                                   1273 ;sloc1                     Allocated with name '_encode4b6b_sloc1_1_0'
                                   1274 ;sloc2                     Allocated with name '_encode4b6b_sloc2_1_0'
                                   1275 ;sloc3                     Allocated with name '_encode4b6b_sloc3_1_0'
                                   1276 ;sloc4                     Allocated with name '_encode4b6b_sloc4_1_0'
                                   1277 ;sloc5                     Allocated with name '_encode4b6b_sloc5_1_0'
                                   1278 ;sloc6                     Allocated with name '_encode4b6b_sloc6_1_0'
                                   1279 ;bytesIn                   Allocated with name '_encode4b6b_PARM_2'
                                   1280 ;messageOut                Allocated with name '_encode4b6b_PARM_3'
                                   1281 ;bytesOut                  Allocated with name '_encode4b6b_PARM_4'
                                   1282 ;messageIn                 Allocated with name '_encode4b6b_messageIn_1_43'
                                   1283 ;i                         Allocated with name '_encode4b6b_i_1_44'
                                   1284 ;j                         Allocated with name '_encode4b6b_j_1_44'
                                   1285 ;intBuffer                 Allocated with name '_encode4b6b_intBuffer_1_44'
                                   1286 ;mask                      Allocated with name '_encode4b6b_mask_1_44'
                                   1287 ;intBitsAvailable          Allocated with name '_encode4b6b_intBitsAvailable_1_44'
                                   1288 ;symbol                    Allocated with name '_encode4b6b_symbol_1_44'
                                   1289 ;------------------------------------------------------------
                           0004C6  1290 	G$encode4b6b$0$0 ==.
                           0004C6  1291 	C$crc_4b6b.c$102$1$24 ==.
                                   1292 ;	crc_4b6b.c:102: void encode4b6b( char *messageIn, unsigned int bytesIn, char *messageOut, unsigned int *bytesOut ) {
                                   1293 ;	-----------------------------------------
                                   1294 ;	 function encode4b6b
                                   1295 ;	-----------------------------------------
      0004C6                       1296 _encode4b6b:
      0004C6 AF F0            [24] 1297 	mov	r7,b
      0004C8 AE 83            [24] 1298 	mov	r6,dph
      0004CA E5 82            [12] 1299 	mov	a,dpl
      0004CC 90r02r1E         [24] 1300 	mov	dptr,#_encode4b6b_messageIn_1_43
      0004CF F0               [24] 1301 	movx	@dptr,a
      0004D0 EE               [12] 1302 	mov	a,r6
      0004D1 A3               [24] 1303 	inc	dptr
      0004D2 F0               [24] 1304 	movx	@dptr,a
      0004D3 EF               [12] 1305 	mov	a,r7
      0004D4 A3               [24] 1306 	inc	dptr
      0004D5 F0               [24] 1307 	movx	@dptr,a
                           0004D6  1308 	C$crc_4b6b.c$110$1$44 ==.
                                   1309 ;	crc_4b6b.c:110: *bytesOut = 0;
      0004D6 90r02r1B         [24] 1310 	mov	dptr,#_encode4b6b_PARM_4
      0004D9 E0               [24] 1311 	movx	a,@dptr
      0004DA FD               [12] 1312 	mov	r5,a
      0004DB A3               [24] 1313 	inc	dptr
      0004DC E0               [24] 1314 	movx	a,@dptr
      0004DD FE               [12] 1315 	mov	r6,a
      0004DE A3               [24] 1316 	inc	dptr
      0004DF E0               [24] 1317 	movx	a,@dptr
      0004E0 FF               [12] 1318 	mov	r7,a
      0004E1 8D 82            [24] 1319 	mov	dpl,r5
      0004E3 8E 83            [24] 1320 	mov	dph,r6
      0004E5 8F F0            [24] 1321 	mov	b,r7
      0004E7 E4               [12] 1322 	clr	a
      0004E8 12r00r00         [24] 1323 	lcall	__gptrput
      0004EB A3               [24] 1324 	inc	dptr
      0004EC 12r00r00         [24] 1325 	lcall	__gptrput
                           0004EF  1326 	C$crc_4b6b.c$111$1$44 ==.
                                   1327 ;	crc_4b6b.c:111: intBitsAvailable = 0;
      0004EF 90r02r23         [24] 1328 	mov	dptr,#_encode4b6b_intBitsAvailable_1_44
      0004F2 F0               [24] 1329 	movx	@dptr,a
      0004F3 A3               [24] 1330 	inc	dptr
      0004F4 F0               [24] 1331 	movx	@dptr,a
                           0004F5  1332 	C$crc_4b6b.c$112$1$44 ==.
                                   1333 ;	crc_4b6b.c:112: intBuffer = 0;
      0004F5 90r02r21         [24] 1334 	mov	dptr,#_encode4b6b_intBuffer_1_44
      0004F8 F0               [24] 1335 	movx	@dptr,a
      0004F9 A3               [24] 1336 	inc	dptr
      0004FA F0               [24] 1337 	movx	@dptr,a
                           0004FB  1338 	C$crc_4b6b.c$114$3$47 ==.
                                   1339 ;	crc_4b6b.c:114: for( i = 0; i < bytesIn * 2; i++ ) {
      0004FB 90r02r1E         [24] 1340 	mov	dptr,#_encode4b6b_messageIn_1_43
      0004FE E0               [24] 1341 	movx	a,@dptr
      0004FF F5*0A            [12] 1342 	mov	_encode4b6b_sloc4_1_0,a
      000501 A3               [24] 1343 	inc	dptr
      000502 E0               [24] 1344 	movx	a,@dptr
      000503 F5*0B            [12] 1345 	mov	(_encode4b6b_sloc4_1_0 + 1),a
      000505 A3               [24] 1346 	inc	dptr
      000506 E0               [24] 1347 	movx	a,@dptr
      000507 F5*0C            [12] 1348 	mov	(_encode4b6b_sloc4_1_0 + 2),a
      000509 85*0A*00         [24] 1349 	mov	_encode4b6b_sloc0_1_0,_encode4b6b_sloc4_1_0
      00050C 85*0B*01         [24] 1350 	mov	(_encode4b6b_sloc0_1_0 + 1),(_encode4b6b_sloc4_1_0 + 1)
      00050F 85*0C*02         [24] 1351 	mov	(_encode4b6b_sloc0_1_0 + 2),(_encode4b6b_sloc4_1_0 + 2)
      000512 90r02r18         [24] 1352 	mov	dptr,#_encode4b6b_PARM_3
      000515 E0               [24] 1353 	movx	a,@dptr
      000516 F5*03            [12] 1354 	mov	_encode4b6b_sloc1_1_0,a
      000518 A3               [24] 1355 	inc	dptr
      000519 E0               [24] 1356 	movx	a,@dptr
      00051A F5*04            [12] 1357 	mov	(_encode4b6b_sloc1_1_0 + 1),a
      00051C A3               [24] 1358 	inc	dptr
      00051D E0               [24] 1359 	movx	a,@dptr
      00051E F5*05            [12] 1360 	mov	(_encode4b6b_sloc1_1_0 + 2),a
      000520 90r02r16         [24] 1361 	mov	dptr,#_encode4b6b_PARM_2
      000523 E0               [24] 1362 	movx	a,@dptr
      000524 F8               [12] 1363 	mov	r0,a
      000525 A3               [24] 1364 	inc	dptr
      000526 E0               [24] 1365 	movx	a,@dptr
      000527 F9               [12] 1366 	mov	r1,a
      000528 88*0D            [24] 1367 	mov	_encode4b6b_sloc5_1_0,r0
      00052A C5*0D            [12] 1368 	xch	a,_encode4b6b_sloc5_1_0
      00052C 25 E0            [12] 1369 	add	a,acc
      00052E C5*0D            [12] 1370 	xch	a,_encode4b6b_sloc5_1_0
      000530 33               [12] 1371 	rlc	a
      000531 F5*0E            [12] 1372 	mov	(_encode4b6b_sloc5_1_0 + 1),a
      000533 E4               [12] 1373 	clr	a
      000534 F5*06            [12] 1374 	mov	_encode4b6b_sloc2_1_0,a
      000536 F5*07            [12] 1375 	mov	(_encode4b6b_sloc2_1_0 + 1),a
      000538                       1376 00110$:
      000538 C3               [12] 1377 	clr	c
      000539 E5*06            [12] 1378 	mov	a,_encode4b6b_sloc2_1_0
      00053B 95*0D            [12] 1379 	subb	a,_encode4b6b_sloc5_1_0
      00053D E5*07            [12] 1380 	mov	a,(_encode4b6b_sloc2_1_0 + 1)
      00053F 95*0E            [12] 1381 	subb	a,(_encode4b6b_sloc5_1_0 + 1)
      000541 40 03            [24] 1382 	jc	00130$
      000543 02r06rDA         [24] 1383 	ljmp	00106$
      000546                       1384 00130$:
                           000546  1385 	C$crc_4b6b.c$115$1$44 ==.
                                   1386 ;	crc_4b6b.c:115: j = i >> 1;
      000546 85*06*08         [24] 1387 	mov	_encode4b6b_sloc3_1_0,_encode4b6b_sloc2_1_0
      000549 E5*07            [12] 1388 	mov	a,(_encode4b6b_sloc2_1_0 + 1)
      00054B C3               [12] 1389 	clr	c
      00054C 13               [12] 1390 	rrc	a
      00054D C5*08            [12] 1391 	xch	a,_encode4b6b_sloc3_1_0
      00054F 13               [12] 1392 	rrc	a
      000550 C5*08            [12] 1393 	xch	a,_encode4b6b_sloc3_1_0
                           000552  1394 	C$crc_4b6b.c$116$2$45 ==.
                                   1395 ;	crc_4b6b.c:116: if( j * 2 == i ) {
      000552 F5*09            [12] 1396 	mov	(_encode4b6b_sloc3_1_0 + 1),a
      000554 A8*08            [24] 1397 	mov	r0,_encode4b6b_sloc3_1_0
      000556 C8               [12] 1398 	xch	a,r0
      000557 25 E0            [12] 1399 	add	a,acc
      000559 C8               [12] 1400 	xch	a,r0
      00055A 33               [12] 1401 	rlc	a
      00055B F9               [12] 1402 	mov	r1,a
      00055C E8               [12] 1403 	mov	a,r0
      00055D B5*06 2C         [24] 1404 	cjne	a,_encode4b6b_sloc2_1_0,00102$
      000560 E9               [12] 1405 	mov	a,r1
      000561 B5*07 28         [24] 1406 	cjne	a,(_encode4b6b_sloc2_1_0 + 1),00102$
                           000564  1407 	C$crc_4b6b.c$117$1$44 ==.
                                   1408 ;	crc_4b6b.c:117: symbol = (messageIn[j] >> 4) & 0x0F;
      000564 E5*08            [12] 1409 	mov	a,_encode4b6b_sloc3_1_0
      000566 25*00            [12] 1410 	add	a,_encode4b6b_sloc0_1_0
      000568 F8               [12] 1411 	mov	r0,a
      000569 E5*09            [12] 1412 	mov	a,(_encode4b6b_sloc3_1_0 + 1)
      00056B 35*01            [12] 1413 	addc	a,(_encode4b6b_sloc0_1_0 + 1)
      00056D F9               [12] 1414 	mov	r1,a
      00056E AC*02            [24] 1415 	mov	r4,(_encode4b6b_sloc0_1_0 + 2)
      000570 88 82            [24] 1416 	mov	dpl,r0
      000572 89 83            [24] 1417 	mov	dph,r1
      000574 8C F0            [24] 1418 	mov	b,r4
      000576 12r00r00         [24] 1419 	lcall	__gptrget
      000579 F8               [12] 1420 	mov	r0,a
      00057A C4               [12] 1421 	swap	a
      00057B 54 0F            [12] 1422 	anl	a,#0x0F
      00057D 30 E3 02         [24] 1423 	jnb	acc.3,00133$
      000580 44 F0            [12] 1424 	orl	a,#0xF0
      000582                       1425 00133$:
      000582 F8               [12] 1426 	mov	r0,a
      000583 90r02r25         [24] 1427 	mov	dptr,#_encode4b6b_symbol_1_44
      000586 74 0F            [12] 1428 	mov	a,#0x0F
      000588 58               [12] 1429 	anl	a,r0
      000589 F0               [24] 1430 	movx	@dptr,a
      00058A 80 1D            [24] 1431 	sjmp	00103$
      00058C                       1432 00102$:
                           00058C  1433 	C$crc_4b6b.c$119$3$47 ==.
                                   1434 ;	crc_4b6b.c:119: symbol = messageIn[j] & 0x0F;
      00058C E5*08            [12] 1435 	mov	a,_encode4b6b_sloc3_1_0
      00058E 25*0A            [12] 1436 	add	a,_encode4b6b_sloc4_1_0
      000590 FA               [12] 1437 	mov	r2,a
      000591 E5*09            [12] 1438 	mov	a,(_encode4b6b_sloc3_1_0 + 1)
      000593 35*0B            [12] 1439 	addc	a,(_encode4b6b_sloc4_1_0 + 1)
      000595 FB               [12] 1440 	mov	r3,a
      000596 AC*0C            [24] 1441 	mov	r4,(_encode4b6b_sloc4_1_0 + 2)
      000598 8A 82            [24] 1442 	mov	dpl,r2
      00059A 8B 83            [24] 1443 	mov	dph,r3
      00059C 8C F0            [24] 1444 	mov	b,r4
      00059E 12r00r00         [24] 1445 	lcall	__gptrget
      0005A1 FA               [12] 1446 	mov	r2,a
      0005A2 90r02r25         [24] 1447 	mov	dptr,#_encode4b6b_symbol_1_44
      0005A5 74 0F            [12] 1448 	mov	a,#0x0F
      0005A7 5A               [12] 1449 	anl	a,r2
      0005A8 F0               [24] 1450 	movx	@dptr,a
      0005A9                       1451 00103$:
                           0005A9  1452 	C$crc_4b6b.c$121$1$44 ==.
                                   1453 ;	crc_4b6b.c:121: symbol = get4b6bsymbol( symbol );
      0005A9 90r02r25         [24] 1454 	mov	dptr,#_encode4b6b_symbol_1_44
      0005AC E0               [24] 1455 	movx	a,@dptr
      0005AD F5 82            [12] 1456 	mov	dpl,a
      0005AF C0 07            [24] 1457 	push	ar7
      0005B1 C0 06            [24] 1458 	push	ar6
      0005B3 C0 05            [24] 1459 	push	ar5
      0005B5 12r01rEC         [24] 1460 	lcall	_get4b6bsymbol
      0005B8 AC 82            [24] 1461 	mov	r4,dpl
      0005BA D0 05            [24] 1462 	pop	ar5
      0005BC D0 06            [24] 1463 	pop	ar6
      0005BE D0 07            [24] 1464 	pop	ar7
                           0005C0  1465 	C$crc_4b6b.c$122$2$45 ==.
                                   1466 ;	crc_4b6b.c:122: intBuffer = (intBuffer << 6) & 0xFFC0;
      0005C0 90r02r21         [24] 1467 	mov	dptr,#_encode4b6b_intBuffer_1_44
      0005C3 E0               [24] 1468 	movx	a,@dptr
      0005C4 FA               [12] 1469 	mov	r2,a
      0005C5 A3               [24] 1470 	inc	dptr
      0005C6 E0               [24] 1471 	movx	a,@dptr
      0005C7 54 03            [12] 1472 	anl	a,#0x03
      0005C9 A2 E0            [12] 1473 	mov	c,acc.0
      0005CB CA               [12] 1474 	xch	a,r2
      0005CC 13               [12] 1475 	rrc	a
      0005CD CA               [12] 1476 	xch	a,r2
      0005CE 13               [12] 1477 	rrc	a
      0005CF A2 E0            [12] 1478 	mov	c,acc.0
      0005D1 CA               [12] 1479 	xch	a,r2
      0005D2 13               [12] 1480 	rrc	a
      0005D3 CA               [12] 1481 	xch	a,r2
      0005D4 13               [12] 1482 	rrc	a
      0005D5 CA               [12] 1483 	xch	a,r2
      0005D6 FB               [12] 1484 	mov	r3,a
      0005D7 90r02r21         [24] 1485 	mov	dptr,#_encode4b6b_intBuffer_1_44
      0005DA 74 C0            [12] 1486 	mov	a,#0xC0
      0005DC 5A               [12] 1487 	anl	a,r2
      0005DD F0               [24] 1488 	movx	@dptr,a
      0005DE EB               [12] 1489 	mov	a,r3
      0005DF A3               [24] 1490 	inc	dptr
      0005E0 F0               [24] 1491 	movx	@dptr,a
                           0005E1  1492 	C$crc_4b6b.c$123$2$45 ==.
                                   1493 ;	crc_4b6b.c:123: intBuffer = intBuffer | symbol;
      0005E1 90r02r21         [24] 1494 	mov	dptr,#_encode4b6b_intBuffer_1_44
      0005E4 E0               [24] 1495 	movx	a,@dptr
      0005E5 FA               [12] 1496 	mov	r2,a
      0005E6 A3               [24] 1497 	inc	dptr
      0005E7 E0               [24] 1498 	movx	a,@dptr
      0005E8 FB               [12] 1499 	mov	r3,a
      0005E9 EC               [12] 1500 	mov	a,r4
      0005EA F9               [12] 1501 	mov	r1,a
      0005EB 33               [12] 1502 	rlc	a
      0005EC 95 E0            [12] 1503 	subb	a,acc
      0005EE FC               [12] 1504 	mov	r4,a
      0005EF 90r02r21         [24] 1505 	mov	dptr,#_encode4b6b_intBuffer_1_44
      0005F2 E9               [12] 1506 	mov	a,r1
      0005F3 4A               [12] 1507 	orl	a,r2
      0005F4 F0               [24] 1508 	movx	@dptr,a
      0005F5 EC               [12] 1509 	mov	a,r4
      0005F6 4B               [12] 1510 	orl	a,r3
      0005F7 A3               [24] 1511 	inc	dptr
      0005F8 F0               [24] 1512 	movx	@dptr,a
                           0005F9  1513 	C$crc_4b6b.c$124$2$45 ==.
                                   1514 ;	crc_4b6b.c:124: intBitsAvailable += 6;
      0005F9 90r02r23         [24] 1515 	mov	dptr,#_encode4b6b_intBitsAvailable_1_44
      0005FC E0               [24] 1516 	movx	a,@dptr
      0005FD FB               [12] 1517 	mov	r3,a
      0005FE A3               [24] 1518 	inc	dptr
      0005FF E0               [24] 1519 	movx	a,@dptr
      000600 FC               [12] 1520 	mov	r4,a
      000601 90r02r23         [24] 1521 	mov	dptr,#_encode4b6b_intBitsAvailable_1_44
      000604 74 06            [12] 1522 	mov	a,#0x06
      000606 2B               [12] 1523 	add	a,r3
      000607 F0               [24] 1524 	movx	@dptr,a
      000608 E4               [12] 1525 	clr	a
      000609 3C               [12] 1526 	addc	a,r4
      00060A A3               [24] 1527 	inc	dptr
      00060B F0               [24] 1528 	movx	@dptr,a
                           00060C  1529 	C$crc_4b6b.c$125$2$45 ==.
                                   1530 ;	crc_4b6b.c:125: if( intBitsAvailable >= 8 ) {
      00060C 90r02r23         [24] 1531 	mov	dptr,#_encode4b6b_intBitsAvailable_1_44
      00060F E0               [24] 1532 	movx	a,@dptr
      000610 F5*08            [12] 1533 	mov	_encode4b6b_sloc3_1_0,a
      000612 A3               [24] 1534 	inc	dptr
      000613 E0               [24] 1535 	movx	a,@dptr
      000614 F5*09            [12] 1536 	mov	(_encode4b6b_sloc3_1_0 + 1),a
      000616 C3               [12] 1537 	clr	c
      000617 E5*08            [12] 1538 	mov	a,_encode4b6b_sloc3_1_0
      000619 94 08            [12] 1539 	subb	a,#0x08
      00061B E5*09            [12] 1540 	mov	a,(_encode4b6b_sloc3_1_0 + 1)
      00061D 64 80            [12] 1541 	xrl	a,#0x80
      00061F 94 80            [12] 1542 	subb	a,#0x80
      000621 50 03            [24] 1543 	jnc	00134$
      000623 02r06rCF         [24] 1544 	ljmp	00111$
      000626                       1545 00134$:
                           000626  1546 	C$crc_4b6b.c$126$3$48 ==.
                                   1547 ;	crc_4b6b.c:126: symbol = intBuffer >> (intBitsAvailable - 8);
      000626 E5*08            [12] 1548 	mov	a,_encode4b6b_sloc3_1_0
      000628 24 F8            [12] 1549 	add	a,#0xF8
      00062A FB               [12] 1550 	mov	r3,a
      00062B E5*09            [12] 1551 	mov	a,(_encode4b6b_sloc3_1_0 + 1)
      00062D 34 FF            [12] 1552 	addc	a,#0xFF
      00062F FC               [12] 1553 	mov	r4,a
      000630 90r02r21         [24] 1554 	mov	dptr,#_encode4b6b_intBuffer_1_44
      000633 E0               [24] 1555 	movx	a,@dptr
      000634 F5*08            [12] 1556 	mov	_encode4b6b_sloc3_1_0,a
      000636 A3               [24] 1557 	inc	dptr
      000637 E0               [24] 1558 	movx	a,@dptr
      000638 F5*09            [12] 1559 	mov	(_encode4b6b_sloc3_1_0 + 1),a
      00063A 8B F0            [24] 1560 	mov	b,r3
      00063C 05 F0            [12] 1561 	inc	b
      00063E A8*08            [24] 1562 	mov	r0,_encode4b6b_sloc3_1_0
      000640 E5*09            [12] 1563 	mov	a,(_encode4b6b_sloc3_1_0 + 1)
      000642 FA               [12] 1564 	mov	r2,a
      000643 33               [12] 1565 	rlc	a
      000644 92 D2            [24] 1566 	mov	ov,c
      000646 80 08            [24] 1567 	sjmp	00136$
      000648                       1568 00135$:
      000648 A2 D2            [12] 1569 	mov	c,ov
      00064A EA               [12] 1570 	mov	a,r2
      00064B 13               [12] 1571 	rrc	a
      00064C FA               [12] 1572 	mov	r2,a
      00064D E8               [12] 1573 	mov	a,r0
      00064E 13               [12] 1574 	rrc	a
      00064F F8               [12] 1575 	mov	r0,a
      000650                       1576 00136$:
      000650 D5 F0 F5         [24] 1577 	djnz	b,00135$
      000653 88*0F            [24] 1578 	mov	_encode4b6b_sloc6_1_0,r0
                           000655  1579 	C$crc_4b6b.c$127$3$48 ==.
                                   1580 ;	crc_4b6b.c:127: messageOut[*bytesOut] = symbol;
      000655 8D 82            [24] 1581 	mov	dpl,r5
      000657 8E 83            [24] 1582 	mov	dph,r6
      000659 8F F0            [24] 1583 	mov	b,r7
      00065B 12r00r00         [24] 1584 	lcall	__gptrget
      00065E F9               [12] 1585 	mov	r1,a
      00065F A3               [24] 1586 	inc	dptr
      000660 12r00r00         [24] 1587 	lcall	__gptrget
      000663 FA               [12] 1588 	mov	r2,a
      000664 E9               [12] 1589 	mov	a,r1
      000665 25*03            [12] 1590 	add	a,_encode4b6b_sloc1_1_0
      000667 F9               [12] 1591 	mov	r1,a
      000668 EA               [12] 1592 	mov	a,r2
      000669 35*04            [12] 1593 	addc	a,(_encode4b6b_sloc1_1_0 + 1)
      00066B F8               [12] 1594 	mov	r0,a
      00066C AA*05            [24] 1595 	mov	r2,(_encode4b6b_sloc1_1_0 + 2)
      00066E 89 82            [24] 1596 	mov	dpl,r1
      000670 88 83            [24] 1597 	mov	dph,r0
      000672 8A F0            [24] 1598 	mov	b,r2
      000674 E5*0F            [12] 1599 	mov	a,_encode4b6b_sloc6_1_0
      000676 12r00r00         [24] 1600 	lcall	__gptrput
                           000679  1601 	C$crc_4b6b.c$128$3$48 ==.
                                   1602 ;	crc_4b6b.c:128: (*bytesOut)++;
      000679 8D 82            [24] 1603 	mov	dpl,r5
      00067B 8E 83            [24] 1604 	mov	dph,r6
      00067D 8F F0            [24] 1605 	mov	b,r7
      00067F 12r00r00         [24] 1606 	lcall	__gptrget
      000682 F9               [12] 1607 	mov	r1,a
      000683 A3               [24] 1608 	inc	dptr
      000684 12r00r00         [24] 1609 	lcall	__gptrget
      000687 FA               [12] 1610 	mov	r2,a
      000688 09               [12] 1611 	inc	r1
      000689 B9 00 01         [24] 1612 	cjne	r1,#0x00,00137$
      00068C 0A               [12] 1613 	inc	r2
      00068D                       1614 00137$:
      00068D 8D 82            [24] 1615 	mov	dpl,r5
      00068F 8E 83            [24] 1616 	mov	dph,r6
      000691 8F F0            [24] 1617 	mov	b,r7
      000693 E9               [12] 1618 	mov	a,r1
      000694 12r00r00         [24] 1619 	lcall	__gptrput
      000697 A3               [24] 1620 	inc	dptr
      000698 EA               [12] 1621 	mov	a,r2
      000699 12r00r00         [24] 1622 	lcall	__gptrput
                           00069C  1623 	C$crc_4b6b.c$129$3$48 ==.
                                   1624 ;	crc_4b6b.c:129: intBitsAvailable -= 8;
      00069C 90r02r23         [24] 1625 	mov	dptr,#_encode4b6b_intBitsAvailable_1_44
      00069F EB               [12] 1626 	mov	a,r3
      0006A0 F0               [24] 1627 	movx	@dptr,a
      0006A1 EC               [12] 1628 	mov	a,r4
      0006A2 A3               [24] 1629 	inc	dptr
      0006A3 F0               [24] 1630 	movx	@dptr,a
                           0006A4  1631 	C$crc_4b6b.c$130$3$48 ==.
                                   1632 ;	crc_4b6b.c:130: mask = (1 << intBitsAvailable) - 1;
      0006A4 90r02r23         [24] 1633 	mov	dptr,#_encode4b6b_intBitsAvailable_1_44
      0006A7 E0               [24] 1634 	movx	a,@dptr
      0006A8 FB               [12] 1635 	mov	r3,a
      0006A9 A3               [24] 1636 	inc	dptr
      0006AA E0               [24] 1637 	movx	a,@dptr
      0006AB 8B F0            [24] 1638 	mov	b,r3
      0006AD 05 F0            [12] 1639 	inc	b
      0006AF 7B 01            [12] 1640 	mov	r3,#0x01
      0006B1 7C 00            [12] 1641 	mov	r4,#0x00
      0006B3 80 06            [24] 1642 	sjmp	00139$
      0006B5                       1643 00138$:
      0006B5 EB               [12] 1644 	mov	a,r3
      0006B6 2B               [12] 1645 	add	a,r3
      0006B7 FB               [12] 1646 	mov	r3,a
      0006B8 EC               [12] 1647 	mov	a,r4
      0006B9 33               [12] 1648 	rlc	a
      0006BA FC               [12] 1649 	mov	r4,a
      0006BB                       1650 00139$:
      0006BB D5 F0 F7         [24] 1651 	djnz	b,00138$
      0006BE 1B               [12] 1652 	dec	r3
      0006BF BB FF 01         [24] 1653 	cjne	r3,#0xFF,00140$
      0006C2 1C               [12] 1654 	dec	r4
      0006C3                       1655 00140$:
                           0006C3  1656 	C$crc_4b6b.c$131$3$48 ==.
                                   1657 ;	crc_4b6b.c:131: intBuffer = intBuffer & mask;
      0006C3 90r02r21         [24] 1658 	mov	dptr,#_encode4b6b_intBuffer_1_44
      0006C6 EB               [12] 1659 	mov	a,r3
      0006C7 55*08            [12] 1660 	anl	a,_encode4b6b_sloc3_1_0
      0006C9 F0               [24] 1661 	movx	@dptr,a
      0006CA EC               [12] 1662 	mov	a,r4
      0006CB 55*09            [12] 1663 	anl	a,(_encode4b6b_sloc3_1_0 + 1)
      0006CD A3               [24] 1664 	inc	dptr
      0006CE F0               [24] 1665 	movx	@dptr,a
      0006CF                       1666 00111$:
                           0006CF  1667 	C$crc_4b6b.c$114$1$44 ==.
                                   1668 ;	crc_4b6b.c:114: for( i = 0; i < bytesIn * 2; i++ ) {
      0006CF 05*06            [12] 1669 	inc	_encode4b6b_sloc2_1_0
      0006D1 E4               [12] 1670 	clr	a
      0006D2 B5*06 02         [24] 1671 	cjne	a,_encode4b6b_sloc2_1_0,00141$
      0006D5 05*07            [12] 1672 	inc	(_encode4b6b_sloc2_1_0 + 1)
      0006D7                       1673 00141$:
      0006D7 02r05r38         [24] 1674 	ljmp	00110$
      0006DA                       1675 00106$:
                           0006DA  1676 	C$crc_4b6b.c$135$1$44 ==.
                                   1677 ;	crc_4b6b.c:135: if( intBitsAvailable != 0 ) {
      0006DA 90r02r23         [24] 1678 	mov	dptr,#_encode4b6b_intBitsAvailable_1_44
      0006DD E0               [24] 1679 	movx	a,@dptr
      0006DE FB               [12] 1680 	mov	r3,a
      0006DF A3               [24] 1681 	inc	dptr
      0006E0 E0               [24] 1682 	movx	a,@dptr
      0006E1 FC               [12] 1683 	mov	r4,a
      0006E2 4B               [12] 1684 	orl	a,r3
      0006E3 70 03            [24] 1685 	jnz	00142$
      0006E5 02r07r90         [24] 1686 	ljmp	00112$
      0006E8                       1687 00142$:
                           0006E8  1688 	C$crc_4b6b.c$136$2$49 ==.
                                   1689 ;	crc_4b6b.c:136: mask = (1 << intBitsAvailable) - 1;
      0006E8 8B F0            [24] 1690 	mov	b,r3
      0006EA 05 F0            [12] 1691 	inc	b
      0006EC 79 01            [12] 1692 	mov	r1,#0x01
      0006EE 7A 00            [12] 1693 	mov	r2,#0x00
      0006F0 80 06            [24] 1694 	sjmp	00144$
      0006F2                       1695 00143$:
      0006F2 E9               [12] 1696 	mov	a,r1
      0006F3 29               [12] 1697 	add	a,r1
      0006F4 F9               [12] 1698 	mov	r1,a
      0006F5 EA               [12] 1699 	mov	a,r2
      0006F6 33               [12] 1700 	rlc	a
      0006F7 FA               [12] 1701 	mov	r2,a
      0006F8                       1702 00144$:
      0006F8 D5 F0 F7         [24] 1703 	djnz	b,00143$
      0006FB E9               [12] 1704 	mov	a,r1
      0006FC 24 FF            [12] 1705 	add	a,#0xFF
      0006FE F5*0D            [12] 1706 	mov	_encode4b6b_sloc5_1_0,a
      000700 EA               [12] 1707 	mov	a,r2
      000701 34 FF            [12] 1708 	addc	a,#0xFF
      000703 F5*0E            [12] 1709 	mov	(_encode4b6b_sloc5_1_0 + 1),a
                           000705  1710 	C$crc_4b6b.c$137$2$49 ==.
                                   1711 ;	crc_4b6b.c:137: intBuffer = intBuffer & mask;
      000705 90r02r21         [24] 1712 	mov	dptr,#_encode4b6b_intBuffer_1_44
      000708 E0               [24] 1713 	movx	a,@dptr
      000709 F8               [12] 1714 	mov	r0,a
      00070A A3               [24] 1715 	inc	dptr
      00070B E0               [24] 1716 	movx	a,@dptr
      00070C FA               [12] 1717 	mov	r2,a
      00070D 90r02r21         [24] 1718 	mov	dptr,#_encode4b6b_intBuffer_1_44
      000710 E5*0D            [12] 1719 	mov	a,_encode4b6b_sloc5_1_0
      000712 58               [12] 1720 	anl	a,r0
      000713 F0               [24] 1721 	movx	@dptr,a
      000714 E5*0E            [12] 1722 	mov	a,(_encode4b6b_sloc5_1_0 + 1)
      000716 5A               [12] 1723 	anl	a,r2
      000717 A3               [24] 1724 	inc	dptr
      000718 F0               [24] 1725 	movx	@dptr,a
                           000719  1726 	C$crc_4b6b.c$138$2$49 ==.
                                   1727 ;	crc_4b6b.c:138: intBuffer = intBuffer << (8 - intBitsAvailable);
      000719 74 08            [12] 1728 	mov	a,#0x08
      00071B C3               [12] 1729 	clr	c
      00071C 9B               [12] 1730 	subb	a,r3
      00071D FB               [12] 1731 	mov	r3,a
      00071E E4               [12] 1732 	clr	a
      00071F 9C               [12] 1733 	subb	a,r4
      000720 90r02r21         [24] 1734 	mov	dptr,#_encode4b6b_intBuffer_1_44
      000723 E0               [24] 1735 	movx	a,@dptr
      000724 F9               [12] 1736 	mov	r1,a
      000725 A3               [24] 1737 	inc	dptr
      000726 E0               [24] 1738 	movx	a,@dptr
      000727 FA               [12] 1739 	mov	r2,a
      000728 8B F0            [24] 1740 	mov	b,r3
      00072A 05 F0            [12] 1741 	inc	b
      00072C AB 01            [24] 1742 	mov	r3,ar1
      00072E AC 02            [24] 1743 	mov	r4,ar2
      000730 80 06            [24] 1744 	sjmp	00146$
      000732                       1745 00145$:
      000732 EB               [12] 1746 	mov	a,r3
      000733 2B               [12] 1747 	add	a,r3
      000734 FB               [12] 1748 	mov	r3,a
      000735 EC               [12] 1749 	mov	a,r4
      000736 33               [12] 1750 	rlc	a
      000737 FC               [12] 1751 	mov	r4,a
      000738                       1752 00146$:
      000738 D5 F0 F7         [24] 1753 	djnz	b,00145$
      00073B 90r02r21         [24] 1754 	mov	dptr,#_encode4b6b_intBuffer_1_44
      00073E EB               [12] 1755 	mov	a,r3
      00073F F0               [24] 1756 	movx	@dptr,a
      000740 EC               [12] 1757 	mov	a,r4
      000741 A3               [24] 1758 	inc	dptr
      000742 F0               [24] 1759 	movx	@dptr,a
                           000743  1760 	C$crc_4b6b.c$139$2$49 ==.
                                   1761 ;	crc_4b6b.c:139: symbol = intBuffer & 0x00FF;
      000743 90r02r21         [24] 1762 	mov	dptr,#_encode4b6b_intBuffer_1_44
      000746 E0               [24] 1763 	movx	a,@dptr
      000747 FB               [12] 1764 	mov	r3,a
      000748 A3               [24] 1765 	inc	dptr
      000749 E0               [24] 1766 	movx	a,@dptr
                           00074A  1767 	C$crc_4b6b.c$140$2$49 ==.
                                   1768 ;	crc_4b6b.c:140: messageOut[*bytesOut] = symbol;
      00074A 8D 82            [24] 1769 	mov	dpl,r5
      00074C 8E 83            [24] 1770 	mov	dph,r6
      00074E 8F F0            [24] 1771 	mov	b,r7
      000750 12r00r00         [24] 1772 	lcall	__gptrget
      000753 FA               [12] 1773 	mov	r2,a
      000754 A3               [24] 1774 	inc	dptr
      000755 12r00r00         [24] 1775 	lcall	__gptrget
      000758 FC               [12] 1776 	mov	r4,a
      000759 EA               [12] 1777 	mov	a,r2
      00075A 25*03            [12] 1778 	add	a,_encode4b6b_sloc1_1_0
      00075C FA               [12] 1779 	mov	r2,a
      00075D EC               [12] 1780 	mov	a,r4
      00075E 35*04            [12] 1781 	addc	a,(_encode4b6b_sloc1_1_0 + 1)
      000760 F9               [12] 1782 	mov	r1,a
      000761 AC*05            [24] 1783 	mov	r4,(_encode4b6b_sloc1_1_0 + 2)
      000763 8A 82            [24] 1784 	mov	dpl,r2
      000765 89 83            [24] 1785 	mov	dph,r1
      000767 8C F0            [24] 1786 	mov	b,r4
      000769 EB               [12] 1787 	mov	a,r3
      00076A 12r00r00         [24] 1788 	lcall	__gptrput
                           00076D  1789 	C$crc_4b6b.c$141$2$49 ==.
                                   1790 ;	crc_4b6b.c:141: (*bytesOut)++;
      00076D 8D 82            [24] 1791 	mov	dpl,r5
      00076F 8E 83            [24] 1792 	mov	dph,r6
      000771 8F F0            [24] 1793 	mov	b,r7
      000773 12r00r00         [24] 1794 	lcall	__gptrget
      000776 FB               [12] 1795 	mov	r3,a
      000777 A3               [24] 1796 	inc	dptr
      000778 12r00r00         [24] 1797 	lcall	__gptrget
      00077B FC               [12] 1798 	mov	r4,a
      00077C 0B               [12] 1799 	inc	r3
      00077D BB 00 01         [24] 1800 	cjne	r3,#0x00,00147$
      000780 0C               [12] 1801 	inc	r4
      000781                       1802 00147$:
      000781 8D 82            [24] 1803 	mov	dpl,r5
      000783 8E 83            [24] 1804 	mov	dph,r6
      000785 8F F0            [24] 1805 	mov	b,r7
      000787 EB               [12] 1806 	mov	a,r3
      000788 12r00r00         [24] 1807 	lcall	__gptrput
      00078B A3               [24] 1808 	inc	dptr
      00078C EC               [12] 1809 	mov	a,r4
      00078D 12r00r00         [24] 1810 	lcall	__gptrput
      000790                       1811 00112$:
                           000790  1812 	C$crc_4b6b.c$143$1$44 ==.
                           000790  1813 	XG$encode4b6b$0$0 ==.
      000790 22               [24] 1814 	ret
                                   1815 ;------------------------------------------------------------
                                   1816 ;Allocation info for local variables in function 'decode4b6b'
                                   1817 ;------------------------------------------------------------
                                   1818 ;sloc0                     Allocated with name '_decode4b6b_sloc0_1_0'
                                   1819 ;sloc1                     Allocated with name '_decode4b6b_sloc1_1_0'
                                   1820 ;sloc2                     Allocated with name '_decode4b6b_sloc2_1_0'
                                   1821 ;sloc3                     Allocated with name '_decode4b6b_sloc3_1_0'
                                   1822 ;sloc4                     Allocated with name '_decode4b6b_sloc4_1_0'
                                   1823 ;bytesIn                   Allocated with name '_decode4b6b_PARM_2'
                                   1824 ;messageOut                Allocated with name '_decode4b6b_PARM_3'
                                   1825 ;bytesOut                  Allocated with name '_decode4b6b_PARM_4'
                                   1826 ;messageIn                 Allocated with name '_decode4b6b_messageIn_1_50'
                                   1827 ;i                         Allocated with name '_decode4b6b_i_1_51'
                                   1828 ;intBuffer                 Allocated with name '_decode4b6b_intBuffer_1_51'
                                   1829 ;intBitsAvailable          Allocated with name '_decode4b6b_intBitsAvailable_1_51'
                                   1830 ;symbol                    Allocated with name '_decode4b6b_symbol_1_51'
                                   1831 ;recByte                   Allocated with name '_decode4b6b_recByte_1_51'
                                   1832 ;nibbleFlag                Allocated with name '_decode4b6b_nibbleFlag_1_51'
                                   1833 ;outBytes                  Allocated with name '_decode4b6b_outBytes_1_51'
                                   1834 ;------------------------------------------------------------
                           000791  1835 	G$decode4b6b$0$0 ==.
                           000791  1836 	C$crc_4b6b.c$145$1$44 ==.
                                   1837 ;	crc_4b6b.c:145: void decode4b6b( char *messageIn, unsigned int bytesIn, char *messageOut, unsigned int *bytesOut ) {
                                   1838 ;	-----------------------------------------
                                   1839 ;	 function decode4b6b
                                   1840 ;	-----------------------------------------
      000791                       1841 _decode4b6b:
      000791 AF F0            [24] 1842 	mov	r7,b
      000793 AE 83            [24] 1843 	mov	r6,dph
      000795 E5 82            [12] 1844 	mov	a,dpl
      000797 90r02r2E         [24] 1845 	mov	dptr,#_decode4b6b_messageIn_1_50
      00079A F0               [24] 1846 	movx	@dptr,a
      00079B EE               [12] 1847 	mov	a,r6
      00079C A3               [24] 1848 	inc	dptr
      00079D F0               [24] 1849 	movx	@dptr,a
      00079E EF               [12] 1850 	mov	a,r7
      00079F A3               [24] 1851 	inc	dptr
      0007A0 F0               [24] 1852 	movx	@dptr,a
                           0007A1  1853 	C$crc_4b6b.c$147$1$44 ==.
                                   1854 ;	crc_4b6b.c:147: int intBuffer = 0;
      0007A1 90r02r31         [24] 1855 	mov	dptr,#_decode4b6b_intBuffer_1_51
      0007A4 E4               [12] 1856 	clr	a
      0007A5 F0               [24] 1857 	movx	@dptr,a
      0007A6 A3               [24] 1858 	inc	dptr
      0007A7 F0               [24] 1859 	movx	@dptr,a
                           0007A8  1860 	C$crc_4b6b.c$149$1$44 ==.
                                   1861 ;	crc_4b6b.c:149: char symbol = 0;
      0007A8 90r02r35         [24] 1862 	mov	dptr,#_decode4b6b_symbol_1_51
      0007AB F0               [24] 1863 	movx	@dptr,a
                           0007AC  1864 	C$crc_4b6b.c$150$1$44 ==.
                                   1865 ;	crc_4b6b.c:150: char recByte = 0;
      0007AC 90r02r36         [24] 1866 	mov	dptr,#_decode4b6b_recByte_1_51
      0007AF F0               [24] 1867 	movx	@dptr,a
                           0007B0  1868 	C$crc_4b6b.c$154$1$51 ==.
                                   1869 ;	crc_4b6b.c:154: intBitsAvailable = 0;
      0007B0 90r02r33         [24] 1870 	mov	dptr,#_decode4b6b_intBitsAvailable_1_51
      0007B3 F0               [24] 1871 	movx	@dptr,a
      0007B4 A3               [24] 1872 	inc	dptr
      0007B5 F0               [24] 1873 	movx	@dptr,a
                           0007B6  1874 	C$crc_4b6b.c$155$1$51 ==.
                                   1875 ;	crc_4b6b.c:155: nibbleFlag = 0;
      0007B6 90r02r37         [24] 1876 	mov	dptr,#_decode4b6b_nibbleFlag_1_51
      0007B9 F0               [24] 1877 	movx	@dptr,a
                           0007BA  1878 	C$crc_4b6b.c$156$1$51 ==.
                                   1879 ;	crc_4b6b.c:156: outBytes = 0;
      0007BA 90r02r38         [24] 1880 	mov	dptr,#_decode4b6b_outBytes_1_51
      0007BD F0               [24] 1881 	movx	@dptr,a
                           0007BE  1882 	C$crc_4b6b.c$157$2$52 ==.
                                   1883 ;	crc_4b6b.c:157: for( i = 0; i < bytesIn; i++ ) {
      0007BE 90r02r2E         [24] 1884 	mov	dptr,#_decode4b6b_messageIn_1_50
      0007C1 E0               [24] 1885 	movx	a,@dptr
      0007C2 F5*12            [12] 1886 	mov	_decode4b6b_sloc1_1_0,a
      0007C4 A3               [24] 1887 	inc	dptr
      0007C5 E0               [24] 1888 	movx	a,@dptr
      0007C6 F5*13            [12] 1889 	mov	(_decode4b6b_sloc1_1_0 + 1),a
      0007C8 A3               [24] 1890 	inc	dptr
      0007C9 E0               [24] 1891 	movx	a,@dptr
      0007CA F5*14            [12] 1892 	mov	(_decode4b6b_sloc1_1_0 + 2),a
      0007CC 90r02r28         [24] 1893 	mov	dptr,#_decode4b6b_PARM_3
      0007CF E0               [24] 1894 	movx	a,@dptr
      0007D0 FA               [12] 1895 	mov	r2,a
      0007D1 A3               [24] 1896 	inc	dptr
      0007D2 E0               [24] 1897 	movx	a,@dptr
      0007D3 FB               [12] 1898 	mov	r3,a
      0007D4 A3               [24] 1899 	inc	dptr
      0007D5 E0               [24] 1900 	movx	a,@dptr
      0007D6 FC               [12] 1901 	mov	r4,a
      0007D7 90r02r26         [24] 1902 	mov	dptr,#_decode4b6b_PARM_2
      0007DA E0               [24] 1903 	movx	a,@dptr
      0007DB F8               [12] 1904 	mov	r0,a
      0007DC A3               [24] 1905 	inc	dptr
      0007DD E0               [24] 1906 	movx	a,@dptr
      0007DE F9               [12] 1907 	mov	r1,a
      0007DF E4               [12] 1908 	clr	a
      0007E0 F5*10            [12] 1909 	mov	_decode4b6b_sloc0_1_0,a
      0007E2 F5*11            [12] 1910 	mov	(_decode4b6b_sloc0_1_0 + 1),a
      0007E4                       1911 00108$:
      0007E4 C3               [12] 1912 	clr	c
      0007E5 E5*10            [12] 1913 	mov	a,_decode4b6b_sloc0_1_0
      0007E7 98               [12] 1914 	subb	a,r0
      0007E8 E5*11            [12] 1915 	mov	a,(_decode4b6b_sloc0_1_0 + 1)
      0007EA 99               [12] 1916 	subb	a,r1
      0007EB 40 03            [24] 1917 	jc	00129$
      0007ED 02r09r3B         [24] 1918 	ljmp	00106$
      0007F0                       1919 00129$:
                           0007F0  1920 	C$crc_4b6b.c$158$1$51 ==.
                                   1921 ;	crc_4b6b.c:158: intBuffer = intBuffer << 8;
      0007F0 C0 00            [24] 1922 	push	ar0
      0007F2 C0 01            [24] 1923 	push	ar1
      0007F4 90r02r31         [24] 1924 	mov	dptr,#_decode4b6b_intBuffer_1_51
      0007F7 E0               [24] 1925 	movx	a,@dptr
      0007F8 F8               [12] 1926 	mov	r0,a
      0007F9 A3               [24] 1927 	inc	dptr
      0007FA E0               [24] 1928 	movx	a,@dptr
      0007FB 88 01            [24] 1929 	mov	ar1,r0
      0007FD 78 00            [12] 1930 	mov	r0,#0x00
      0007FF 90r02r31         [24] 1931 	mov	dptr,#_decode4b6b_intBuffer_1_51
      000802 E8               [12] 1932 	mov	a,r0
      000803 F0               [24] 1933 	movx	@dptr,a
      000804 E9               [12] 1934 	mov	a,r1
      000805 A3               [24] 1935 	inc	dptr
      000806 F0               [24] 1936 	movx	@dptr,a
                           000807  1937 	C$crc_4b6b.c$159$2$52 ==.
                                   1938 ;	crc_4b6b.c:159: intBuffer |= messageIn[i];
      000807 E5*10            [12] 1939 	mov	a,_decode4b6b_sloc0_1_0
      000809 25*12            [12] 1940 	add	a,_decode4b6b_sloc1_1_0
      00080B F8               [12] 1941 	mov	r0,a
      00080C E5*11            [12] 1942 	mov	a,(_decode4b6b_sloc0_1_0 + 1)
      00080E 35*13            [12] 1943 	addc	a,(_decode4b6b_sloc1_1_0 + 1)
      000810 F9               [12] 1944 	mov	r1,a
      000811 AF*14            [24] 1945 	mov	r7,(_decode4b6b_sloc1_1_0 + 2)
      000813 88 82            [24] 1946 	mov	dpl,r0
      000815 89 83            [24] 1947 	mov	dph,r1
      000817 8F F0            [24] 1948 	mov	b,r7
      000819 12r00r00         [24] 1949 	lcall	__gptrget
      00081C F8               [12] 1950 	mov	r0,a
      00081D 90r02r31         [24] 1951 	mov	dptr,#_decode4b6b_intBuffer_1_51
      000820 E0               [24] 1952 	movx	a,@dptr
      000821 FE               [12] 1953 	mov	r6,a
      000822 A3               [24] 1954 	inc	dptr
      000823 E0               [24] 1955 	movx	a,@dptr
      000824 FF               [12] 1956 	mov	r7,a
      000825 E8               [12] 1957 	mov	a,r0
      000826 33               [12] 1958 	rlc	a
      000827 95 E0            [12] 1959 	subb	a,acc
      000829 FD               [12] 1960 	mov	r5,a
      00082A 90r02r31         [24] 1961 	mov	dptr,#_decode4b6b_intBuffer_1_51
      00082D E8               [12] 1962 	mov	a,r0
      00082E 4E               [12] 1963 	orl	a,r6
      00082F F0               [24] 1964 	movx	@dptr,a
      000830 ED               [12] 1965 	mov	a,r5
      000831 4F               [12] 1966 	orl	a,r7
      000832 A3               [24] 1967 	inc	dptr
      000833 F0               [24] 1968 	movx	@dptr,a
                           000834  1969 	C$crc_4b6b.c$160$2$52 ==.
                                   1970 ;	crc_4b6b.c:160: intBitsAvailable += 8;
      000834 90r02r33         [24] 1971 	mov	dptr,#_decode4b6b_intBitsAvailable_1_51
      000837 E0               [24] 1972 	movx	a,@dptr
      000838 FE               [12] 1973 	mov	r6,a
      000839 A3               [24] 1974 	inc	dptr
      00083A E0               [24] 1975 	movx	a,@dptr
      00083B FF               [12] 1976 	mov	r7,a
      00083C 90r02r33         [24] 1977 	mov	dptr,#_decode4b6b_intBitsAvailable_1_51
      00083F 74 08            [12] 1978 	mov	a,#0x08
      000841 2E               [12] 1979 	add	a,r6
      000842 F0               [24] 1980 	movx	@dptr,a
      000843 E4               [12] 1981 	clr	a
      000844 3F               [12] 1982 	addc	a,r7
      000845 A3               [24] 1983 	inc	dptr
      000846 F0               [24] 1984 	movx	@dptr,a
                           000847  1985 	C$crc_4b6b.c$162$3$53 ==.
                                   1986 ;	crc_4b6b.c:162: while( intBitsAvailable >= 6 ) {
      000847 90r02r31         [24] 1987 	mov	dptr,#_decode4b6b_intBuffer_1_51
      00084A E0               [24] 1988 	movx	a,@dptr
      00084B F5*15            [12] 1989 	mov	_decode4b6b_sloc2_1_0,a
      00084D A3               [24] 1990 	inc	dptr
      00084E E0               [24] 1991 	movx	a,@dptr
      00084F F5*16            [12] 1992 	mov	(_decode4b6b_sloc2_1_0 + 1),a
      000851 90r02r38         [24] 1993 	mov	dptr,#_decode4b6b_outBytes_1_51
      000854 E0               [24] 1994 	movx	a,@dptr
      000855 F5*17            [12] 1995 	mov	_decode4b6b_sloc3_1_0,a
      000857 90r02r33         [24] 1996 	mov	dptr,#_decode4b6b_intBitsAvailable_1_51
      00085A E0               [24] 1997 	movx	a,@dptr
      00085B F5*18            [12] 1998 	mov	_decode4b6b_sloc4_1_0,a
      00085D A3               [24] 1999 	inc	dptr
      00085E E0               [24] 2000 	movx	a,@dptr
      00085F F5*19            [12] 2001 	mov	(_decode4b6b_sloc4_1_0 + 1),a
                           000861  2002 	C$crc_4b6b.c$178$1$51 ==.
                                   2003 ;	crc_4b6b.c:178: *bytesOut = outBytes;
      000861 D0 01            [24] 2004 	pop	ar1
      000863 D0 00            [24] 2005 	pop	ar0
                           000865  2006 	C$crc_4b6b.c$162$2$52 ==.
                                   2007 ;	crc_4b6b.c:162: while( intBitsAvailable >= 6 ) {
      000865                       2008 00103$:
      000865 C3               [12] 2009 	clr	c
      000866 E5*18            [12] 2010 	mov	a,_decode4b6b_sloc4_1_0
      000868 94 06            [12] 2011 	subb	a,#0x06
      00086A E5*19            [12] 2012 	mov	a,(_decode4b6b_sloc4_1_0 + 1)
      00086C 64 80            [12] 2013 	xrl	a,#0x80
      00086E 94 80            [12] 2014 	subb	a,#0x80
      000870 50 03            [24] 2015 	jnc	00130$
      000872 02r09r20         [24] 2016 	ljmp	00117$
      000875                       2017 00130$:
                           000875  2018 	C$crc_4b6b.c$163$3$53 ==.
                                   2019 ;	crc_4b6b.c:163: symbol = intBuffer >> (intBitsAvailable - 6);
      000875 E5*18            [12] 2020 	mov	a,_decode4b6b_sloc4_1_0
      000877 24 FA            [12] 2021 	add	a,#0xFA
      000879 FE               [12] 2022 	mov	r6,a
      00087A E5*19            [12] 2023 	mov	a,(_decode4b6b_sloc4_1_0 + 1)
      00087C 34 FF            [12] 2024 	addc	a,#0xFF
      00087E 8E F0            [24] 2025 	mov	b,r6
      000880 05 F0            [12] 2026 	inc	b
      000882 AE*15            [24] 2027 	mov	r6,_decode4b6b_sloc2_1_0
      000884 E5*16            [12] 2028 	mov	a,(_decode4b6b_sloc2_1_0 + 1)
      000886 FF               [12] 2029 	mov	r7,a
      000887 33               [12] 2030 	rlc	a
      000888 92 D2            [24] 2031 	mov	ov,c
      00088A 80 08            [24] 2032 	sjmp	00132$
      00088C                       2033 00131$:
      00088C A2 D2            [12] 2034 	mov	c,ov
      00088E EF               [12] 2035 	mov	a,r7
      00088F 13               [12] 2036 	rrc	a
      000890 FF               [12] 2037 	mov	r7,a
      000891 EE               [12] 2038 	mov	a,r6
      000892 13               [12] 2039 	rrc	a
      000893 FE               [12] 2040 	mov	r6,a
      000894                       2041 00132$:
      000894 D5 F0 F5         [24] 2042 	djnz	b,00131$
      000897 90r02r35         [24] 2043 	mov	dptr,#_decode4b6b_symbol_1_51
      00089A EE               [12] 2044 	mov	a,r6
      00089B F0               [24] 2045 	movx	@dptr,a
                           00089C  2046 	C$crc_4b6b.c$164$3$53 ==.
                                   2047 ;	crc_4b6b.c:164: symbol &= 0x3F;
      00089C 53 06 3F         [24] 2048 	anl	ar6,#0x3F
      00089F 90r02r35         [24] 2049 	mov	dptr,#_decode4b6b_symbol_1_51
      0008A2 EE               [12] 2050 	mov	a,r6
      0008A3 F0               [24] 2051 	movx	@dptr,a
                           0008A4  2052 	C$crc_4b6b.c$165$3$53 ==.
                                   2053 ;	crc_4b6b.c:165: decode4b6bsymbol( symbol, &symbol );
      0008A4 90r02r12         [24] 2054 	mov	dptr,#_decode4b6bsymbol_PARM_2
      0008A7 74r35            [12] 2055 	mov	a,#_decode4b6b_symbol_1_51
      0008A9 F0               [24] 2056 	movx	@dptr,a
      0008AA 74s02            [12] 2057 	mov	a,#(_decode4b6b_symbol_1_51 >> 8)
      0008AC A3               [24] 2058 	inc	dptr
      0008AD F0               [24] 2059 	movx	@dptr,a
      0008AE E4               [12] 2060 	clr	a
      0008AF A3               [24] 2061 	inc	dptr
      0008B0 F0               [24] 2062 	movx	@dptr,a
      0008B1 8E 82            [24] 2063 	mov	dpl,r6
      0008B3 C0 04            [24] 2064 	push	ar4
      0008B5 C0 03            [24] 2065 	push	ar3
      0008B7 C0 02            [24] 2066 	push	ar2
      0008B9 C0 01            [24] 2067 	push	ar1
      0008BB C0 00            [24] 2068 	push	ar0
      0008BD 12r02r8B         [24] 2069 	lcall	_decode4b6bsymbol
      0008C0 D0 00            [24] 2070 	pop	ar0
      0008C2 D0 01            [24] 2071 	pop	ar1
      0008C4 D0 02            [24] 2072 	pop	ar2
      0008C6 D0 03            [24] 2073 	pop	ar3
      0008C8 D0 04            [24] 2074 	pop	ar4
                           0008CA  2075 	C$crc_4b6b.c$166$3$53 ==.
                                   2076 ;	crc_4b6b.c:166: recByte = recByte << 4;
      0008CA 90r02r36         [24] 2077 	mov	dptr,#_decode4b6b_recByte_1_51
      0008CD E0               [24] 2078 	movx	a,@dptr
      0008CE C4               [12] 2079 	swap	a
      0008CF 54 F0            [12] 2080 	anl	a,#0xF0
      0008D1 F0               [24] 2081 	movx	@dptr,a
                           0008D2  2082 	C$crc_4b6b.c$167$3$53 ==.
                                   2083 ;	crc_4b6b.c:167: recByte &= 0xF0;
      0008D2 E0               [24] 2084 	movx	a,@dptr
      0008D3 FF               [12] 2085 	mov	r7,a
      0008D4 74 F0            [12] 2086 	mov	a,#0xF0
      0008D6 5F               [12] 2087 	anl	a,r7
      0008D7 F0               [24] 2088 	movx	@dptr,a
                           0008D8  2089 	C$crc_4b6b.c$168$3$53 ==.
                                   2090 ;	crc_4b6b.c:168: recByte |= symbol;
      0008D8 90r02r35         [24] 2091 	mov	dptr,#_decode4b6b_symbol_1_51
      0008DB E0               [24] 2092 	movx	a,@dptr
      0008DC FF               [12] 2093 	mov	r7,a
      0008DD 90r02r36         [24] 2094 	mov	dptr,#_decode4b6b_recByte_1_51
      0008E0 E0               [24] 2095 	movx	a,@dptr
      0008E1 FE               [12] 2096 	mov	r6,a
      0008E2 4F               [12] 2097 	orl	a,r7
      0008E3 F0               [24] 2098 	movx	@dptr,a
                           0008E4  2099 	C$crc_4b6b.c$169$3$53 ==.
                                   2100 ;	crc_4b6b.c:169: nibbleFlag ^= 1;
      0008E4 90r02r37         [24] 2101 	mov	dptr,#_decode4b6b_nibbleFlag_1_51
      0008E7 E0               [24] 2102 	movx	a,@dptr
      0008E8 FF               [12] 2103 	mov	r7,a
      0008E9 74 01            [12] 2104 	mov	a,#0x01
      0008EB 6F               [12] 2105 	xrl	a,r7
      0008EC F0               [24] 2106 	movx	@dptr,a
                           0008ED  2107 	C$crc_4b6b.c$170$3$53 ==.
                                   2108 ;	crc_4b6b.c:170: if( nibbleFlag == 0 ) {
      0008ED E0               [24] 2109 	movx	a,@dptr
      0008EE FF               [12] 2110 	mov	r7,a
      0008EF 70 20            [24] 2111 	jnz	00102$
                           0008F1  2112 	C$crc_4b6b.c$171$1$51 ==.
                                   2113 ;	crc_4b6b.c:171: messageOut[outBytes] = recByte;
      0008F1 C0 00            [24] 2114 	push	ar0
      0008F3 C0 01            [24] 2115 	push	ar1
      0008F5 E5*17            [12] 2116 	mov	a,_decode4b6b_sloc3_1_0
      0008F7 2A               [12] 2117 	add	a,r2
      0008F8 FD               [12] 2118 	mov	r5,a
      0008F9 E4               [12] 2119 	clr	a
      0008FA 3B               [12] 2120 	addc	a,r3
      0008FB FE               [12] 2121 	mov	r6,a
      0008FC 8C 07            [24] 2122 	mov	ar7,r4
      0008FE 90r02r36         [24] 2123 	mov	dptr,#_decode4b6b_recByte_1_51
      000901 E0               [24] 2124 	movx	a,@dptr
      000902 8D 82            [24] 2125 	mov	dpl,r5
      000904 8E 83            [24] 2126 	mov	dph,r6
      000906 8F F0            [24] 2127 	mov	b,r7
      000908 12r00r00         [24] 2128 	lcall	__gptrput
                           00090B  2129 	C$crc_4b6b.c$172$4$54 ==.
                                   2130 ;	crc_4b6b.c:172: outBytes++;
      00090B 05*17            [12] 2131 	inc	_decode4b6b_sloc3_1_0
                           00090D  2132 	C$crc_4b6b.c$178$1$51 ==.
                                   2133 ;	crc_4b6b.c:178: *bytesOut = outBytes;
      00090D D0 01            [24] 2134 	pop	ar1
      00090F D0 00            [24] 2135 	pop	ar0
                           000911  2136 	C$crc_4b6b.c$172$3$53 ==.
                                   2137 ;	crc_4b6b.c:172: outBytes++;
      000911                       2138 00102$:
                           000911  2139 	C$crc_4b6b.c$174$3$53 ==.
                                   2140 ;	crc_4b6b.c:174: intBitsAvailable -= 6;
      000911 E5*18            [12] 2141 	mov	a,_decode4b6b_sloc4_1_0
      000913 24 FA            [12] 2142 	add	a,#0xFA
      000915 F5*18            [12] 2143 	mov	_decode4b6b_sloc4_1_0,a
      000917 E5*19            [12] 2144 	mov	a,(_decode4b6b_sloc4_1_0 + 1)
      000919 34 FF            [12] 2145 	addc	a,#0xFF
      00091B F5*19            [12] 2146 	mov	(_decode4b6b_sloc4_1_0 + 1),a
      00091D 02r08r65         [24] 2147 	ljmp	00103$
      000920                       2148 00117$:
      000920 90r02r38         [24] 2149 	mov	dptr,#_decode4b6b_outBytes_1_51
      000923 E5*17            [12] 2150 	mov	a,_decode4b6b_sloc3_1_0
      000925 F0               [24] 2151 	movx	@dptr,a
      000926 90r02r33         [24] 2152 	mov	dptr,#_decode4b6b_intBitsAvailable_1_51
      000929 E5*18            [12] 2153 	mov	a,_decode4b6b_sloc4_1_0
      00092B F0               [24] 2154 	movx	@dptr,a
      00092C E5*19            [12] 2155 	mov	a,(_decode4b6b_sloc4_1_0 + 1)
      00092E A3               [24] 2156 	inc	dptr
      00092F F0               [24] 2157 	movx	@dptr,a
                           000930  2158 	C$crc_4b6b.c$157$1$51 ==.
                                   2159 ;	crc_4b6b.c:157: for( i = 0; i < bytesIn; i++ ) {
      000930 05*10            [12] 2160 	inc	_decode4b6b_sloc0_1_0
      000932 E4               [12] 2161 	clr	a
      000933 B5*10 02         [24] 2162 	cjne	a,_decode4b6b_sloc0_1_0,00134$
      000936 05*11            [12] 2163 	inc	(_decode4b6b_sloc0_1_0 + 1)
      000938                       2164 00134$:
      000938 02r07rE4         [24] 2165 	ljmp	00108$
      00093B                       2166 00106$:
                           00093B  2167 	C$crc_4b6b.c$178$1$51 ==.
                                   2168 ;	crc_4b6b.c:178: *bytesOut = outBytes;
      00093B 90r02r2B         [24] 2169 	mov	dptr,#_decode4b6b_PARM_4
      00093E E0               [24] 2170 	movx	a,@dptr
      00093F FD               [12] 2171 	mov	r5,a
      000940 A3               [24] 2172 	inc	dptr
      000941 E0               [24] 2173 	movx	a,@dptr
      000942 FE               [12] 2174 	mov	r6,a
      000943 A3               [24] 2175 	inc	dptr
      000944 E0               [24] 2176 	movx	a,@dptr
      000945 FF               [12] 2177 	mov	r7,a
      000946 90r02r38         [24] 2178 	mov	dptr,#_decode4b6b_outBytes_1_51
      000949 E0               [24] 2179 	movx	a,@dptr
      00094A FC               [12] 2180 	mov	r4,a
      00094B 33               [12] 2181 	rlc	a
      00094C 95 E0            [12] 2182 	subb	a,acc
      00094E FB               [12] 2183 	mov	r3,a
      00094F 8D 82            [24] 2184 	mov	dpl,r5
      000951 8E 83            [24] 2185 	mov	dph,r6
      000953 8F F0            [24] 2186 	mov	b,r7
      000955 EC               [12] 2187 	mov	a,r4
      000956 12r00r00         [24] 2188 	lcall	__gptrput
      000959 A3               [24] 2189 	inc	dptr
      00095A EB               [12] 2190 	mov	a,r3
      00095B 12r00r00         [24] 2191 	lcall	__gptrput
                           00095E  2192 	C$crc_4b6b.c$179$1$51 ==.
                           00095E  2193 	XG$decode4b6b$0$0 ==.
      00095E 22               [24] 2194 	ret
                                   2195 ;------------------------------------------------------------
                                   2196 ;Allocation info for local variables in function 'sleep'
                                   2197 ;------------------------------------------------------------
                                   2198 ;time                      Allocated with name '_sleep_time_1_55'
                                   2199 ;i                         Allocated with name '_sleep_i_1_56'
                                   2200 ;j                         Allocated with name '_sleep_j_1_56'
                                   2201 ;------------------------------------------------------------
                           00095F  2202 	G$sleep$0$0 ==.
                           00095F  2203 	C$crc_4b6b.c$181$1$51 ==.
                                   2204 ;	crc_4b6b.c:181: void sleep( int time ) {
                                   2205 ;	-----------------------------------------
                                   2206 ;	 function sleep
                                   2207 ;	-----------------------------------------
      00095F                       2208 _sleep:
      00095F AF 83            [24] 2209 	mov	r7,dph
      000961 E5 82            [12] 2210 	mov	a,dpl
      000963 90r02r39         [24] 2211 	mov	dptr,#_sleep_time_1_55
      000966 F0               [24] 2212 	movx	@dptr,a
      000967 EF               [12] 2213 	mov	a,r7
      000968 A3               [24] 2214 	inc	dptr
      000969 F0               [24] 2215 	movx	@dptr,a
                           00096A  2216 	C$crc_4b6b.c$184$1$56 ==.
                                   2217 ;	crc_4b6b.c:184: for( j = 0; j < time * 4; j++ ) for( i = 0; i < 0xFFFF; i++ ) Nop( );
      00096A 90r02r39         [24] 2218 	mov	dptr,#_sleep_time_1_55
      00096D E0               [24] 2219 	movx	a,@dptr
      00096E FE               [12] 2220 	mov	r6,a
      00096F A3               [24] 2221 	inc	dptr
      000970 E0               [24] 2222 	movx	a,@dptr
      000971 CE               [12] 2223 	xch	a,r6
      000972 25 E0            [12] 2224 	add	a,acc
      000974 CE               [12] 2225 	xch	a,r6
      000975 33               [12] 2226 	rlc	a
      000976 CE               [12] 2227 	xch	a,r6
      000977 25 E0            [12] 2228 	add	a,acc
      000979 CE               [12] 2229 	xch	a,r6
      00097A 33               [12] 2230 	rlc	a
      00097B FF               [12] 2231 	mov	r7,a
      00097C 7C 00            [12] 2232 	mov	r4,#0x00
      00097E 7D 00            [12] 2233 	mov	r5,#0x00
      000980                       2234 00107$:
      000980 C3               [12] 2235 	clr	c
      000981 EC               [12] 2236 	mov	a,r4
      000982 9E               [12] 2237 	subb	a,r6
      000983 ED               [12] 2238 	mov	a,r5
      000984 64 80            [12] 2239 	xrl	a,#0x80
      000986 8F F0            [24] 2240 	mov	b,r7
      000988 63 F0 80         [24] 2241 	xrl	b,#0x80
      00098B 95 F0            [12] 2242 	subb	a,b
      00098D 50 15            [24] 2243 	jnc	00109$
      00098F 7A FF            [12] 2244 	mov	r2,#0xFF
      000991 7B FF            [12] 2245 	mov	r3,#0xFF
      000993                       2246 00105$:
      000993 00               [12] 2247 	nop 
      000994 1A               [12] 2248 	dec	r2
      000995 BA FF 01         [24] 2249 	cjne	r2,#0xFF,00126$
      000998 1B               [12] 2250 	dec	r3
      000999                       2251 00126$:
      000999 EA               [12] 2252 	mov	a,r2
      00099A 4B               [12] 2253 	orl	a,r3
      00099B 70 F6            [24] 2254 	jnz	00105$
      00099D 0C               [12] 2255 	inc	r4
      00099E BC 00 DF         [24] 2256 	cjne	r4,#0x00,00107$
      0009A1 0D               [12] 2257 	inc	r5
      0009A2 80 DC            [24] 2258 	sjmp	00107$
      0009A4                       2259 00109$:
                           0009A4  2260 	C$crc_4b6b.c$185$1$56 ==.
                           0009A4  2261 	XG$sleep$0$0 ==.
      0009A4 22               [24] 2262 	ret
                                   2263 	.area CSEG    (CODE)
                                   2264 	.area CONST   (CODE)
                                   2265 	.area XINIT   (CODE)
                                   2266 	.area CABS    (ABS,CODE)
